{"mappings":"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","sources":["src/components/server-watcher.js","node_modules/@vaadin/vaadin-lumo-styles/badge.js","src/styles/styles.js","node_modules/@vaadin/grid/vaadin-grid.js","node_modules/@vaadin/grid/theme/lumo/vaadin-grid.js","node_modules/@vaadin/checkbox/theme/lumo/vaadin-checkbox.js","node_modules/@vaadin/checkbox/theme/lumo/vaadin-checkbox-styles.js","node_modules/@vaadin/checkbox/src/vaadin-checkbox.js","node_modules/@vaadin/field-base/src/checked-mixin.js","node_modules/@vaadin/field-base/src/delegate-state-mixin.js","node_modules/@vaadin/field-base/src/input-mixin.js","node_modules/@vaadin/field-base/src/delegate-focus-mixin.js","node_modules/@vaadin/field-base/src/input-controller.js","node_modules/@vaadin/component-base/src/slot-controller.js","node_modules/@vaadin/field-base/src/label-mixin.js","node_modules/@vaadin/field-base/src/label-controller.js","node_modules/@vaadin/field-base/src/labelled-input-controller.js","node_modules/@vaadin/field-base/src/slot-target-controller.js","node_modules/@vaadin/grid/theme/lumo/vaadin-grid-styles.js","node_modules/@vaadin/grid/src/vaadin-grid.js","node_modules/@vaadin/grid/src/vaadin-grid-column.js","node_modules/@vaadin/component-base/src/templates.js","node_modules/@vaadin/grid/src/vaadin-grid-styles.js","node_modules/@vaadin/component-base/src/virtualizer.js","node_modules/@vaadin/component-base/src/virtualizer-iron-list-adapter.js","node_modules/@vaadin/component-base/src/iron-list-core.js","node_modules/@vaadin/grid/src/vaadin-grid-a11y-mixin.js","node_modules/@vaadin/grid/src/vaadin-grid-active-item-mixin.js","node_modules/@vaadin/grid/src/vaadin-grid-array-data-provider-mixin.js","node_modules/@vaadin/grid/src/array-data-provider.js","node_modules/@vaadin/grid/src/vaadin-grid-column-reordering-mixin.js","node_modules/@vaadin/grid/src/vaadin-grid-helpers.js","node_modules/@vaadin/grid/src/vaadin-grid-column-resizing-mixin.js","node_modules/@vaadin/grid/src/vaadin-grid-data-provider-mixin.js","node_modules/@vaadin/grid/src/vaadin-grid-drag-and-drop-mixin.js","node_modules/@vaadin/grid/src/vaadin-grid-dynamic-columns-mixin.js","node_modules/@vaadin/grid/src/vaadin-grid-event-context-mixin.js","node_modules/@vaadin/grid/src/vaadin-grid-filter-mixin.js","node_modules/@vaadin/grid/src/vaadin-grid-keyboard-navigation-mixin.js","node_modules/@vaadin/grid/src/vaadin-grid-row-details-mixin.js","node_modules/@vaadin/grid/src/vaadin-grid-scroll-mixin.js","node_modules/@vaadin/grid/src/vaadin-grid-selection-mixin.js","node_modules/@vaadin/grid/src/vaadin-grid-sort-mixin.js","node_modules/@vaadin/grid/src/vaadin-grid-styling-mixin.js","node_modules/@vaadin/grid/vaadin-grid-sort-column.js","node_modules/@vaadin/grid/theme/lumo/vaadin-grid-sort-column.js","node_modules/@vaadin/grid/theme/lumo/vaadin-grid-sorter.js","node_modules/@vaadin/grid/theme/lumo/vaadin-grid-sorter-styles.js","node_modules/@vaadin/grid/src/vaadin-grid-sorter.js","node_modules/@vaadin/grid/src/vaadin-grid-sort-column.js","node_modules/@vaadin/grid/vaadin-grid-column.js","node_modules/@vaadin/grid/theme/lumo/vaadin-grid-column.js","node_modules/@vaadin/vertical-layout/vaadin-vertical-layout.js","node_modules/@vaadin/vertical-layout/theme/lumo/vaadin-vertical-layout.js","node_modules/@vaadin/vertical-layout/theme/lumo/vaadin-vertical-layout-styles.js","node_modules/@vaadin/vertical-layout/src/vaadin-vertical-layout.js","node_modules/@vaadin/text-field/vaadin-text-field.js","node_modules/@vaadin/text-field/theme/lumo/vaadin-text-field.js","node_modules/@vaadin/input-container/theme/lumo/vaadin-input-container.js","node_modules/@vaadin/input-container/theme/lumo/vaadin-input-container-styles.js","node_modules/@vaadin/input-container/src/vaadin-input-container.js","node_modules/@vaadin/text-field/theme/lumo/vaadin-text-field-styles.js","node_modules/@vaadin/vaadin-lumo-styles/mixins/input-field-shared.js","node_modules/@vaadin/vaadin-lumo-styles/mixins/field-button.js","node_modules/@vaadin/vaadin-lumo-styles/mixins/helper.js","node_modules/@vaadin/vaadin-lumo-styles/mixins/required-field.js","node_modules/@vaadin/text-field/src/vaadin-text-field.js","node_modules/@vaadin/field-base/src/input-field-mixin.js","node_modules/@vaadin/field-base/src/input-control-mixin.js","node_modules/@vaadin/field-base/src/field-mixin.js","node_modules/@vaadin/field-base/src/error-controller.js","node_modules/@vaadin/field-base/src/field-aria-controller.js","node_modules/@vaadin/field-base/src/utils.js","node_modules/@vaadin/field-base/src/helper-controller.js","node_modules/@vaadin/field-base/src/validate-mixin.js","node_modules/@vaadin/field-base/src/input-constraints-mixin.js","node_modules/@vaadin/field-base/src/pattern-mixin.js","node_modules/@vaadin/field-base/src/styles/input-field-shared-styles.js","node_modules/@vaadin/field-base/src/styles/clear-button-styles.js","node_modules/@vaadin/field-base/src/styles/field-shared-styles.js","node_modules/@vaadin/field-base/src/styles/input-field-container-styles.js","node_modules/@vaadin/select/vaadin-select.js","node_modules/@vaadin/select/theme/lumo/vaadin-select.js","node_modules/@vaadin/item/theme/lumo/vaadin-item.js","node_modules/@vaadin/item/theme/lumo/vaadin-item-styles.js","node_modules/@vaadin/item/src/vaadin-item.js","node_modules/@vaadin/list-box/theme/lumo/vaadin-list-box.js","node_modules/@vaadin/list-box/theme/lumo/vaadin-list-box-styles.js","node_modules/@vaadin/list-box/src/vaadin-list-box.js","node_modules/@vaadin/vaadin-list-mixin/vaadin-multi-select-list-mixin.js","node_modules/@vaadin/vaadin-overlay/theme/lumo/vaadin-overlay.js","node_modules/@vaadin/vaadin-overlay/theme/lumo/vaadin-overlay-styles.js","node_modules/@vaadin/vaadin-lumo-styles/mixins/overlay.js","node_modules/@vaadin/vaadin-overlay/src/vaadin-overlay.js","node_modules/@polymer/polymer/lib/utils/templatize.js","node_modules/@polymer/polymer/lib/mixins/mutable-data.js","node_modules/@vaadin/select/theme/lumo/vaadin-select-styles.js","node_modules/@vaadin/vaadin-lumo-styles/mixins/menu-overlay.js","node_modules/@vaadin/select/src/vaadin-select.js","node_modules/@vaadin/select/src/vaadin-select-item.js","node_modules/@vaadin/select/src/vaadin-select-list-box.js","node_modules/@vaadin/select/src/vaadin-select-overlay.js","node_modules/@vaadin/vaadin-overlay/src/vaadin-overlay-position-mixin.js","node_modules/@vaadin/component-base/src/dom-utils.js","node_modules/@vaadin/select/src/vaadin-select-value-button.js","node_modules/@vaadin/component-base/src/media-query-controller.js","node_modules/@vaadin/component-base/src/slot-mixin.js","src/components/my-dialog.js","node_modules/lit-html/src/directives/guard.ts","node_modules/@vaadin/dialog/vaadin-dialog.js","node_modules/@vaadin/dialog/theme/lumo/vaadin-dialog.js","node_modules/@vaadin/dialog/theme/lumo/vaadin-dialog-styles.js","node_modules/@vaadin/dialog/src/vaadin-dialog.js","node_modules/@vaadin/dialog/src/vaadin-dialog-draggable-mixin.js","node_modules/@vaadin/dialog/src/vaadin-dialog-utils.js","node_modules/@vaadin/dialog/src/vaadin-dialog-resizable-mixin.js"],"sourcesContent":["import { LitElement, html, css, render } from \"lit\";\r\nimport { badge } from \"@vaadin/vaadin-lumo-styles/badge\";\r\nimport styles from \"../styles/styles\";\r\n\r\nimport \"@vaadin/grid\";\r\nimport \"@vaadin/grid/vaadin-grid-sort-column.js\";\r\nimport \"@vaadin/grid/vaadin-grid-column.js\";\r\nimport \"@vaadin/horizontal-layout\";\r\nimport \"@vaadin/vertical-layout\";\r\nimport \"@vaadin/button\";\r\nimport \"@vaadin/text-field\";\r\nimport \"@vaadin/select\";\r\nimport \"./my-dialog\";\r\n\r\nclass ServerWatcher extends LitElement {\r\n  static properties = {\r\n    _dialog: { type: Object, state: true },\r\n    _newserverName: { type: String, state: true },\r\n    _newserverIP: { type: String, state: true },\r\n    items: { type: Array, state: true },\r\n    _selectedPingInterval: { type: String, state: true },\r\n    pingIntervals: { type: Array, state: true },\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    const serverWatcherList = localStorage.getItem(\"server-watcher-list\");\r\n    this.items = serverWatcherList ? JSON.parse(serverWatcherList) : [];\r\n\r\n    this._selectedPingInterval =\r\n      localStorage.getItem(\"server-watcher-selected-ping-interval\") ??\r\n      undefined;\r\n\r\n    this.pingIntervals = [\r\n      {\r\n        label: \"Every minute\",\r\n        value: \"60000\",\r\n      },\r\n      {\r\n        label: \"Every 5 minutes\",\r\n        value: \"300000\",\r\n      },\r\n      {\r\n        label: \"Every 10 minutes\",\r\n        value: \"600000\",\r\n      },\r\n      {\r\n        label: \"Every 30 minutes\",\r\n        value: \"1800000\",\r\n      },\r\n      {\r\n        label: \"Every hour\",\r\n        value: \"3600000\",\r\n      },\r\n    ];\r\n  }\r\n\r\n  firstUpdated() {\r\n    this._dialog = this.shadowRoot?.querySelector(\"my-dialog\");\r\n  }\r\n\r\n  static styles = [\r\n    styles,\r\n    badge,\r\n    css`\r\n      vaadin-horizontal-layout[action-bar] {\r\n        align-items: flex-end;\r\n        justify-content: space-between;\r\n        margin-bottom: 24px;\r\n      }\r\n\r\n      main {\r\n        margin: 24px 0;\r\n      }\r\n    `,\r\n  ];\r\n  render() {\r\n    return html`\r\n      <h1>Server Watcher</h1>\r\n\r\n      <vaadin-horizontal-layout action-bar theme=\"between\">\r\n        <vaadin-button\r\n          connect\r\n          theme=\"secondary\"\r\n          @click=\"${() => this._dialog.open()}\"\r\n          >Connect server</vaadin-button\r\n        >\r\n        <vaadin-select\r\n          label=\"Ping Interval\"\r\n          .items=\"${this.pingIntervals}\"\r\n          @value-changed=${(event) => {\r\n            this._selectedPingInterval = event.target.value;\r\n            localStorage.setItem(\r\n              \"server-watcher-selected-ping-interval\",\r\n              event.target.value\r\n            );\r\n          }}\r\n          .value=\"${this._selectedPingInterval ??\r\n          this.pingIntervals[this.pingIntervals.length - 1].value}\"\r\n        ></vaadin-select>\r\n      </vaadin-horizontal-layout>\r\n\r\n      <vaadin-grid .items=\"${this.items}\">\r\n        <vaadin-grid-sort-column\r\n          header=\"Name\"\r\n          path=\"name\"\r\n          flex-grow=\"0\"\r\n          auto-width\r\n        ></vaadin-grid-sort-column>\r\n        <vaadin-grid-sort-column\r\n          header=\"IP Address\"\r\n          path=\"ipaddress\"\r\n          auto-width\r\n        ></vaadin-grid-sort-column>\r\n        <vaadin-grid-column\r\n          header=\"Status\"\r\n          .renderer=\"${this.statusRenderer}\"\r\n          auto-width\r\n        ></vaadin-grid-column>\r\n        <vaadin-grid-column\r\n          header=\"Actions\"\r\n          .renderer=\"${this.actionsRenderer}\"\r\n          auto-width\r\n        ></vaadin-grid-column>\r\n      </vaadin-grid>\r\n\r\n      <my-dialog\r\n        header=\"server\"\r\n        .body=${html`\r\n          <vaadin-vertical-layout\r\n            style=\" align-items: stretch;width: 300px;max-width: 100%;\"\r\n          >\r\n            <style>\r\n              h1 {\r\n                margin: 0;\r\n              }\r\n              main {\r\n                margin: 0 0 24px 0;\r\n                display: flex;\r\n                flex-direction: column;\r\n              }\r\n            </style>\r\n            <h1>server</h1>\r\n            <main>\r\n              <vaadin-text-field\r\n                @input=${(event) => {\r\n                  this._newserverName = event.target.value;\r\n                }}\r\n                label=\"Name\"\r\n              ></vaadin-text-field>\r\n              <vaadin-text-field\r\n                @input=${(event) => {\r\n                  this._newserverIP = event.target.value;\r\n                }}\r\n                label=\"IP Address\"\r\n              ></vaadin-text-field>\r\n            </main>\r\n\r\n            <vaadin-horizontal-layout\r\n              style=\"justify-content: end;\"\r\n              theme=\"spacing\"\r\n            >\r\n              <vaadin-button @click=\"${() => this._dialog.close()}\">\r\n                Cancel\r\n              </vaadin-button>\r\n              <vaadin-button\r\n                theme=\"primary\"\r\n                @click=\"${() => {\r\n                  this.items = [\r\n                    ...this.items,\r\n                    {\r\n                      name: this._newserverName,\r\n                      ipaddress: this._newserverIP,\r\n                      status: \"Pending\",\r\n                    },\r\n                  ];\r\n                  localStorage.setItem(\r\n                    \"server-watcher-list\",\r\n                    JSON.stringify(this.items)\r\n                  );\r\n                  this._newserverName = \"\";\r\n                  this._newserverIP = \"\";\r\n                  this._dialog.close();\r\n                }}\"\r\n              >\r\n                Add\r\n              </vaadin-button>\r\n            </vaadin-horizontal-layout>\r\n          </vaadin-vertical-layout>\r\n        `}\r\n        @opened-changed=${(e) => {\r\n          console.log(\"open changed\", e);\r\n        }}\r\n      >\r\n      </my-dialog>\r\n    `;\r\n  }\r\n\r\n  actionsRenderer = (root, _, model) => {\r\n    const server = model.item;\r\n    render(\r\n      html`\r\n        <vaadin-horizontal-layout theme=\"spacing\">\r\n          <vaadin-button title=\"Run\" theme=\"icon\" aria-label=\"Close\">\r\n            <vaadin-icon icon=\"vaadin:refresh\"></vaadin-icon>\r\n          </vaadin-button>\r\n          <vaadin-button\r\n            @click=${() => {\r\n              //TODO: open modal with textarea to take script to run\r\n              // If no script present fallback to ping\r\n            }}\r\n            title=\"Script\"\r\n            theme=\"icon\"\r\n            aria-label=\"Script\"\r\n          >\r\n            <vaadin-icon icon=\"vaadin:file-code\"></vaadin-icon>\r\n          </vaadin-button>\r\n          <vaadin-button\r\n            @click=${() => {\r\n              this.items = this.items.filter(\r\n                (i) => i.ipaddress !== server.ipaddress\r\n              );\r\n              localStorage.setItem(\r\n                \"server-watcher-list\",\r\n                JSON.stringify(this.items)\r\n              );\r\n            }}\r\n            title=\"Delete\"\r\n            theme=\"icon error\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <vaadin-icon icon=\"vaadin:trash\"></vaadin-icon>\r\n          </vaadin-button>\r\n        </vaadin-horizontal-layout>\r\n      `,\r\n      root\r\n    );\r\n  };\r\n\r\n  statusRenderer = (root, _, model) => {\r\n    const server = model.item;\r\n    render(\r\n      html`\r\n        <span\r\n          theme=\"badge ${server.status === \"Online\" ||\r\n          server.status === \"Pending\"\r\n            ? \"success\"\r\n            : \"error\"}\"\r\n          >${server.status}</span\r\n        >\r\n      `,\r\n      root\r\n    );\r\n  };\r\n}\r\n\r\ncustomElements.define(\"server-watcher\", ServerWatcher);\r\n","/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport './style.js';\nimport './color.js';\nimport './typography.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst badge = css`\n  [theme~='badge'] {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    padding: 0.4em calc(0.5em + var(--lumo-border-radius-s) / 4);\n    color: var(--lumo-primary-text-color);\n    background-color: var(--lumo-primary-color-10pct);\n    border-radius: var(--lumo-border-radius-s);\n    font-family: var(--lumo-font-family);\n    font-size: var(--lumo-font-size-s);\n    line-height: 1;\n    font-weight: 500;\n    text-transform: initial;\n    letter-spacing: initial;\n    min-width: calc(var(--lumo-line-height-xs) * 1em + 0.45em);\n  }\n\n  /* Ensure proper vertical alignment */\n  [theme~='badge']::before {\n    display: inline-block;\n    content: '\\\\2003';\n    width: 0;\n  }\n\n  [theme~='badge'][theme~='small'] {\n    font-size: var(--lumo-font-size-xxs);\n    line-height: 1;\n  }\n\n  /* Colors */\n\n  [theme~='badge'][theme~='success'] {\n    color: var(--lumo-success-text-color);\n    background-color: var(--lumo-success-color-10pct);\n  }\n\n  [theme~='badge'][theme~='error'] {\n    color: var(--lumo-error-text-color);\n    background-color: var(--lumo-error-color-10pct);\n  }\n\n  [theme~='badge'][theme~='contrast'] {\n    color: var(--lumo-contrast-80pct);\n    background-color: var(--lumo-contrast-5pct);\n  }\n\n  /* Primary */\n\n  [theme~='badge'][theme~='primary'] {\n    color: var(--lumo-primary-contrast-color);\n    background-color: var(--lumo-primary-color);\n  }\n\n  [theme~='badge'][theme~='success'][theme~='primary'] {\n    color: var(--lumo-success-contrast-color);\n    background-color: var(--lumo-success-color);\n  }\n\n  [theme~='badge'][theme~='error'][theme~='primary'] {\n    color: var(--lumo-error-contrast-color);\n    background-color: var(--lumo-error-color);\n  }\n\n  [theme~='badge'][theme~='contrast'][theme~='primary'] {\n    color: var(--lumo-base-color);\n    background-color: var(--lumo-contrast);\n  }\n\n  /* Links */\n\n  [theme~='badge'][href]:hover {\n    text-decoration: none;\n  }\n\n  /* Icon */\n\n  [theme~='badge'] vaadin-icon,\n  [theme~='badge'] iron-icon {\n    margin: -0.25em 0;\n    --iron-icon-width: 1.5em;\n    --iron-icon-height: 1.5em;\n  }\n\n  [theme~='badge'] vaadin-icon:first-child,\n  [theme~='badge'] iron-icon:first-child {\n    margin-left: -0.375em;\n  }\n\n  [theme~='badge'] vaadin-icon:last-child,\n  [theme~='badge'] iron-icon:last-child {\n    margin-right: -0.375em;\n  }\n\n  iron-icon[theme~='badge'][icon],\n  vaadin-icon[theme~='badge'][icon] {\n    min-width: 0;\n    padding: 0;\n    font-size: 1rem;\n    width: var(--lumo-icon-size-m);\n    height: var(--lumo-icon-size-m);\n  }\n\n  iron-icon[theme~='badge'][icon][theme~='small'],\n  vaadin-icon[theme~='badge'][icon][theme~='small'] {\n    width: var(--lumo-icon-size-s);\n    height: var(--lumo-icon-size-s);\n  }\n\n  /* Empty */\n\n  [theme~='badge']:not([icon]):empty {\n    min-width: 0;\n    width: 1em;\n    height: 1em;\n    padding: 0;\n    border-radius: 50%;\n    background-color: var(--lumo-primary-color);\n  }\n\n  [theme~='badge'][theme~='small']:not([icon]):empty {\n    width: 0.75em;\n    height: 0.75em;\n  }\n\n  [theme~='badge'][theme~='contrast']:not([icon]):empty {\n    background-color: var(--lumo-contrast);\n  }\n\n  [theme~='badge'][theme~='success']:not([icon]):empty {\n    background-color: var(--lumo-success-color);\n  }\n\n  [theme~='badge'][theme~='error']:not([icon]):empty {\n    background-color: var(--lumo-error-color);\n  }\n\n  /* Pill */\n\n  [theme~='badge'][theme~='pill'] {\n    --lumo-border-radius-s: 1em;\n  }\n\n  /* RTL specific styles */\n\n  [dir='rtl'][theme~='badge'] vaadin-icon:first-child,\n  [dir='rtl'][theme~='badge'] iron-icon:first-child {\n    margin-right: -0.375em;\n    margin-left: 0;\n  }\n\n  [dir='rtl'][theme~='badge'] vaadin-icon:last-child,\n  [dir='rtl'][theme~='badge'] iron-icon:last-child {\n    margin-left: -0.375em;\n    margin-right: 0;\n  }\n`;\n\nregisterStyles('', badge, { moduleId: 'lumo-badge' });\n\nexport { badge };\n","import { css } from \"lit\";\r\n\r\nconst styles = css`\r\n  :host {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 24px;\r\n  }\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  h5,\r\n  h6 {\r\n    font-family: \"Archivo\", sans-serif;\r\n  }\r\n`;\r\nexport default styles;\r\n","import './theme/lumo/vaadin-grid.js';\n\nexport * from './src/vaadin-grid-column.js';\nexport * from './src/vaadin-grid.js';\n","import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/font-icons.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport '@vaadin/checkbox/theme/lumo/vaadin-checkbox.js';\nimport './vaadin-grid-styles.js';\nimport '../../src/vaadin-grid.js';\n","import './vaadin-checkbox-styles.js';\nimport '../../src/vaadin-checkbox.js';\n","import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/font-icons.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles(\n  'vaadin-checkbox',\n  css`\n    :host {\n      color: var(--lumo-body-text-color);\n      font-size: var(--lumo-font-size-m);\n      font-family: var(--lumo-font-family);\n      line-height: var(--lumo-line-height-s);\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n      -webkit-tap-highlight-color: transparent;\n      -webkit-user-select: none;\n      -moz-user-select: none;\n      user-select: none;\n      cursor: default;\n      outline: none;\n    }\n\n    :host([has-label]) ::slotted(label) {\n      padding: var(--lumo-space-xs) var(--lumo-space-s) var(--lumo-space-xs) var(--lumo-space-xs);\n    }\n\n    [part='checkbox'] {\n      width: calc(var(--lumo-size-m) / 2);\n      height: calc(var(--lumo-size-m) / 2);\n      margin: var(--lumo-space-xs);\n      position: relative;\n      border-radius: var(--lumo-border-radius-s);\n      background-color: var(--lumo-contrast-20pct);\n      transition: transform 0.2s cubic-bezier(0.12, 0.32, 0.54, 2), background-color 0.15s;\n      line-height: 1.2;\n      cursor: var(--lumo-clickable-cursor);\n      flex: none;\n    }\n\n    :host([indeterminate]) [part='checkbox'],\n    :host([checked]) [part='checkbox'] {\n      background-color: var(--lumo-primary-color);\n    }\n\n    /* Needed to align the checkbox nicely on the baseline */\n    [part='checkbox']::before {\n      content: '\\\\2003';\n    }\n\n    /* Checkmark */\n    [part='checkbox']::after {\n      pointer-events: none;\n      font-family: 'lumo-icons';\n      content: var(--lumo-icons-checkmark);\n      color: var(--lumo-primary-contrast-color);\n      font-size: calc(var(--lumo-size-m) / 2 + 2px);\n      line-height: 1;\n      position: absolute;\n      top: -1px;\n      left: -1px;\n      contain: content;\n      opacity: 0;\n    }\n\n    :host([checked]) [part='checkbox']::after {\n      opacity: 1;\n    }\n\n    /* Indeterminate checkmark */\n    :host([indeterminate]) [part='checkbox']::after {\n      content: '';\n      opacity: 1;\n      top: 45%;\n      height: 10%;\n      left: 22%;\n      right: 22%;\n      width: auto;\n      border: 0;\n      background-color: var(--lumo-primary-contrast-color);\n    }\n\n    /* Focus ring */\n    :host([focus-ring]) [part='checkbox'] {\n      box-shadow: 0 0 0 1px var(--lumo-base-color), 0 0 0 3px var(--lumo-primary-color-50pct);\n    }\n\n    /* Disabled */\n    :host([disabled]) {\n      pointer-events: none;\n      color: var(--lumo-disabled-text-color);\n    }\n\n    :host([disabled]) ::slotted(label) {\n      color: inherit;\n    }\n\n    :host([disabled]) [part='checkbox'] {\n      background-color: var(--lumo-contrast-10pct);\n    }\n\n    :host([disabled]) [part='checkbox']::after {\n      color: var(--lumo-contrast-30pct);\n    }\n\n    :host([indeterminate][disabled]) [part='checkbox']::after {\n      background-color: var(--lumo-contrast-30pct);\n    }\n\n    /* RTL specific styles */\n    :host([dir='rtl'][has-label]) ::slotted(label) {\n      padding: var(--lumo-space-xs) var(--lumo-space-xs) var(--lumo-space-xs) var(--lumo-space-s);\n    }\n\n    /* Used for activation \"halo\" */\n    [part='checkbox']::before {\n      pointer-events: none;\n      color: transparent;\n      display: inline-block;\n      width: 100%;\n      height: 100%;\n      border-radius: inherit;\n      background-color: inherit;\n      transform: scale(1.4);\n      opacity: 0;\n      transition: transform 0.1s, opacity 0.8s;\n    }\n\n    /* Hover */\n    :host(:not([checked]):not([indeterminate]):not([disabled]):hover) [part='checkbox'] {\n      background-color: var(--lumo-contrast-30pct);\n    }\n\n    /* Disable hover for touch devices */\n    @media (pointer: coarse) {\n      :host(:not([checked]):not([indeterminate]):not([disabled]):hover) [part='checkbox'] {\n        background-color: var(--lumo-contrast-20pct);\n      }\n    }\n\n    /* Active */\n    :host([active]) [part='checkbox'] {\n      transform: scale(0.9);\n      transition-duration: 0.05s;\n    }\n\n    :host([active][checked]) [part='checkbox'] {\n      transform: scale(1.1);\n    }\n\n    :host([active]:not([checked])) [part='checkbox']::before {\n      transition-duration: 0.01s, 0.01s;\n      transform: scale(0);\n      opacity: 0.4;\n    }\n  `,\n  { moduleId: 'lumo-checkbox' },\n);\n","/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { ActiveMixin } from '@vaadin/component-base/src/active-mixin.js';\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { CheckedMixin } from '@vaadin/field-base/src/checked-mixin.js';\nimport { DelegateFocusMixin } from '@vaadin/field-base/src/delegate-focus-mixin.js';\nimport { InputController } from '@vaadin/field-base/src/input-controller.js';\nimport { LabelMixin } from '@vaadin/field-base/src/label-mixin.js';\nimport { LabelledInputController } from '@vaadin/field-base/src/labelled-input-controller.js';\nimport { SlotTargetController } from '@vaadin/field-base/src/slot-target-controller.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\n/**\n * `<vaadin-checkbox>` is an input field representing a binary choice.\n *\n * ```html\n * <vaadin-checkbox label=\"I accept the terms and conditions\"></vaadin-checkbox>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name   | Description\n * ------------|----------------\n * `checkbox`  | The wrapper element that contains slotted <input type=\"checkbox\">.\n *\n * The following state attributes are available for styling:\n *\n * Attribute       | Description | Part name\n * ----------------|-------------|--------------\n * `active`        | Set when the checkbox is pressed down, either with mouse, touch or the keyboard. | `:host`\n * `disabled`      | Set when the checkbox is disabled. | `:host`\n * `focus-ring`    | Set when the checkbox is focused using the keyboard. | `:host`\n * `focused`       | Set when the checkbox is focused. | `:host`\n * `indeterminate` | Set when the checkbox is in the indeterminate state. | `:host`\n * `checked`       | Set when the checkbox is checked. | `:host`\n * `has-label`     | Set when the checkbox has a label. | `:host`\n *\n * See [Styling Components](https://vaadin.com/docs/latest/ds/customization/styling-components) documentation.\n *\n * @fires {CustomEvent} checked-changed - Fired when the `checked` property changes.\n * @fires {CustomEvent} indeterminate-changed - Fired when the `indeterminate` property changes.\n *\n * @extends HTMLElement\n * @mixes ControllerMixin\n * @mixes ThemableMixin\n * @mixes ElementMixin\n * @mixes ActiveMixin\n * @mixes DelegateFocusMixin\n * @mixes CheckedMixin\n * @mixes LabelMixin\n */\nclass Checkbox extends LabelMixin(\n  CheckedMixin(DelegateFocusMixin(ActiveMixin(ElementMixin(ThemableMixin(ControllerMixin(PolymerElement)))))),\n) {\n  static get is() {\n    return 'vaadin-checkbox';\n  }\n\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: inline-block;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        :host([disabled]) {\n          -webkit-tap-highlight-color: transparent;\n        }\n\n        .vaadin-checkbox-container {\n          display: grid;\n          grid-template-columns: auto 1fr;\n          align-items: baseline;\n        }\n\n        .vaadin-checkbox-wrapper {\n          position: relative;\n          height: 100%;\n        }\n\n        /* visually hidden */\n        ::slotted(input) {\n          position: absolute;\n          top: 0;\n          left: 0;\n          right: 0;\n          width: 100%;\n          height: 100%;\n          opacity: 0;\n          cursor: inherit;\n          margin: 0;\n        }\n      </style>\n      <div class=\"vaadin-checkbox-container\">\n        <div class=\"vaadin-checkbox-wrapper\">\n          <div part=\"checkbox\"></div>\n          <slot name=\"input\"></slot>\n        </div>\n\n        <slot name=\"label\"></slot>\n\n        <div style=\"display: none !important\">\n          <slot id=\"noop\"></slot>\n        </div>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      /**\n       * True if the checkbox is in the indeterminate state which means\n       * it is not possible to say whether it is checked or unchecked.\n       * The state is reset once the user switches the checkbox by hand.\n       *\n       * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#Indeterminate_state_checkboxes\n       *\n       * @type {boolean}\n       */\n      indeterminate: {\n        type: Boolean,\n        notify: true,\n        value: false,\n        reflectToAttribute: true,\n      },\n\n      /**\n       * The name of the checkbox.\n       *\n       * @type {string}\n       */\n      name: {\n        type: String,\n        value: '',\n      },\n    };\n  }\n\n  /** @override */\n  static get delegateProps() {\n    return [...super.delegateProps, 'indeterminate'];\n  }\n\n  /** @override */\n  static get delegateAttrs() {\n    return [...super.delegateAttrs, 'name'];\n  }\n\n  constructor() {\n    super();\n\n    this._setType('checkbox');\n\n    // Set the string \"on\" as the default value for the checkbox following the HTML specification:\n    // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-default-on\n    this.value = 'on';\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n\n    if (!this._inputController) {\n      this._inputController = new InputController(this, (input) => {\n        this._setInputElement(input);\n        this._setFocusElement(input);\n        this.stateTarget = input;\n        this.ariaTarget = input;\n      });\n      this.addController(this._inputController);\n      this.addController(new LabelledInputController(this.inputElement, this._labelController));\n      this.addController(\n        new SlotTargetController(\n          this.$.noop,\n          () => this._labelController.node,\n          () => this.__warnDeprecated(),\n        ),\n      );\n    }\n  }\n\n  /** @private */\n  __warnDeprecated() {\n    console.warn(\n      `WARNING: Since Vaadin 22, placing the label as a direct child of a <vaadin-checkbox> is deprecated.\nPlease use <label slot=\"label\"> wrapper or the label property instead.`,\n    );\n  }\n\n  /**\n   * Extends the method from `ActiveMixin` in order to\n   * prevent setting the `active` attribute when interacting with a link inside the label.\n   *\n   * @param {Event} event\n   * @return {boolean}\n   * @protected\n   * @override\n   */\n  _shouldSetActive(event) {\n    if (event.target.localName === 'a') {\n      return false;\n    }\n\n    return super._shouldSetActive(event);\n  }\n\n  /**\n   * Extends the method from `CheckedMixin` in order to\n   * reset the indeterminate state once the user switches the checkbox.\n   *\n   * @param {boolean} checked\n   * @protected\n   * @override\n   */\n  _toggleChecked(checked) {\n    if (this.indeterminate) {\n      this.indeterminate = false;\n    }\n\n    super._toggleChecked(checked);\n  }\n}\n\ncustomElements.define(Checkbox.is, Checkbox);\n\nexport { Checkbox };\n","/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\nimport { DisabledMixin } from '@vaadin/component-base/src/disabled-mixin.js';\nimport { DelegateStateMixin } from './delegate-state-mixin.js';\nimport { InputMixin } from './input-mixin.js';\n\n/**\n * A mixin to manage the checked state.\n *\n * @polymerMixin\n * @mixes DelegateStateMixin\n * @mixes DisabledMixin\n * @mixes InputMixin\n */\nexport const CheckedMixin = dedupingMixin(\n  (superclass) =>\n    class CheckedMixinClass extends DelegateStateMixin(DisabledMixin(InputMixin(superclass))) {\n      static get properties() {\n        return {\n          /**\n           * True if the element is checked.\n           * @type {boolean}\n           */\n          checked: {\n            type: Boolean,\n            value: false,\n            notify: true,\n            reflectToAttribute: true,\n          },\n        };\n      }\n\n      static get delegateProps() {\n        return [...super.delegateProps, 'checked'];\n      }\n\n      /**\n       * @protected\n       * @override\n       */\n      _onChange(event) {\n        this._toggleChecked(event.target.checked);\n      }\n\n      /** @protected */\n      _toggleChecked(checked) {\n        this.checked = checked;\n      }\n    },\n);\n","/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\n\n/**\n * A mixin to delegate properties and attributes to a target element.\n *\n * @polymerMixin\n */\nexport const DelegateStateMixin = dedupingMixin(\n  (superclass) =>\n    class DelegateStateMixinClass extends superclass {\n      static get properties() {\n        return {\n          /**\n           * A target element to which attributes and properties are delegated.\n           * @protected\n           */\n          stateTarget: {\n            type: Object,\n            observer: '_stateTargetChanged',\n          },\n        };\n      }\n\n      /**\n       * An array of the host attributes to delegate to the target element.\n       */\n      static get delegateAttrs() {\n        return [];\n      }\n\n      /**\n       * An array of the host properties to delegate to the target element.\n       */\n      static get delegateProps() {\n        return [];\n      }\n\n      /** @protected */\n      ready() {\n        super.ready();\n\n        this._createDelegateAttrsObserver();\n        this._createDelegatePropsObserver();\n      }\n\n      /** @protected */\n      _stateTargetChanged(target) {\n        if (target) {\n          this._ensureAttrsDelegated();\n          this._ensurePropsDelegated();\n        }\n      }\n\n      /** @protected */\n      _createDelegateAttrsObserver() {\n        this._createMethodObserver(`_delegateAttrsChanged(${this.constructor.delegateAttrs.join(', ')})`);\n      }\n\n      /** @protected */\n      _createDelegatePropsObserver() {\n        this._createMethodObserver(`_delegatePropsChanged(${this.constructor.delegateProps.join(', ')})`);\n      }\n\n      /** @protected */\n      _ensureAttrsDelegated() {\n        this.constructor.delegateAttrs.forEach((name) => {\n          this._delegateAttribute(name, this[name]);\n        });\n      }\n\n      /** @protected */\n      _ensurePropsDelegated() {\n        this.constructor.delegateProps.forEach((name) => {\n          this._delegateProperty(name, this[name]);\n        });\n      }\n\n      /** @protected */\n      _delegateAttrsChanged(...values) {\n        this.constructor.delegateAttrs.forEach((name, index) => {\n          this._delegateAttribute(name, values[index]);\n        });\n      }\n\n      /** @protected */\n      _delegatePropsChanged(...values) {\n        this.constructor.delegateProps.forEach((name, index) => {\n          this._delegateProperty(name, values[index]);\n        });\n      }\n\n      /** @protected */\n      _delegateAttribute(name, value) {\n        if (!this.stateTarget) {\n          return;\n        }\n\n        if (name === 'invalid') {\n          this._delegateAttribute('aria-invalid', value ? 'true' : false);\n        }\n\n        if (typeof value === 'boolean') {\n          this.stateTarget.toggleAttribute(name, value);\n        } else if (value) {\n          this.stateTarget.setAttribute(name, value);\n        } else {\n          this.stateTarget.removeAttribute(name);\n        }\n      }\n\n      /** @protected */\n      _delegateProperty(name, value) {\n        if (!this.stateTarget) {\n          return;\n        }\n\n        this.stateTarget[name] = value;\n      }\n    },\n);\n","/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\n\n/**\n * A mixin to store the reference to an input element\n * and add input and change event listeners to it.\n *\n * @polymerMixin\n */\nexport const InputMixin = dedupingMixin(\n  (superclass) =>\n    class InputMixinClass extends superclass {\n      static get properties() {\n        return {\n          /**\n           * A reference to the input element controlled by the mixin.\n           * Any component implementing this mixin is expected to provide it\n           * by using `this._setInputElement(input)` Polymer API.\n           *\n           * A typical case is using `InputController` that does this automatically.\n           * However, the input element does not have to always be native <input>:\n           * as an example, <vaadin-combo-box-light> accepts other components.\n           *\n           * @protected\n           * @type {!HTMLElement}\n           */\n          inputElement: {\n            type: Object,\n            readOnly: true,\n            observer: '_inputElementChanged',\n          },\n\n          /**\n           * String used to define input type.\n           * @protected\n           */\n          type: {\n            type: String,\n            readOnly: true,\n          },\n\n          /**\n           * The value of the field.\n           */\n          value: {\n            type: String,\n            value: '',\n            observer: '_valueChanged',\n            notify: true,\n          },\n        };\n      }\n\n      constructor() {\n        super();\n\n        this._boundOnInput = this._onInput.bind(this);\n        this._boundOnChange = this._onChange.bind(this);\n      }\n\n      /**\n       * Clear the value of the field.\n       */\n      clear() {\n        this.value = '';\n      }\n\n      /**\n       * Add event listeners to the input element instance.\n       * Override this method to add custom listeners.\n       * @param {!HTMLElement} input\n       */\n      _addInputListeners(input) {\n        input.addEventListener('input', this._boundOnInput);\n        input.addEventListener('change', this._boundOnChange);\n      }\n\n      /**\n       * Remove event listeners from the input element instance.\n       * @param {!HTMLElement} input\n       */\n      _removeInputListeners(input) {\n        input.removeEventListener('input', this._boundOnInput);\n        input.removeEventListener('change', this._boundOnChange);\n      }\n\n      /**\n       * A method to forward the value property set on the field\n       * programmatically back to the input element value.\n       * Override this method to perform additional checks,\n       * for example to skip this in certain conditions.\n       * @param {string} value\n       * @protected\n       * @override\n       */\n      _forwardInputValue(value) {\n        // Value might be set before an input element is initialized.\n        // This case should be handled separately by a component that\n        // implements this mixin, for example in `connectedCallback`.\n        if (!this.inputElement) {\n          return;\n        }\n\n        if (value != undefined) {\n          this.inputElement.value = value;\n        } else {\n          this.inputElement.value = '';\n        }\n      }\n\n      /** @protected */\n      _inputElementChanged(input, oldInput) {\n        if (input) {\n          this._addInputListeners(input);\n        } else if (oldInput) {\n          this._removeInputListeners(oldInput);\n        }\n      }\n\n      /**\n       * An input event listener used to update the field value.\n       * Override this method with an actual implementation.\n       * @param {Event} _event\n       * @protected\n       * @override\n       */\n      _onInput(event) {\n        // Ignore fake input events e.g. used by clear button.\n        this.__userInput = event.isTrusted;\n        this.value = event.target.value;\n        this.__userInput = false;\n      }\n\n      /**\n       * A change event listener.\n       * Override this method with an actual implementation.\n       * @param {Event} _event\n       * @protected\n       * @override\n       */\n      _onChange(_event) {}\n\n      /**\n       * Toggle the has-value attribute based on the value property.\n       * @param {boolean} hasValue\n       * @protected\n       */\n      _toggleHasValue(hasValue) {\n        this.toggleAttribute('has-value', hasValue);\n      }\n\n      /**\n       * Observer called when a value property changes.\n       * @param {string | undefined} newVal\n       * @param {string | undefined} oldVal\n       * @protected\n       * @override\n       */\n      _valueChanged(newVal, oldVal) {\n        this._toggleHasValue(newVal !== '' && newVal != null);\n\n        // Setting initial value to empty string, do nothing.\n        if (newVal === '' && oldVal === undefined) {\n          return;\n        }\n\n        // Value is set by the user, no need to sync it back to input.\n        if (this.__userInput) {\n          return;\n        }\n\n        // Setting a value programmatically, sync it to input element.\n        this._forwardInputValue(newVal);\n      }\n    },\n);\n","/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\nimport { FocusMixin } from '@vaadin/component-base/src/focus-mixin.js';\nimport { TabindexMixin } from '@vaadin/component-base/src/tabindex-mixin.js';\n\n/**\n * A mixin to forward focus to an element in the light DOM.\n *\n * @polymerMixin\n * @mixes FocusMixin\n * @mixes TabindexMixin\n */\nexport const DelegateFocusMixin = dedupingMixin(\n  (superclass) =>\n    class DelegateFocusMixinClass extends FocusMixin(TabindexMixin(superclass)) {\n      static get properties() {\n        return {\n          /**\n           * Specify that this control should have input focus when the page loads.\n           */\n          autofocus: {\n            type: Boolean,\n          },\n\n          /**\n           * A reference to the focusable element controlled by the mixin.\n           * It can be an input, textarea, button or any element with tabindex > -1.\n           *\n           * Any component implementing this mixin is expected to provide it\n           * by using `this._setFocusElement(input)` Polymer API.\n           *\n           * Toggling `tabindex` attribute on the host element propagates its value to `focusElement`.\n           *\n           * @protected\n           * @type {!HTMLElement}\n           */\n          focusElement: {\n            type: Object,\n            readOnly: true,\n            observer: '_focusElementChanged',\n          },\n\n          /**\n           * Override the property from `TabIndexMixin`\n           * to ensure the `tabindex` attribute of the focus element\n           * will be restored to `0` after re-enabling the element.\n           *\n           * @protected\n           * @override\n           */\n          _lastTabIndex: {\n            value: 0,\n          },\n        };\n      }\n\n      constructor() {\n        super();\n\n        this._boundOnBlur = this._onBlur.bind(this);\n        this._boundOnFocus = this._onFocus.bind(this);\n      }\n\n      /** @protected */\n      ready() {\n        super.ready();\n\n        if (this.autofocus && !this.disabled) {\n          requestAnimationFrame(() => {\n            this.focus();\n            this.setAttribute('focus-ring', '');\n          });\n        }\n      }\n\n      /**\n       * @protected\n       * @override\n       */\n      focus() {\n        if (!this.focusElement || this.disabled) {\n          return;\n        }\n\n        this.focusElement.focus();\n        this._setFocused(true);\n      }\n\n      /**\n       * @protected\n       * @override\n       */\n      blur() {\n        if (!this.focusElement) {\n          return;\n        }\n        this.focusElement.blur();\n        this._setFocused(false);\n      }\n\n      /**\n       * @protected\n       * @override\n       */\n      click() {\n        if (this.focusElement && !this.disabled) {\n          this.focusElement.click();\n        }\n      }\n\n      /** @protected */\n      _focusElementChanged(element, oldElement) {\n        if (element) {\n          element.disabled = this.disabled;\n          this._addFocusListeners(element);\n          this.__forwardTabIndex(this.tabindex);\n        } else if (oldElement) {\n          this._removeFocusListeners(oldElement);\n        }\n      }\n\n      /**\n       * @param {HTMLElement} element\n       * @protected\n       */\n      _addFocusListeners(element) {\n        element.addEventListener('blur', this._boundOnBlur);\n        element.addEventListener('focus', this._boundOnFocus);\n      }\n\n      /**\n       * @param {HTMLElement} element\n       * @protected\n       */\n      _removeFocusListeners(element) {\n        element.removeEventListener('blur', this._boundOnBlur);\n        element.removeEventListener('focus', this._boundOnFocus);\n      }\n\n      /**\n       * Focus event does not bubble, so we dispatch it manually\n       * on the host element to support adding focus listeners\n       * when the focusable element is placed in light DOM.\n       * @param {FocusEvent} event\n       * @protected\n       */\n      _onFocus(event) {\n        event.stopPropagation();\n        this.dispatchEvent(new Event('focus'));\n      }\n\n      /**\n       * Blur event does not bubble, so we dispatch it manually\n       * on the host element to support adding blur listeners\n       * when the focusable element is placed in light DOM.\n       * @param {FocusEvent} event\n       * @protected\n       */\n      _onBlur(event) {\n        event.stopPropagation();\n        this.dispatchEvent(new Event('blur'));\n      }\n\n      /**\n       * @param {Event} event\n       * @return {boolean}\n       * @protected\n       * @override\n       */\n      _shouldSetFocus(event) {\n        return event.target === this.focusElement;\n      }\n\n      /**\n       * @param {boolean} disabled\n       * @param {boolean} oldDisabled\n       * @protected\n       * @override\n       */\n      _disabledChanged(disabled, oldDisabled) {\n        super._disabledChanged(disabled, oldDisabled);\n\n        if (this.focusElement) {\n          this.focusElement.disabled = disabled;\n        }\n\n        if (disabled) {\n          this.blur();\n        }\n      }\n\n      /**\n       * Override an observer from `TabindexMixin`.\n       * Do not call super to remove tabindex attribute\n       * from the host after it has been forwarded.\n       * @param {string} tabindex\n       * @protected\n       * @override\n       */\n      _tabindexChanged(tabindex) {\n        this.__forwardTabIndex(tabindex);\n      }\n\n      /** @private */\n      __forwardTabIndex(tabindex) {\n        if (tabindex !== undefined && this.focusElement) {\n          this.focusElement.tabIndex = tabindex;\n\n          // Preserve tabindex=\"-1\" on the host element\n          if (tabindex !== -1) {\n            this.tabindex = undefined;\n          }\n        }\n\n        if (this.disabled && tabindex) {\n          // If tabindex attribute was changed while component was disabled\n          if (tabindex !== -1) {\n            this._lastTabIndex = tabindex;\n          }\n          this.tabindex = undefined;\n        }\n      }\n    },\n);\n","/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { SlotController } from '@vaadin/component-base/src/slot-controller.js';\n\n/**\n * A controller to create and initialize slotted `<input>` element.\n */\nexport class InputController extends SlotController {\n  constructor(host, callback) {\n    super(\n      host,\n      'input',\n      () => document.createElement('input'),\n      (host, node) => {\n        if (host.value) {\n          node.setAttribute('value', host.value);\n        }\n        if (host.type) {\n          node.setAttribute('type', host.type);\n        }\n\n        // Ensure every instance has unique ID\n        const uniqueId = (InputController._uniqueInputId = 1 + InputController._uniqueInputId || 0);\n        host._inputId = `${host.localName}-${uniqueId}`;\n        node.id = host._inputId;\n\n        if (typeof callback == 'function') {\n          callback(node);\n        }\n      },\n    );\n  }\n}\n","/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dashToCamelCase } from '@polymer/polymer/lib/utils/case-map.js';\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\n\n/**\n * A controller for providing content to slot element and observing changes.\n */\nexport class SlotController extends EventTarget {\n  constructor(host, slotName, slotFactory, slotInitializer) {\n    super();\n\n    this.host = host;\n    this.slotName = slotName;\n    this.slotFactory = slotFactory;\n    this.slotInitializer = slotInitializer;\n    this.defaultId = SlotController.generateId(slotName, host);\n  }\n\n  /**\n   * Ensure that every instance has unique ID.\n   *\n   * @param {string} slotName\n   * @param {HTMLElement} host\n   * @return {string}\n   * @protected\n   */\n  static generateId(slotName, host) {\n    const prefix = slotName || 'default';\n\n    // Support dash-case slot names e.g. \"error-message\"\n    const field = `${dashToCamelCase(prefix)}Id`;\n\n    // Maintain the unique ID counter for a given prefix.\n    this[field] = 1 + this[field] || 0;\n\n    return `${prefix}-${host.localName}-${this[field]}`;\n  }\n\n  hostConnected() {\n    if (!this.initialized) {\n      let node = this.getSlotChild();\n\n      if (!node) {\n        node = this.attachDefaultNode();\n      } else {\n        this.node = node;\n        this.initCustomNode(node);\n      }\n\n      this.initNode(node);\n\n      // TODO: Consider making this behavior opt-in to improve performance.\n      this.observe();\n\n      this.initialized = true;\n    }\n  }\n\n  /**\n   * Create and attach default node using the slot factory.\n   * @return {Node | undefined}\n   * @protected\n   */\n  attachDefaultNode() {\n    const { host, slotName, slotFactory } = this;\n\n    // Check if the node was created previously and if so, reuse it.\n    let node = this.defaultNode;\n\n    // Slot factory is optional, some slots don't have default content.\n    if (!node && slotFactory) {\n      node = slotFactory(host);\n      if (node instanceof Element) {\n        if (slotName !== '') {\n          node.setAttribute('slot', slotName);\n        }\n        this.node = node;\n        this.defaultNode = node;\n      }\n    }\n\n    if (node) {\n      host.appendChild(node);\n    }\n\n    return node;\n  }\n\n  /**\n   * Return a reference to the node managed by the controller.\n   * @return {Node}\n   */\n  getSlotChild() {\n    const { slotName } = this;\n    return Array.from(this.host.childNodes).find((node) => {\n      // Either an element (any slot) or a text node (only un-named slot).\n      return (\n        (node.nodeType === Node.ELEMENT_NODE && node.slot === slotName) ||\n        (node.nodeType === Node.TEXT_NODE && node.textContent.trim() && slotName === '')\n      );\n    });\n  }\n\n  /**\n   * @param {Node} node\n   * @protected\n   */\n  initNode(node) {\n    const { slotInitializer } = this;\n    // Don't try to bind `this` to initializer (normally it's arrow function).\n    // Instead, pass the host as a first argument to access component's state.\n    if (slotInitializer) {\n      slotInitializer(this.host, node);\n    }\n  }\n\n  /**\n   * Override to initialize the newly added custom node.\n   *\n   * @param {Node} _node\n   * @protected\n   */\n  initCustomNode(_node) {}\n\n  /**\n   * Override to teardown slotted node when it's removed.\n   *\n   * @param {Node} _node\n   * @protected\n   */\n  teardownNode(_node) {}\n\n  /**\n   * Setup the observer to manage slot content changes.\n   * @protected\n   */\n  observe() {\n    const { slotName } = this;\n    const selector = slotName === '' ? 'slot:not([name])' : `slot[name=${slotName}]`;\n    const slot = this.host.shadowRoot.querySelector(selector);\n\n    this.__slotObserver = new FlattenedNodesObserver(slot, (info) => {\n      // TODO: support default slot with multiple nodes (e.g. confirm-dialog)\n      const current = this.node;\n      const newNode = info.addedNodes.find((node) => node !== current);\n\n      if (info.removedNodes.length) {\n        info.removedNodes.forEach((node) => {\n          this.teardownNode(node);\n        });\n      }\n\n      if (newNode) {\n        // Custom node is added, remove the current one.\n        if (current && current.isConnected) {\n          this.host.removeChild(current);\n        }\n\n        this.node = newNode;\n\n        if (newNode !== this.defaultNode) {\n          this.initCustomNode(newNode);\n\n          this.initNode(newNode);\n        }\n      }\n    });\n  }\n}\n","/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { LabelController } from './label-controller.js';\n\n/**\n * A mixin to provide label via corresponding property or named slot.\n *\n * @polymerMixin\n * @mixes SlotMixin\n */\nexport const LabelMixin = dedupingMixin(\n  (superclass) =>\n    class LabelMixinClass extends ControllerMixin(superclass) {\n      static get properties() {\n        return {\n          /**\n           * The label text for the input node.\n           * When no light dom defined via [slot=label], this value will be used.\n           */\n          label: {\n            type: String,\n            observer: '_labelChanged',\n          },\n        };\n      }\n\n      /** @protected */\n      get _labelId() {\n        return this._labelController.labelId;\n      }\n\n      /** @protected */\n      get _labelNode() {\n        return this._labelController.node;\n      }\n\n      constructor() {\n        super();\n\n        this._labelController = new LabelController(this);\n        this.addController(this._labelController);\n      }\n\n      /** @protected */\n      _labelChanged(label) {\n        this._labelController.setLabel(label);\n      }\n    },\n);\n","/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { SlotController } from '@vaadin/component-base/src/slot-controller.js';\n\n/**\n * A controller to manage the label element.\n */\nexport class LabelController extends SlotController {\n  constructor(host) {\n    super(\n      host,\n      'label',\n      () => document.createElement('label'),\n      (_host, node) => {\n        // Set ID attribute or use the existing one.\n        this.__updateLabelId(node);\n\n        // Set text content for the default label.\n        this.__updateDefaultLabel(this.label);\n\n        this.__observeLabel(node);\n      },\n    );\n  }\n\n  /**\n   * @return {string}\n   */\n  get labelId() {\n    return this.node.id;\n  }\n\n  /**\n   * Override to initialize the newly added custom label.\n   *\n   * @param {Node} labelNode\n   * @protected\n   * @override\n   */\n  initCustomNode(labelNode) {\n    this.__updateLabelId(labelNode);\n\n    const hasLabel = this.__hasLabel(labelNode);\n    this.__toggleHasLabel(hasLabel);\n  }\n\n  /**\n   * Override to cleanup label node when it's removed.\n   *\n   * @param {Node} node\n   * @protected\n   * @override\n   */\n  teardownNode(node) {\n    if (this.__labelObserver) {\n      this.__labelObserver.disconnect();\n    }\n\n    let labelNode = this.getSlotChild();\n\n    // If custom label was removed, restore the default one.\n    if (!labelNode && node !== this.defaultNode) {\n      labelNode = this.attachDefaultNode();\n\n      // Run initializer to update default label and ID.\n      this.initNode(labelNode);\n    }\n\n    const hasLabel = this.__hasLabel(labelNode);\n    this.__toggleHasLabel(hasLabel);\n  }\n\n  /**\n   * Set label based on corresponding host property.\n   *\n   * @param {string} label\n   */\n  setLabel(label) {\n    this.label = label;\n\n    this.__updateDefaultLabel(label);\n  }\n\n  /**\n   * @param {HTMLElement} labelNode\n   * @return {boolean}\n   * @private\n   */\n  __hasLabel(labelNode) {\n    if (!labelNode) {\n      return false;\n    }\n\n    return labelNode.children.length > 0 || this.__isNotEmpty(labelNode.textContent);\n  }\n\n  /**\n   * @param {string} label\n   * @private\n   */\n  __isNotEmpty(label) {\n    return Boolean(label && label.trim() !== '');\n  }\n\n  /**\n   * @param {HTMLElement} labelNode\n   * @private\n   */\n  __observeLabel(labelNode) {\n    this.__labelObserver = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        const target = mutation.target;\n\n        // Ensure the mutation target is the currently connected label\n        // to ignore async mutations dispatched for removed element.\n        const isLabelMutation = target === this.node;\n\n        if (mutation.type === 'attributes') {\n          // We use attributeFilter to only observe ID mutation,\n          // no need to check for attribute name separately.\n          if (isLabelMutation && target.id !== this.defaultId) {\n            this.__updateLabelId(target);\n          }\n        } else if (isLabelMutation || target.parentElement === this.node) {\n          // Update has-label when textContent changes\n          const hasLabel = this.__hasLabel(this.node);\n          this.__toggleHasLabel(hasLabel);\n        }\n      });\n    });\n\n    // Observe changes to label ID attribute, text content and children.\n    this.__labelObserver.observe(labelNode, {\n      attributes: true,\n      attributeFilter: ['id'],\n      childList: true,\n      subtree: true,\n      characterData: true,\n    });\n  }\n\n  /**\n   * @param {boolean} hasLabel\n   * @private\n   */\n  __toggleHasLabel(hasLabel) {\n    this.host.toggleAttribute('has-label', hasLabel);\n\n    // Make it possible for other mixins to observe change\n    this.dispatchEvent(\n      new CustomEvent('label-changed', {\n        detail: {\n          hasLabel,\n          node: this.node,\n        },\n      }),\n    );\n  }\n\n  /**\n   * @param {string} label\n   * @private\n   */\n  __updateDefaultLabel(label) {\n    if (this.defaultNode) {\n      this.defaultNode.textContent = label;\n\n      // Update has-label if default label is used\n      if (this.defaultNode === this.node) {\n        const hasLabel = this.__isNotEmpty(label);\n        this.__toggleHasLabel(hasLabel);\n      }\n    }\n  }\n\n  /**\n   * @param {HTMLElement} labelNode\n   * @private\n   */\n  __updateLabelId(labelNode) {\n    if (!labelNode.id) {\n      labelNode.id = this.defaultId;\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * A controller for linking a `<label>` element with an `<input>` element.\n */\nexport class LabelledInputController {\n  constructor(input, labelController) {\n    this.input = input;\n    this.__preventDuplicateLabelClick = this.__preventDuplicateLabelClick.bind(this);\n\n    labelController.addEventListener('label-changed', (event) => {\n      this.__initLabel(event.detail.node);\n    });\n\n    // Initialize the default label element\n    this.__initLabel(labelController.node);\n  }\n\n  /**\n   * @param {HTMLElement} label\n   * @private\n   */\n  __initLabel(label) {\n    if (label) {\n      label.addEventListener('click', this.__preventDuplicateLabelClick);\n\n      if (this.input) {\n        label.setAttribute('for', this.input.id);\n      }\n    }\n  }\n\n  /**\n   * The native platform fires an event for both the click on the label, and also\n   * the subsequent click on the native input element caused by label click.\n   * This results in two click events arriving at the host, but we only want one.\n   * This method prevents the duplicate click and ensures the correct isTrusted event\n   * with the correct event.target arrives at the host.\n   * @private\n   */\n  __preventDuplicateLabelClick() {\n    const inputClickHandler = (e) => {\n      e.stopImmediatePropagation();\n      this.input.removeEventListener('click', inputClickHandler);\n    };\n    this.input.addEventListener('click', inputClickHandler);\n  }\n}\n","/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * A controller to copy the content from a source slot to a target element.\n */\nexport class SlotTargetController {\n  constructor(sourceSlot, targetFactory, callback) {\n    /**\n     * The source `<slot>` element to copy nodes from.\n     */\n    this.sourceSlot = sourceSlot;\n\n    /**\n     * Function used to get a reference to slot target.\n     */\n    this.targetFactory = targetFactory;\n\n    /**\n     * Function called after copying nodes to target.\n     */\n    this.copyCallback = callback;\n\n    if (sourceSlot) {\n      sourceSlot.addEventListener('slotchange', () => {\n        // Copy in progress, ignore this event.\n        if (this.__copying) {\n          this.__copying = false;\n        } else {\n          this.__checkAndCopyNodesToSlotTarget();\n        }\n      });\n    }\n  }\n\n  hostConnected() {\n    this.__sourceSlotObserver = new MutationObserver(() => this.__checkAndCopyNodesToSlotTarget());\n\n    // Ensure the content is up to date when host is connected\n    // to handle e.g. mutating text content while disconnected.\n    this.__checkAndCopyNodesToSlotTarget();\n  }\n\n  /**\n   * Copies every node from the source slot to the target element\n   * once the source slot' content is changed.\n   *\n   * @private\n   */\n  __checkAndCopyNodesToSlotTarget() {\n    this.__sourceSlotObserver.disconnect();\n\n    // Ensure slot target element is up to date.\n    const slotTarget = this.targetFactory();\n\n    if (!slotTarget) {\n      return;\n    }\n\n    // Remove any existing clones from the slot target\n    if (this.__slotTargetClones) {\n      this.__slotTargetClones.forEach((node) => {\n        if (node.parentElement === slotTarget) {\n          slotTarget.removeChild(node);\n        }\n      });\n      delete this.__slotTargetClones;\n    }\n\n    // Exclude whitespace text nodes\n    const nodes = this.sourceSlot\n      .assignedNodes({ flatten: true })\n      .filter((node) => !(node.nodeType == Node.TEXT_NODE && node.textContent.trim() === ''));\n\n    if (nodes.length > 0) {\n      slotTarget.innerHTML = '';\n\n      // Ignore next slotchange\n      this.__copying = true;\n\n      this.__copyNodesToSlotTarget(nodes, slotTarget);\n    }\n  }\n\n  /**\n   * Copies the nodes to the target element.\n   *\n   * @param {!Array<!Node>} nodes\n   * @param {HTMLElement} slotTarget\n   * @private\n   */\n  __copyNodesToSlotTarget(nodes, slotTarget) {\n    this.__slotTargetClones = this.__slotTargetClones || [];\n\n    nodes.forEach((node) => {\n      // Clone the nodes and append the clones to the target\n      const clone = node.cloneNode(true);\n      this.__slotTargetClones.push(clone);\n\n      slotTarget.appendChild(clone);\n\n      // Observe all changes to the source node to have the clones updated\n      this.__sourceSlotObserver.observe(node, {\n        attributes: true,\n        childList: true,\n        subtree: true,\n        characterData: true,\n      });\n    });\n\n    // Run callback e.g. to show a deprecation warning\n    if (typeof this.copyCallback === 'function') {\n      this.copyCallback(nodes);\n    }\n  }\n}\n","import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/font-icons.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport '@vaadin/checkbox/theme/lumo/vaadin-checkbox.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles(\n  'vaadin-grid',\n  css`\n    :host {\n      font-family: var(--lumo-font-family);\n      font-size: var(--lumo-font-size-m);\n      line-height: var(--lumo-line-height-s);\n      color: var(--lumo-body-text-color);\n      background-color: var(--lumo-base-color);\n      box-sizing: border-box;\n      -webkit-text-size-adjust: 100%;\n      -webkit-tap-highlight-color: transparent;\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n\n      /* For internal use only */\n      --_lumo-grid-border-color: var(--lumo-contrast-20pct);\n      --_lumo-grid-secondary-border-color: var(--lumo-contrast-10pct);\n      --_lumo-grid-border-width: 1px;\n      --_lumo-grid-selected-row-color: var(--lumo-primary-color-10pct);\n    }\n\n    /* No (outer) border */\n\n    :host(:not([theme~='no-border'])) {\n      border: var(--_lumo-grid-border-width) solid var(--_lumo-grid-border-color);\n    }\n\n    :host([disabled]) {\n      opacity: 0.7;\n    }\n\n    /* Cell styles */\n\n    [part~='cell'] {\n      min-height: var(--lumo-size-m);\n      background-color: var(--lumo-base-color);\n    }\n\n    [part~='cell'] ::slotted(vaadin-grid-cell-content) {\n      cursor: default;\n      padding: var(--lumo-space-xs) var(--lumo-space-m);\n    }\n\n    /* Apply row borders by default and introduce the \"no-row-borders\" variant */\n    :host(:not([theme~='no-row-borders'])) [part~='cell']:not([part~='details-cell']) {\n      border-top: var(--_lumo-grid-border-width) solid var(--_lumo-grid-secondary-border-color);\n    }\n\n    /* Hide first body row top border */\n    :host(:not([theme~='no-row-borders'])) [part='row'][first] [part~='cell']:not([part~='details-cell']) {\n      border-top: 0;\n      min-height: calc(var(--lumo-size-m) - var(--_lumo-grid-border-width));\n    }\n\n    /* Focus-ring */\n\n    [part~='row'] {\n      position: relative;\n    }\n\n    [part~='row']:focus,\n    [part~='cell']:focus {\n      outline: none;\n    }\n\n    :host([navigating]) [part~='row']:focus::before,\n    :host([navigating]) [part~='cell']:focus::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      pointer-events: none;\n      box-shadow: inset 0 0 0 2px var(--lumo-primary-color-50pct);\n    }\n\n    :host([navigating]) [part~='row']:focus::before {\n      transform: translateX(calc(-1 * var(--_grid-horizontal-scroll-position)));\n      z-index: 3;\n    }\n\n    /* Drag and Drop styles */\n    :host([dragover])::after {\n      content: '';\n      position: absolute;\n      z-index: 100;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      pointer-events: none;\n      box-shadow: inset 0 0 0 2px var(--lumo-primary-color-50pct);\n    }\n\n    [part~='row'][dragover] {\n      z-index: 100 !important;\n    }\n\n    [part~='row'][dragover] [part~='cell'] {\n      overflow: visible;\n    }\n\n    [part~='row'][dragover] [part~='cell']::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      height: calc(var(--_lumo-grid-border-width) + 2px);\n      pointer-events: none;\n      background: var(--lumo-primary-color-50pct);\n    }\n\n    [part~='row'][dragover] [part~='cell'][last-frozen]::after {\n      right: -1px;\n    }\n\n    :host([theme~='no-row-borders']) [dragover] [part~='cell']::after {\n      height: 2px;\n    }\n\n    [part~='row'][dragover='below'] [part~='cell']::after {\n      top: 100%;\n      bottom: auto;\n      margin-top: -1px;\n    }\n\n    :host([all-rows-visible]) [part~='row'][last][dragover='below'] [part~='cell']::after {\n      height: 1px;\n    }\n\n    [part~='row'][dragover='above'] [part~='cell']::after {\n      top: auto;\n      bottom: 100%;\n      margin-bottom: -1px;\n    }\n\n    [part~='row'][details-opened][dragover='below'] [part~='cell']:not([part~='details-cell'])::after,\n    [part~='row'][details-opened][dragover='above'] [part~='details-cell']::after {\n      display: none;\n    }\n\n    [part~='row'][dragover][dragover='on-top'] [part~='cell']::after {\n      height: 100%;\n      opacity: 0.5;\n    }\n\n    [part~='row'][dragstart] [part~='cell'] {\n      border: none !important;\n      box-shadow: none !important;\n    }\n\n    [part~='row'][dragstart] [part~='cell'][last-column] {\n      border-radius: 0 var(--lumo-border-radius-s) var(--lumo-border-radius-s) 0;\n    }\n\n    [part~='row'][dragstart] [part~='cell'][first-column] {\n      border-radius: var(--lumo-border-radius-s) 0 0 var(--lumo-border-radius-s);\n    }\n\n    [ios] [part~='row'][dragstart] [part~='cell'] {\n      background: var(--lumo-primary-color-50pct);\n    }\n\n    #scroller:not([ios]) [part~='row'][dragstart]:not([dragstart=''])::after {\n      display: block;\n      position: absolute;\n      left: var(--_grid-drag-start-x);\n      top: var(--_grid-drag-start-y);\n      z-index: 100;\n      content: attr(dragstart);\n      align-items: center;\n      justify-content: center;\n      box-sizing: border-box;\n      padding: calc(var(--lumo-space-xs) * 0.8);\n      color: var(--lumo-error-contrast-color);\n      background-color: var(--lumo-error-color);\n      border-radius: var(--lumo-border-radius-m);\n      font-family: var(--lumo-font-family);\n      font-size: var(--lumo-font-size-xxs);\n      line-height: 1;\n      font-weight: 500;\n      text-transform: initial;\n      letter-spacing: initial;\n      min-width: calc(var(--lumo-size-s) * 0.7);\n      text-align: center;\n    }\n\n    /* Headers and footers */\n\n    [part~='header-cell'] ::slotted(vaadin-grid-cell-content),\n    [part~='footer-cell'] ::slotted(vaadin-grid-cell-content),\n    [part~='reorder-ghost'] {\n      font-size: var(--lumo-font-size-s);\n      font-weight: 500;\n    }\n\n    [part~='footer-cell'] ::slotted(vaadin-grid-cell-content) {\n      font-weight: 400;\n    }\n\n    [part='row']:only-child [part~='header-cell'] {\n      min-height: var(--lumo-size-xl);\n    }\n\n    /* Header borders */\n\n    /* Hide first header row top border */\n    :host(:not([theme~='no-row-borders'])) [part='row']:first-child [part~='header-cell'] {\n      border-top: 0;\n    }\n\n    [part='row']:last-child [part~='header-cell'] {\n      border-bottom: var(--_lumo-grid-border-width) solid transparent;\n    }\n\n    :host(:not([theme~='no-row-borders'])) [part='row']:last-child [part~='header-cell'] {\n      border-bottom-color: var(--_lumo-grid-secondary-border-color);\n    }\n\n    /* Overflow uses a stronger border color */\n    :host([overflow~='top']) [part='row']:last-child [part~='header-cell'] {\n      border-bottom-color: var(--_lumo-grid-border-color);\n    }\n\n    /* Footer borders */\n\n    [part='row']:first-child [part~='footer-cell'] {\n      border-top: var(--_lumo-grid-border-width) solid transparent;\n    }\n\n    :host(:not([theme~='no-row-borders'])) [part='row']:first-child [part~='footer-cell'] {\n      border-top-color: var(--_lumo-grid-secondary-border-color);\n    }\n\n    /* Overflow uses a stronger border color */\n    :host([overflow~='bottom']) [part='row']:first-child [part~='footer-cell'] {\n      border-top-color: var(--_lumo-grid-border-color);\n    }\n\n    /* Column reordering */\n\n    :host([reordering]) [part~='cell'] {\n      background: linear-gradient(var(--lumo-shade-20pct), var(--lumo-shade-20pct)) var(--lumo-base-color);\n    }\n\n    :host([reordering]) [part~='cell'][reorder-status='allowed'] {\n      background: var(--lumo-base-color);\n    }\n\n    :host([reordering]) [part~='cell'][reorder-status='dragging'] {\n      background: linear-gradient(var(--lumo-contrast-5pct), var(--lumo-contrast-5pct)) var(--lumo-base-color);\n    }\n\n    [part~='reorder-ghost'] {\n      opacity: 0.85;\n      box-shadow: var(--lumo-box-shadow-s);\n      /* TODO Use the same styles as for the cell element (reorder-ghost copies styles from the cell element) */\n      padding: var(--lumo-space-s) var(--lumo-space-m) !important;\n    }\n\n    /* Column resizing */\n\n    [part='resize-handle'] {\n      width: 3px;\n      background-color: var(--lumo-primary-color-50pct);\n      opacity: 0;\n      transition: opacity 0.2s;\n    }\n\n    :host(:not([reordering])) *:not([column-resizing]) [part~='cell']:hover [part='resize-handle'],\n    [part='resize-handle']:active {\n      opacity: 1;\n      transition-delay: 0.15s;\n    }\n\n    /* Column borders */\n\n    :host([theme~='column-borders']) [part~='cell']:not([last-column]):not([part~='details-cell']) {\n      border-right: var(--_lumo-grid-border-width) solid var(--_lumo-grid-secondary-border-color);\n    }\n\n    /* Frozen columns */\n\n    [last-frozen] {\n      border-right: var(--_lumo-grid-border-width) solid transparent;\n      overflow: hidden;\n    }\n\n    :host([overflow~='left']) [part~='cell'][last-frozen]:not([part~='details-cell']) {\n      border-right-color: var(--_lumo-grid-border-color);\n    }\n\n    /* Row stripes */\n\n    :host([theme~='row-stripes']) [part~='row']:not([odd]) [part~='body-cell'],\n    :host([theme~='row-stripes']) [part~='row']:not([odd]) [part~='details-cell'] {\n      background-image: linear-gradient(var(--lumo-contrast-5pct), var(--lumo-contrast-5pct));\n      background-repeat: repeat-x;\n    }\n\n    /* Selected row */\n\n    /* Raise the selected rows above unselected rows (so that box-shadow can cover unselected rows) */\n    :host(:not([reordering])) [part~='row'][selected] {\n      z-index: 1;\n    }\n\n    :host(:not([reordering])) [part~='row'][selected] [part~='body-cell']:not([part~='details-cell']) {\n      background-image: linear-gradient(var(--_lumo-grid-selected-row-color), var(--_lumo-grid-selected-row-color));\n      background-repeat: repeat;\n    }\n\n    /* Cover the border of an unselected row */\n    :host(:not([theme~='no-row-borders'])) [part~='row'][selected] [part~='cell']:not([part~='details-cell']) {\n      box-shadow: 0 var(--_lumo-grid-border-width) 0 0 var(--_lumo-grid-selected-row-color);\n    }\n\n    /* Compact */\n\n    :host([theme~='compact']) [part='row']:only-child [part~='header-cell'] {\n      min-height: var(--lumo-size-m);\n    }\n\n    :host([theme~='compact']) [part~='cell'] {\n      min-height: var(--lumo-size-s);\n    }\n\n    :host([theme~='compact']) [part='row'][first] [part~='cell']:not([part~='details-cell']) {\n      min-height: calc(var(--lumo-size-s) - var(--_lumo-grid-border-width));\n    }\n\n    :host([theme~='compact']) [part~='cell'] ::slotted(vaadin-grid-cell-content) {\n      padding: var(--lumo-space-xs) var(--lumo-space-s);\n    }\n\n    /* Wrap cell contents */\n\n    :host([theme~='wrap-cell-content']) [part~='cell'] ::slotted(vaadin-grid-cell-content) {\n      white-space: normal;\n    }\n\n    /* RTL specific styles */\n\n    :host([dir='rtl']) [part~='row'][dragstart] [part~='cell'][last-column] {\n      border-radius: var(--lumo-border-radius-s) 0 0 var(--lumo-border-radius-s);\n    }\n\n    :host([dir='rtl']) [part~='row'][dragstart] [part~='cell'][first-column] {\n      border-radius: 0 var(--lumo-border-radius-s) var(--lumo-border-radius-s) 0;\n    }\n\n    :host([dir='rtl'][theme~='column-borders']) [part~='cell']:not([last-column]):not([part~='details-cell']) {\n      border-right: none;\n      border-left: var(--_lumo-grid-border-width) solid var(--_lumo-grid-secondary-border-color);\n    }\n\n    :host([dir='rtl']) [last-frozen] {\n      border-right: none;\n      border-left: var(--_lumo-grid-border-width) solid transparent;\n    }\n\n    :host([dir='rtl'][overflow~='right']) [part~='cell'][last-frozen]:not([part~='details-cell']) {\n      border-left-color: var(--_lumo-grid-border-color);\n    }\n  `,\n  { moduleId: 'lumo-grid' },\n);\n\nregisterStyles(\n  'vaadin-checkbox',\n  css`\n    :host(.vaadin-grid-select-all-checkbox) {\n      font-size: var(--lumo-font-size-m);\n    }\n  `,\n  { moduleId: 'vaadin-grid-select-all-checkbox-lumo' },\n);\n","/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport './vaadin-grid-column.js';\nimport './vaadin-grid-styles.js';\nimport { beforeNextRender } from '@polymer/polymer/lib/utils/render-status.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { isAndroid, isChrome, isFirefox, isIOS, isSafari, isTouch } from '@vaadin/component-base/src/browser-utils.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { TabindexMixin } from '@vaadin/component-base/src/tabindex-mixin.js';\nimport { processTemplates } from '@vaadin/component-base/src/templates.js';\nimport { Virtualizer } from '@vaadin/component-base/src/virtualizer.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { A11yMixin } from './vaadin-grid-a11y-mixin.js';\nimport { ActiveItemMixin } from './vaadin-grid-active-item-mixin.js';\nimport { ArrayDataProviderMixin } from './vaadin-grid-array-data-provider-mixin.js';\nimport { ColumnReorderingMixin } from './vaadin-grid-column-reordering-mixin.js';\nimport { ColumnResizingMixin } from './vaadin-grid-column-resizing-mixin.js';\nimport { DataProviderMixin } from './vaadin-grid-data-provider-mixin.js';\nimport { DragAndDropMixin } from './vaadin-grid-drag-and-drop-mixin.js';\nimport { DynamicColumnsMixin } from './vaadin-grid-dynamic-columns-mixin.js';\nimport { EventContextMixin } from './vaadin-grid-event-context-mixin.js';\nimport { FilterMixin } from './vaadin-grid-filter-mixin.js';\nimport { KeyboardNavigationMixin } from './vaadin-grid-keyboard-navigation-mixin.js';\nimport { RowDetailsMixin } from './vaadin-grid-row-details-mixin.js';\nimport { ScrollMixin } from './vaadin-grid-scroll-mixin.js';\nimport { SelectionMixin } from './vaadin-grid-selection-mixin.js';\nimport { SortMixin } from './vaadin-grid-sort-mixin.js';\nimport { StylingMixin } from './vaadin-grid-styling-mixin.js';\n\n/**\n * `<vaadin-grid>` is a free, high quality data grid / data table Web Component. The content of the\n * the grid can be populated by using renderer callback function.\n *\n * ### Quick Start\n *\n * Start with an assigning an array to the [`items`](#/elements/vaadin-grid#property-items) property to visualize your data.\n *\n * Use the [`<vaadin-grid-column>`](#/elements/vaadin-grid-column) element to configure the grid columns. Set `path` and `header`\n * shorthand properties for the columns to define what gets rendered in the cells of the column.\n *\n * #### Example:\n * ```html\n * <vaadin-grid>\n *   <vaadin-grid-column path=\"name.first\" header=\"First name\"></vaadin-grid-column>\n *   <vaadin-grid-column path=\"name.last\" header=\"Last name\"></vaadin-grid-column>\n *   <vaadin-grid-column path=\"email\"></vaadin-grid-column>\n * </vaadin-grid>\n * ```\n *\n * For custom content `vaadin-grid-column` element provides you with three types of `renderer` callback functions: `headerRenderer`,\n * `renderer` and `footerRenderer`.\n *\n * Each of those renderer functions provides `root`, `column`, `model` arguments when applicable.\n * Generate DOM content, append it to the `root` element and control the state\n * of the host element by accessing `column`. Before generating new content,\n * users are able to check if there is already content in `root` for reusing it.\n *\n * Renderers are called on initialization of new column cells and each time the\n * related row model is updated. DOM generated during the renderer call can be reused\n * in the next renderer call and will be provided with the `root` argument.\n * On first call it will be empty.\n *\n * #### Example:\n * ```html\n * <vaadin-grid>\n *   <vaadin-grid-column></vaadin-grid-column>\n *   <vaadin-grid-column></vaadin-grid-column>\n *   <vaadin-grid-column></vaadin-grid-column>\n * </vaadin-grid>\n * ```\n * ```js\n * const grid = document.querySelector('vaadin-grid');\n * grid.items = [{'name': 'John', 'surname': 'Lennon', 'role': 'singer'},\n *               {'name': 'Ringo', 'surname': 'Starr', 'role': 'drums'}];\n *\n * const columns = grid.querySelectorAll('vaadin-grid-column');\n *\n * columns[0].headerRenderer = function(root) {\n *   root.textContent = 'Name';\n * };\n * columns[0].renderer = function(root, column, model) {\n *   root.textContent = model.item.name;\n * };\n *\n * columns[1].headerRenderer = function(root) {\n *   root.textContent = 'Surname';\n * };\n * columns[1].renderer = function(root, column, model) {\n *   root.textContent = model.item.surname;\n * };\n *\n * columns[2].headerRenderer = function(root) {\n *   root.textContent = 'Role';\n * };\n * columns[2].renderer = function(root, column, model) {\n *   root.textContent = model.item.role;\n * };\n * ```\n *\n * The following properties are available in the `model` argument:\n *\n * Property name | Type | Description\n * --------------|------|------------\n * `index`| Number | The index of the item.\n * `item` | String or Object | The item.\n * `level` | Number | Number of the item's tree sublevel, starts from 0.\n * `expanded` | Boolean | True if the item's tree sublevel is expanded.\n * `selected` | Boolean | True if the item is selected.\n * `detailsOpened` | Boolean | True if the item's row details are open.\n *\n * The following helper elements can be used for further customization:\n * - [`<vaadin-grid-column-group>`](#/elements/vaadin-grid-column-group)\n * - [`<vaadin-grid-filter>`](#/elements/vaadin-grid-filter)\n * - [`<vaadin-grid-sorter>`](#/elements/vaadin-grid-sorter)\n * - [`<vaadin-grid-selection-column>`](#/elements/vaadin-grid-selection-column)\n * - [`<vaadin-grid-tree-toggle>`](#/elements/vaadin-grid-tree-toggle)\n *\n * __Note that the helper elements must be explicitly imported.__\n * If you want to import everything at once you can use the `all-imports.html` bundle.\n *\n * ### Lazy Loading with Function Data Provider\n *\n * In addition to assigning an array to the items property, you can alternatively\n * provide the `<vaadin-grid>` data through the\n * [`dataProvider`](#/elements/vaadin-grid#property-dataProvider) function property.\n * The `<vaadin-grid>` calls this function lazily, only when it needs more data\n * to be displayed.\n *\n * See the [`dataProvider`](#/elements/vaadin-grid#property-dataProvider) in\n * the API reference below for the detailed data provider arguments description,\n * and the “Assigning Data” page in the demos.\n *\n * __Note that expanding the tree grid's item will trigger a call to the `dataProvider`.__\n *\n * __Also, note that when using function data providers, the total number of items\n * needs to be set manually. The total number of items can be returned\n * in the second argument of the data provider callback:__\n *\n * ```javascript\n * grid.dataProvider = ({page, pageSize}, callback) => {\n *   // page: the requested page index\n *   // pageSize: number of items on one page\n *   const url = `https://api.example/data?page=${page}&per_page=${pageSize}`;\n *\n *   fetch(url)\n *     .then((res) => res.json())\n *     .then(({ employees, totalSize }) => {\n *       callback(employees, totalSize);\n *     });\n * };\n * ```\n *\n * __Alternatively, you can use the `size` property to set the total number of items:__\n *\n * ```javascript\n * grid.size = 200; // The total number of items\n * grid.dataProvider = ({page, pageSize}, callback) => {\n *   const url = `https://api.example/data?page=${page}&per_page=${pageSize}`;\n *\n *   fetch(url)\n *     .then((res) => res.json())\n *     .then((resJson) => callback(resJson.employees));\n * };\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ----------------|----------------\n * `row` | Row in the internal table\n * `cell` | Cell in the internal table\n * `header-cell` | Header cell in the internal table\n * `body-cell` | Body cell in the internal table\n * `footer-cell` | Footer cell in the internal table\n * `details-cell` | Row details cell in the internal table\n * `resize-handle` | Handle for resizing the columns\n * `reorder-ghost` | Ghost element of the header cell being dragged\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description | Part name\n * -------------|-------------|------------\n * `loading` | Set when the grid is loading data from data provider | :host\n * `interacting` | Keyboard navigation in interaction mode | :host\n * `navigating` | Keyboard navigation in navigation mode | :host\n * `overflow` | Set when rows are overflowing the grid viewport. Possible values: `top`, `bottom`, `left`, `right` | :host\n * `reordering` | Set when the grid's columns are being reordered | :host\n * `dragover` | Set when the grid (not a specific row) is dragged over | :host\n * `dragging-rows` : Set when grid rows are dragged  | :host\n * `reorder-status` | Reflects the status of a cell while columns are being reordered | cell\n * `frozen` | Frozen cell | cell\n * `last-frozen` | Last frozen cell | cell\n * `first-column` | First visible cell on a row | cell\n * `last-column` | Last visible cell on a row | cell\n * `selected` | Selected row | row\n * `expanded` | Expanded row | row\n * `details-opened` | Row with details open | row\n * `loading` | Row that is waiting for data from data provider | row\n * `odd` | Odd row | row\n * `first` | The first body row | row\n * `last` | The last body row | row\n * `dragstart` | Set for one frame when drag of a row is starting. The value is a number when multiple rows are dragged | row\n * `dragover` | Set when the row is dragged over | row\n * `drag-disabled` | Set to a row that isn't available for dragging | row\n * `drop-disabled` | Set to a row that can't be dropped on top of | row\n *\n * See [Styling Components](https://vaadin.com/docs/latest/ds/customization/styling-components) documentation.\n *\n * @fires {CustomEvent} active-item-changed - Fired when the `activeItem` property changes.\n * @fires {CustomEvent} cell-activate - Fired when the cell is activated with click or keyboard.\n * @fires {CustomEvent} cell-focus - Fired when a cell is focused with click or keyboard navigation.\n * @fires {CustomEvent} column-reorder - Fired when the columns in the grid are reordered.\n * @fires {CustomEvent} column-resize - Fired when the grid column resize is finished.\n * @fires {CustomEvent} expanded-items-changed - Fired when the `expandedItems` property changes.\n * @fires {CustomEvent} grid-dragstart - Fired when starting to drag grid rows.\n * @fires {CustomEvent} grid-dragend - Fired when the dragging of the rows ends.\n * @fires {CustomEvent} grid-drop - Fired when a drop occurs on top of the grid.\n * @fires {CustomEvent} loading-changed - Fired when the `loading` property changes.\n * @fires {CustomEvent} selected-items-changed - Fired when the `selectedItems` property changes.\n *\n * @extends HTMLElement\n * @mixes ElementMixin\n * @mixes ThemableMixin\n * @mixes A11yMixin\n * @mixes ActiveItemMixin\n * @mixes ArrayDataProviderMixin\n * @mixes ColumnResizingMixin\n * @mixes DataProviderMixin\n * @mixes DynamicColumnsMixin\n * @mixes FilterMixin\n * @mixes RowDetailsMixin\n * @mixes ScrollMixin\n * @mixes SelectionMixin\n * @mixes SortMixin\n * @mixes KeyboardNavigationMixin\n * @mixes ColumnReorderingMixin\n * @mixes EventContextMixin\n * @mixes StylingMixin\n * @mixes DragAndDropMixin\n */\nclass Grid extends ElementMixin(\n  ThemableMixin(\n    DataProviderMixin(\n      ArrayDataProviderMixin(\n        DynamicColumnsMixin(\n          ActiveItemMixin(\n            ScrollMixin(\n              SelectionMixin(\n                SortMixin(\n                  RowDetailsMixin(\n                    KeyboardNavigationMixin(\n                      A11yMixin(\n                        FilterMixin(\n                          ColumnReorderingMixin(\n                            ColumnResizingMixin(\n                              EventContextMixin(DragAndDropMixin(StylingMixin(TabindexMixin(PolymerElement)))),\n                            ),\n                          ),\n                        ),\n                      ),\n                    ),\n                  ),\n                ),\n              ),\n            ),\n          ),\n        ),\n      ),\n    ),\n  ),\n) {\n  static get template() {\n    return html`\n      <div\n        id=\"scroller\"\n        safari$=\"[[_safari]]\"\n        ios$=\"[[_ios]]\"\n        loading$=\"[[loading]]\"\n        column-reordering-allowed$=\"[[columnReorderingAllowed]]\"\n      >\n        <table id=\"table\" role=\"treegrid\" aria-multiselectable=\"true\" tabindex=\"0\">\n          <caption id=\"sizer\" part=\"row\"></caption>\n          <thead id=\"header\" role=\"rowgroup\"></thead>\n          <tbody id=\"items\" role=\"rowgroup\"></tbody>\n          <tfoot id=\"footer\" role=\"rowgroup\"></tfoot>\n        </table>\n\n        <div part=\"reorder-ghost\"></div>\n      </div>\n\n      <div id=\"focusexit\" tabindex=\"0\"></div>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-grid';\n  }\n\n  static get observers() {\n    return [\n      '_columnTreeChanged(_columnTree, _columnTree.*)',\n      '_effectiveSizeChanged(_effectiveSize, __virtualizer, _hasData, _columnTree)',\n    ];\n  }\n\n  static get properties() {\n    return {\n      /** @private */\n      _safari: {\n        type: Boolean,\n        value: isSafari,\n      },\n\n      /** @private */\n      _ios: {\n        type: Boolean,\n        value: isIOS,\n      },\n\n      /** @private */\n      _firefox: {\n        type: Boolean,\n        value: isFirefox,\n      },\n\n      /** @private */\n      _android: {\n        type: Boolean,\n        value: isAndroid,\n      },\n\n      /** @private */\n      _touchDevice: {\n        type: Boolean,\n        value: isTouch,\n      },\n\n      /**\n       * If true, the grid's height is defined by its rows.\n       *\n       * Effectively, this disables the grid's virtual scrolling so that all the rows are rendered in the DOM at once.\n       * If the grid has a large number of items, using the feature is discouraged to avoid performance issues.\n       * @attr {boolean} all-rows-visible\n       * @type {boolean}\n       */\n      allRowsVisible: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n      },\n\n      /** @private */\n      _recalculateColumnWidthOnceLoadingFinished: {\n        type: Boolean,\n        value: true,\n      },\n\n      /** @private */\n      isAttached: {\n        value: false,\n      },\n\n      /**\n       * An internal property that is mainly used by `vaadin-template-renderer`\n       * to identify grid elements.\n       *\n       * @private\n       */\n      __gridElement: {\n        type: Boolean,\n        value: true,\n      },\n    };\n  }\n\n  constructor() {\n    super();\n    this.addEventListener('animationend', this._onAnimationEnd);\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n    this.isAttached = true;\n    this.recalculateColumnWidths();\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.isAttached = false;\n  }\n\n  /** @private */\n  __getFirstVisibleItem() {\n    return this._getVisibleRows().find((row) => this._isInViewport(row));\n  }\n\n  /** @private */\n  get _firstVisibleIndex() {\n    const firstVisibleItem = this.__getFirstVisibleItem();\n    return firstVisibleItem ? firstVisibleItem.index : undefined;\n  }\n\n  /** @private */\n  __getLastVisibleItem() {\n    return this._getVisibleRows()\n      .reverse()\n      .find((row) => this._isInViewport(row));\n  }\n\n  /** @private */\n  get _lastVisibleIndex() {\n    const lastVisibleItem = this.__getLastVisibleItem();\n    return lastVisibleItem ? lastVisibleItem.index : undefined;\n  }\n\n  /** @private */\n  _isInViewport(item) {\n    const scrollTargetRect = this.$.table.getBoundingClientRect();\n    const itemRect = item.getBoundingClientRect();\n    const headerHeight = this.$.header.getBoundingClientRect().height;\n    const footerHeight = this.$.footer.getBoundingClientRect().height;\n    return (\n      itemRect.bottom > scrollTargetRect.top + headerHeight && itemRect.top < scrollTargetRect.bottom - footerHeight\n    );\n  }\n\n  /** @private */\n  _getVisibleRows() {\n    return Array.from(this.$.items.children)\n      .filter((item) => !item.hidden)\n      .sort((a, b) => a.index - b.index);\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this.__virtualizer = new Virtualizer({\n      createElements: this._createScrollerRows.bind(this),\n      updateElement: this._updateScrollerItem.bind(this),\n      scrollContainer: this.$.items,\n      scrollTarget: this.$.table,\n      reorderElements: true,\n    });\n\n    new ResizeObserver(() => setTimeout(() => this.__updateFooterPositioning())).observe(this.$.footer);\n\n    processTemplates(this);\n  }\n\n  /**\n   * @param {string} name\n   * @param {?string} oldValue\n   * @param {?string} newValue\n   * @protected\n   */\n  attributeChangedCallback(name, oldValue, newValue) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n    if (name === 'dir') {\n      this.__isRTL = newValue === 'rtl';\n    }\n  }\n\n  /** @private */\n  __getBodyCellCoordinates(cell) {\n    if (this.$.items.contains(cell) && cell.localName === 'td') {\n      return {\n        item: cell.parentElement._item,\n        column: cell._column,\n      };\n    }\n  }\n\n  /** @private */\n  __focusBodyCell({ item, column }) {\n    const row = this._getVisibleRows().find((row) => row._item === item);\n    const cell = row && [...row.children].find((cell) => cell._column === column);\n    cell && cell.focus();\n  }\n\n  /** @private */\n  _effectiveSizeChanged(effectiveSize, virtualizer, hasData, columnTree) {\n    if (virtualizer && hasData && columnTree) {\n      // Changing the virtualizer size may result in the row with focus getting hidden\n      const cell = this.shadowRoot.activeElement;\n      const cellCoordinates = this.__getBodyCellCoordinates(cell);\n\n      virtualizer.size = effectiveSize;\n      virtualizer.update();\n      virtualizer.flush();\n\n      // If the focused cell's parent row got hidden by the size change, focus the corresponding new cell\n      cellCoordinates && cell.parentElement.hidden && this.__focusBodyCell(cellCoordinates);\n\n      // Make sure the body has a tabbable element\n      this._resetKeyboardNavigation();\n    }\n  }\n\n  /** @private */\n  __hasRowsWithClientHeight() {\n    return !!Array.from(this.$.items.children).filter((row) => row.clientHeight).length;\n  }\n\n  /** @protected */\n  __itemsReceived() {\n    if (\n      this._recalculateColumnWidthOnceLoadingFinished &&\n      !this._cache.isLoading() &&\n      this.__hasRowsWithClientHeight()\n    ) {\n      this._recalculateColumnWidthOnceLoadingFinished = false;\n      this.recalculateColumnWidths();\n    }\n  }\n\n  /** @private */\n  __getIntrinsicWidth(col) {\n    const initialWidth = col.width;\n    const initialFlexGrow = col.flexGrow;\n\n    col.width = 'auto';\n    col.flexGrow = 0;\n\n    // Note: _allCells only contains cells which are currently rendered in DOM\n    const width = col._allCells\n      .filter((cell) => {\n        // Exclude body cells that are out of the visible viewport\n        return !this.$.items.contains(cell) || this._isInViewport(cell.parentElement);\n      })\n      .reduce((width, cell) => {\n        // Add 1px buffer to the offset width to avoid too narrow columns (sub-pixel rendering)\n        return Math.max(width, cell.offsetWidth + 1);\n      }, 0);\n\n    col.flexGrow = initialFlexGrow;\n    col.width = initialWidth;\n\n    return width;\n  }\n\n  /** @private */\n  __getDistributedWidth(col, innerColumn) {\n    if (col == null || col === this) {\n      return 0;\n    }\n\n    const columnWidth = Math.max(this.__getIntrinsicWidth(col), this.__getDistributedWidth(col.parentElement, col));\n\n    // we're processing a regular grid-column and not a grid-column-group\n    if (!innerColumn) {\n      return columnWidth;\n    }\n\n    // At the end, the width of each vaadin-grid-column-group is determined by the sum of the width of its children.\n    // Here we determine how much space the vaadin-grid-column-group actually needs to render properly and then we distribute that space\n    // to its children, so when we actually do the summation it will be rendered properly.\n    // Check out vaadin-grid-column-group:_updateFlexAndWidth\n    const columnGroup = col;\n    const columnGroupWidth = columnWidth;\n    const sumOfWidthOfAllChildColumns = columnGroup._visibleChildColumns\n      .map((col) => this.__getIntrinsicWidth(col))\n      .reduce((sum, curr) => sum + curr, 0);\n\n    const extraNecessarySpaceForGridColumnGroup = Math.max(0, columnGroupWidth - sumOfWidthOfAllChildColumns);\n\n    // The distribution of the extra necessary space is done according to the intrinsic width of each child column.\n    // Lets say we need 100 pixels of extra space for the grid-column-group to render properly\n    // it has two grid-column children, |100px|300px| in total 400px\n    // the first column gets 25px of the additional space (100/400)*100 = 25\n    // the second column gets the 75px of the additional space (300/400)*100 = 75\n    const proportionOfExtraSpace = this.__getIntrinsicWidth(innerColumn) / sumOfWidthOfAllChildColumns;\n    const shareOfInnerColumnFromNecessaryExtraSpace = proportionOfExtraSpace * extraNecessarySpaceForGridColumnGroup;\n\n    return this.__getIntrinsicWidth(innerColumn) + shareOfInnerColumnFromNecessaryExtraSpace;\n  }\n\n  /**\n   * @param {!Array<!GridColumn>} cols the columns to auto size based on their content width\n   * @private\n   */\n  _recalculateColumnWidths(cols) {\n    // Flush to make sure DOM is up-to-date when measuring the column widths\n    this.__virtualizer.flush();\n\n    cols.forEach((col) => {\n      col.width = `${this.__getDistributedWidth(col)}px`;\n    });\n  }\n\n  /**\n   * Updates the `width` of all columns which have `autoWidth` set to `true`.\n   */\n  recalculateColumnWidths() {\n    if (!this._columnTree) {\n      return; // No columns\n    }\n    if (this._cache.isLoading()) {\n      this._recalculateColumnWidthOnceLoadingFinished = true;\n    } else {\n      const cols = this._getColumns().filter((col) => !col.hidden && col.autoWidth);\n      this._recalculateColumnWidths(cols);\n    }\n  }\n\n  /** @private */\n  _createScrollerRows(count) {\n    const rows = [];\n    for (let i = 0; i < count; i++) {\n      const row = document.createElement('tr');\n      row.setAttribute('part', 'row');\n      row.setAttribute('role', 'row');\n      row.setAttribute('tabindex', '-1');\n      if (this._columnTree) {\n        this._updateRow(row, this._columnTree[this._columnTree.length - 1], 'body', false, true);\n      }\n      rows.push(row);\n    }\n\n    if (this._columnTree) {\n      this._columnTree[this._columnTree.length - 1].forEach(\n        (c) => c.isConnected && c.notifyPath && c.notifyPath('_cells.*', c._cells),\n      );\n    }\n\n    beforeNextRender(this, () => {\n      this._updateFirstAndLastColumn();\n      this._resetKeyboardNavigation();\n      this._afterScroll();\n      this.__itemsReceived();\n    });\n    return rows;\n  }\n\n  /** @private */\n  _createCell(tagName) {\n    const contentId = (this._contentIndex = this._contentIndex + 1 || 0);\n    const slotName = 'vaadin-grid-cell-content-' + contentId;\n\n    const cellContent = document.createElement('vaadin-grid-cell-content');\n    cellContent.setAttribute('slot', slotName);\n\n    const cell = document.createElement(tagName);\n    cell.id = slotName.replace('-content-', '-');\n    cell.setAttribute('tabindex', '-1');\n    cell.setAttribute('role', tagName === 'td' ? 'gridcell' : 'columnheader');\n\n    const slot = document.createElement('slot');\n    slot.setAttribute('name', slotName);\n\n    cell.appendChild(slot);\n\n    cell._content = cellContent;\n\n    // With native Shadow DOM, mousedown on slotted element does not focus\n    // focusable slot wrapper, that is why cells are not focused with\n    // mousedown. Workaround: listen for mousedown and focus manually.\n    cellContent.addEventListener('mousedown', () => {\n      if (isChrome) {\n        // Chrome bug: focusing before mouseup prevents text selection, see http://crbug.com/771903\n        const mouseUpListener = (event) => {\n          // If focus is on element within the cell content — respect it, do not change\n          const contentContainsFocusedElement = cellContent.contains(this.getRootNode().activeElement);\n          // Only focus if mouse is released on cell content itself\n          const mouseUpWithinCell = event.composedPath().includes(cellContent);\n          if (!contentContainsFocusedElement && mouseUpWithinCell) {\n            cell.focus();\n          }\n          document.removeEventListener('mouseup', mouseUpListener, true);\n        };\n        document.addEventListener('mouseup', mouseUpListener, true);\n      } else {\n        // Focus on mouseup, on the other hand, removes selection on Safari.\n        // Watch out sync focus removal issue, only async focus works here.\n        setTimeout(() => {\n          if (!cellContent.contains(this.getRootNode().activeElement)) {\n            cell.focus();\n          }\n        });\n      }\n    });\n\n    return cell;\n  }\n\n  /**\n   * @param {!HTMLTableRowElement} row\n   * @param {!Array<!GridColumn>} columns\n   * @param {?string} section\n   * @param {boolean} isColumnRow\n   * @param {boolean} noNotify\n   * @protected\n   */\n  // eslint-disable-next-line max-params\n  _updateRow(row, columns, section, isColumnRow, noNotify) {\n    section = section || 'body';\n\n    const contentsFragment = document.createDocumentFragment();\n\n    Array.from(row.children).forEach((cell) => (cell._vacant = true));\n    row.innerHTML = '';\n\n    columns\n      .filter((column) => !column.hidden)\n      .forEach((column, index, cols) => {\n        let cell;\n\n        if (section === 'body') {\n          // Body\n          column._cells = column._cells || [];\n          cell = column._cells.filter((cell) => cell._vacant)[0];\n          if (!cell) {\n            cell = this._createCell('td');\n            column._cells.push(cell);\n          }\n          cell.setAttribute('part', 'cell body-cell');\n          row.appendChild(cell);\n\n          if (index === cols.length - 1 && this.rowDetailsRenderer) {\n            // Add details cell as last cell to body rows\n            this._detailsCells = this._detailsCells || [];\n            const detailsCell = this._detailsCells.filter((cell) => cell._vacant)[0] || this._createCell('td');\n            if (this._detailsCells.indexOf(detailsCell) === -1) {\n              this._detailsCells.push(detailsCell);\n            }\n            if (!detailsCell._content.parentElement) {\n              contentsFragment.appendChild(detailsCell._content);\n            }\n            this._configureDetailsCell(detailsCell);\n            row.appendChild(detailsCell);\n            this._a11ySetRowDetailsCell(row, detailsCell);\n            detailsCell._vacant = false;\n          }\n\n          if (column.notifyPath && !noNotify) {\n            column.notifyPath('_cells.*', column._cells);\n          }\n        } else {\n          // Header & footer\n          const tagName = section === 'header' ? 'th' : 'td';\n          if (isColumnRow || column.localName === 'vaadin-grid-column-group') {\n            cell = column[`_${section}Cell`] || this._createCell(tagName);\n            cell._column = column;\n            row.appendChild(cell);\n            column[`_${section}Cell`] = cell;\n          } else {\n            column._emptyCells = column._emptyCells || [];\n            cell = column._emptyCells.filter((cell) => cell._vacant)[0] || this._createCell(tagName);\n            cell._column = column;\n            row.appendChild(cell);\n            if (column._emptyCells.indexOf(cell) === -1) {\n              column._emptyCells.push(cell);\n            }\n          }\n          cell.setAttribute('part', `cell ${section}-cell`);\n          this.__updateHeaderFooterRowVisibility(row);\n        }\n\n        if (!cell._content.parentElement) {\n          contentsFragment.appendChild(cell._content);\n        }\n        cell._vacant = false;\n        cell._column = column;\n      });\n\n    // Might be empty if only cache was used\n    this.appendChild(contentsFragment);\n\n    this._frozenCellsChanged();\n    this._updateFirstAndLastColumnForRow(row);\n  }\n\n  /**\n   * @param {HTMLTableRowElement} row\n   * @protected\n   */\n  __updateHeaderFooterRowVisibility(row) {\n    if (!row) {\n      return;\n    }\n\n    const visibleRowCells = Array.from(row.children).filter((cell) => {\n      const column = cell._column;\n      if (column._emptyCells && column._emptyCells.indexOf(cell) > -1) {\n        // The cell is an \"empty cell\"  -> doesn't block hiding the row\n        return false;\n      }\n      if (row.parentElement === this.$.header) {\n        if (column.headerRenderer) {\n          // The cell is the header cell of a column that has a header renderer\n          // -> row should be visible\n          return true;\n        }\n        if (column.header === null) {\n          // The column header is explicilty set to null -> doesn't block hiding the row\n          return false;\n        }\n        if (column.path || column.header !== undefined) {\n          // The column has an explicit non-null header or a path that generates a header\n          // -> row should be visible\n          return true;\n        }\n      } else if (column.footerRenderer) {\n        // The cell is the footer cell of a column that has a footer renderer\n        // -> row should be visible\n        return true;\n      }\n      return false;\n    });\n\n    if (row.hidden !== !visibleRowCells.length) {\n      row.hidden = !visibleRowCells.length;\n    }\n\n    // Make sure the section has a tabbable element\n    this._resetKeyboardNavigation();\n  }\n\n  /** @private */\n  _updateScrollerItem(row, index) {\n    this._preventScrollerRotatingCellFocus(row, index);\n\n    if (!this._columnTree) {\n      return;\n    }\n\n    row.toggleAttribute('first', index === 0);\n    row.toggleAttribute('last', index === this._effectiveSize - 1);\n    row.toggleAttribute('odd', index % 2);\n    this._a11yUpdateRowRowindex(row, index);\n    this._getItem(index, row);\n  }\n\n  /** @private */\n  _columnTreeChanged(columnTree) {\n    this._renderColumnTree(columnTree);\n    this.recalculateColumnWidths();\n  }\n\n  /**\n   * @param {!Array<!GridColumn>} columnTree\n   * @protected\n   */\n  _renderColumnTree(columnTree) {\n    Array.from(this.$.items.children).forEach((row) =>\n      this._updateRow(row, columnTree[columnTree.length - 1], null, false, true),\n    );\n\n    while (this.$.header.children.length < columnTree.length) {\n      const headerRow = document.createElement('tr');\n      headerRow.setAttribute('part', 'row');\n      headerRow.setAttribute('role', 'row');\n      headerRow.setAttribute('tabindex', '-1');\n      this.$.header.appendChild(headerRow);\n\n      const footerRow = document.createElement('tr');\n      footerRow.setAttribute('part', 'row');\n      footerRow.setAttribute('role', 'row');\n      footerRow.setAttribute('tabindex', '-1');\n      this.$.footer.appendChild(footerRow);\n    }\n    while (this.$.header.children.length > columnTree.length) {\n      this.$.header.removeChild(this.$.header.firstElementChild);\n      this.$.footer.removeChild(this.$.footer.firstElementChild);\n    }\n\n    Array.from(this.$.header.children).forEach((headerRow, index) =>\n      this._updateRow(headerRow, columnTree[index], 'header', index === columnTree.length - 1),\n    );\n\n    Array.from(this.$.footer.children).forEach((footerRow, index) =>\n      this._updateRow(footerRow, columnTree[columnTree.length - 1 - index], 'footer', index === 0),\n    );\n\n    // Sizer rows\n    this._updateRow(this.$.sizer, columnTree[columnTree.length - 1]);\n\n    this._resizeHandler();\n    this._frozenCellsChanged();\n    this._updateFirstAndLastColumn();\n    this._resetKeyboardNavigation();\n    this._a11yUpdateHeaderRows();\n    this._a11yUpdateFooterRows();\n    this.__updateFooterPositioning();\n    this.generateCellClassNames();\n  }\n\n  __updateFooterPositioning() {\n    // TODO: fixed in Firefox 99, remove when we can drop Firefox ESR 91 support\n    if (this._firefox && parseFloat(navigator.userAgent.match(/Firefox\\/(\\d{2,3}.\\d)/)[1]) < 99) {\n      // Sticky (or translated) footer in a flexbox host doesn't get included in\n      // the scroll height calculation on FF. This is a workaround for the issue.\n      this.$.items.style.paddingBottom = 0;\n      if (!this.allRowsVisible) {\n        this.$.items.style.paddingBottom = `${this.$.footer.offsetHeight}px`;\n      }\n    }\n  }\n\n  /**\n   * @param {!HTMLElement} row\n   * @param {GridItem} item\n   * @protected\n   */\n  _updateItem(row, item) {\n    row._item = item;\n    const model = this.__getRowModel(row);\n\n    this._toggleDetailsCell(row, model.detailsOpened);\n\n    this._a11yUpdateRowLevel(row, model.level);\n    this._a11yUpdateRowSelected(row, model.selected);\n\n    row.toggleAttribute('expanded', model.expanded);\n    row.toggleAttribute('selected', model.selected);\n    row.toggleAttribute('details-opened', model.detailsOpened);\n\n    this._generateCellClassNames(row, model);\n    this._filterDragAndDrop(row, model);\n\n    Array.from(row.children).forEach((cell) => {\n      if (cell._renderer) {\n        const owner = cell._column || this;\n        cell._renderer.call(owner, cell._content, owner, model);\n      }\n    });\n\n    this._updateDetailsCellHeight(row);\n\n    this._a11yUpdateRowExpanded(row, model.expanded);\n  }\n\n  /** @private */\n  _resizeHandler() {\n    this._updateDetailsCellHeights();\n    this.__updateFooterPositioning();\n  }\n\n  /** @private */\n  _onAnimationEnd(e) {\n    // ShadyCSS applies scoping suffixes to animation names\n    if (e.animationName.indexOf('vaadin-grid-appear') === 0) {\n      e.stopPropagation();\n      this.__itemsReceived();\n\n      requestAnimationFrame(() => {\n        this.__scrollToPendingIndex();\n      });\n    }\n  }\n\n  /**\n   * @param {!HTMLTableRowElement} row\n   * @return {!GridItemModel}\n   * @protected\n   */\n  __getRowModel(row) {\n    return {\n      index: row.index,\n      item: row._item,\n      level: this._getIndexLevel(row.index),\n      expanded: this._isExpanded(row._item),\n      selected: this._isSelected(row._item),\n      detailsOpened: !!this.rowDetailsRenderer && this._isDetailsOpened(row._item),\n    };\n  }\n\n  /**\n   * Requests an update for the content of cells.\n   *\n   * While performing the update, the following renderers are invoked:\n   * - `Grid.rowDetailsRenderer`\n   * - `GridColumn.renderer`\n   * - `GridColumn.headerRenderer`\n   * - `GridColumn.footerRenderer`\n   *\n   * It is not guaranteed that the update happens immediately (synchronously) after it is requested.\n   */\n  requestContentUpdate() {\n    if (this._columnTree) {\n      // header and footer renderers\n      this._columnTree.forEach((level) => {\n        level.forEach((column) => {\n          column._renderHeaderAndFooter();\n        });\n      });\n\n      // body and row details renderers\n      this.__updateVisibleRows();\n    }\n  }\n\n  /** @protected */\n  __updateVisibleRows(start, end) {\n    this.__virtualizer && this.__virtualizer.update(start, end);\n  }\n\n  /**\n   * Updates the computed metrics and positioning of internal grid parts\n   * (row/details cell positioning etc). Needs to be invoked whenever the sizing of grid\n   * content changes asynchronously to ensure consistent appearance (e.g. when a\n   * contained image whose bounds aren't known beforehand finishes loading).\n   *\n   * @deprecated Since Vaadin 22, `notifyResize()` is deprecated. The component uses a\n   * ResizeObserver internally and doesn't need to be explicitly notified of resizes.\n   */\n  notifyResize() {\n    console.warn(\n      `WARNING: Since Vaadin 22, notifyResize() is deprecated. The component uses a ResizeObserver internally and doesn't need to be explicitly notified of resizes.`,\n    );\n  }\n}\n\ncustomElements.define(Grid.is, Grid);\n\nexport { Grid };\n","/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { animationFrame } from '@vaadin/component-base/src/async.js';\nimport { Debouncer } from '@vaadin/component-base/src/debounce.js';\nimport { DirMixin } from '@vaadin/component-base/src/dir-mixin.js';\nimport { processTemplates } from '@vaadin/component-base/src/templates.js';\n\n/**\n * @polymerMixin\n */\nexport const ColumnBaseMixin = (superClass) =>\n  class ColumnBaseMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * When set to true, the column is user-resizable.\n         * @default false\n         */\n        resizable: {\n          type: Boolean,\n          value: function () {\n            if (this.localName === 'vaadin-grid-column-group') {\n              return;\n            }\n\n            const parent = this.parentNode;\n            if (parent && parent.localName === 'vaadin-grid-column-group') {\n              return parent.resizable || false;\n            }\n            return false;\n          },\n        },\n\n        /**\n         * When true, the column is frozen. When a column inside of a column group is frozen,\n         * all of the sibling columns inside the group will get frozen also.\n         * @type {boolean}\n         */\n        frozen: {\n          type: Boolean,\n          value: false,\n        },\n\n        /**\n         * When set to true, the cells for this column are hidden.\n         */\n        hidden: {\n          type: Boolean,\n          value: false,\n        },\n\n        /**\n         * Text content to display in the header cell of the column.\n         */\n        header: {\n          type: String,\n        },\n\n        /**\n         * Aligns the columns cell content horizontally.\n         * Supported values: \"start\", \"center\" and \"end\".\n         * @attr {start|center|end} text-align\n         * @type {GridColumnTextAlign | null | undefined}\n         */\n        textAlign: {\n          type: String,\n        },\n\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _lastFrozen: {\n          type: Boolean,\n          value: false,\n        },\n\n        /** @protected */\n        _order: Number,\n\n        /** @private */\n        _reorderStatus: Boolean,\n\n        /**\n         * @type {Array<!HTMLElement>}\n         * @protected\n         */\n        _emptyCells: Array,\n\n        /** @private */\n        _headerCell: Object,\n\n        /** @private */\n        _footerCell: Object,\n\n        /** @protected */\n        _grid: Object,\n\n        /**\n         * By default, the Polymer doesn't invoke the observer\n         * during initialization if all of its dependencies are `undefined`.\n         * This internal property can be used to force initial invocation of an observer\n         * even the other dependencies of the observer are `undefined`.\n         *\n         * @private\n         */\n        __initialized: {\n          type: Boolean,\n          value: true,\n        },\n\n        /**\n         * Custom function for rendering the header content.\n         * Receives two arguments:\n         *\n         * - `root` The header cell content DOM element. Append your content to it.\n         * - `column` The `<vaadin-grid-column>` element.\n         *\n         * @type {GridHeaderFooterRenderer | null | undefined}\n         */\n        headerRenderer: Function,\n\n        /**\n         * Represents the final header renderer computed on the set of observable arguments.\n         * It is supposed to be used internally when rendering the header cell content.\n         *\n         * @protected\n         * @type {GridHeaderFooterRenderer | undefined}\n         */\n        _headerRenderer: {\n          type: Function,\n          computed: '_computeHeaderRenderer(headerRenderer, header, __initialized)',\n        },\n\n        /**\n         * Custom function for rendering the footer content.\n         * Receives two arguments:\n         *\n         * - `root` The footer cell content DOM element. Append your content to it.\n         * - `column` The `<vaadin-grid-column>` element.\n         *\n         * @type {GridHeaderFooterRenderer | null | undefined}\n         */\n        footerRenderer: Function,\n\n        /**\n         * Represents the final footer renderer computed on the set of observable arguments.\n         * It is supposed to be used internally when rendering the footer cell content.\n         *\n         * @protected\n         * @type {GridHeaderFooterRenderer | undefined}\n         */\n        _footerRenderer: {\n          type: Function,\n          computed: '_computeFooterRenderer(footerRenderer, __initialized)',\n        },\n\n        /**\n         * An internal property that is mainly used by `vaadin-template-renderer`\n         * to identify grid column elements.\n         *\n         * @private\n         */\n        __gridColumnElement: {\n          type: Boolean,\n          value: true,\n        },\n      };\n    }\n\n    static get observers() {\n      return [\n        '_widthChanged(width, _headerCell, _footerCell, _cells.*)',\n        '_frozenChanged(frozen, _headerCell, _footerCell, _cells.*)',\n        '_flexGrowChanged(flexGrow, _headerCell, _footerCell, _cells.*)',\n        '_textAlignChanged(textAlign, _cells.*, _headerCell, _footerCell)',\n        '_orderChanged(_order, _headerCell, _footerCell, _cells.*)',\n        '_lastFrozenChanged(_lastFrozen)',\n        '_onRendererOrBindingChanged(_renderer, _cells, _cells.*, path)',\n        '_onHeaderRendererOrBindingChanged(_headerRenderer, _headerCell, path, header)',\n        '_onFooterRendererOrBindingChanged(_footerRenderer, _footerCell)',\n        '_resizableChanged(resizable, _headerCell)',\n        '_reorderStatusChanged(_reorderStatus, _headerCell, _footerCell, _cells.*)',\n        '_hiddenChanged(hidden, _headerCell, _footerCell, _cells.*)',\n      ];\n    }\n\n    /** @protected */\n    connectedCallback() {\n      super.connectedCallback();\n\n      // Adds the column cells to the grid after the column is attached\n      requestAnimationFrame(() => {\n        // Skip if the column has been detached\n        if (!this._grid) {\n          return;\n        }\n\n        this._allCells.forEach((cell) => {\n          if (!cell._content.parentNode) {\n            this._grid.appendChild(cell._content);\n          }\n        });\n      });\n    }\n\n    /** @protected */\n    disconnectedCallback() {\n      super.disconnectedCallback();\n\n      // Removes the column cells from the grid after the column is detached\n      requestAnimationFrame(() => {\n        // Skip if the column has been attached again\n        if (this._grid) {\n          return;\n        }\n\n        this._allCells.forEach((cell) => {\n          if (cell._content.parentNode) {\n            cell._content.parentNode.removeChild(cell._content);\n          }\n        });\n      });\n\n      this._gridValue = undefined;\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      processTemplates(this);\n    }\n\n    /**\n     * @return {!Grid | undefined}\n     * @protected\n     */\n    _findHostGrid() {\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      let el = this;\n      // Custom elements extending grid must have a specific localName\n      while (el && !/^vaadin.*grid(-pro)?$/.test(el.localName)) {\n        el = el.assignedSlot ? el.assignedSlot.parentNode : el.parentNode;\n      }\n      return el || undefined;\n    }\n\n    /**\n     * @return {!Grid | undefined}\n     * @protected\n     */\n    get _grid() {\n      if (!this._gridValue) {\n        this._gridValue = this._findHostGrid();\n      }\n      return this._gridValue;\n    }\n\n    /**\n     * @return {!Array<!HTMLElement>}\n     * @protected\n     */\n    get _allCells() {\n      return []\n        .concat(this._cells || [])\n        .concat(this._emptyCells || [])\n        .concat(this._headerCell)\n        .concat(this._footerCell)\n        .filter((cell) => cell);\n    }\n\n    /** @protected */\n    _renderHeaderAndFooter() {\n      this._renderHeaderCellContent(this._headerRenderer, this._headerCell);\n      this._renderFooterCellContent(this._footerRenderer, this._footerCell);\n    }\n\n    /** @private */\n    _flexGrowChanged(flexGrow) {\n      if (this.parentElement && this.parentElement._columnPropChanged) {\n        this.parentElement._columnPropChanged('flexGrow');\n      }\n\n      this._allCells.forEach((cell) => (cell.style.flexGrow = flexGrow));\n    }\n\n    /** @private */\n    _orderChanged(order) {\n      this._allCells.forEach((cell) => (cell.style.order = order));\n    }\n\n    /** @private */\n    _widthChanged(width) {\n      if (this.parentElement && this.parentElement._columnPropChanged) {\n        this.parentElement._columnPropChanged('width');\n      }\n\n      this._allCells.forEach((cell) => (cell.style.width = width));\n    }\n\n    /** @private */\n    _frozenChanged(frozen) {\n      if (this.parentElement && this.parentElement._columnPropChanged) {\n        this.parentElement._columnPropChanged('frozen', frozen);\n      }\n\n      this._allCells.forEach((cell) => cell.toggleAttribute('frozen', frozen));\n\n      this._grid && this._grid._frozenCellsChanged && this._grid._frozenCellsChanged();\n    }\n\n    /** @private */\n    _lastFrozenChanged(lastFrozen) {\n      this._allCells.forEach((cell) => cell.toggleAttribute('last-frozen', lastFrozen));\n\n      if (this.parentElement && this.parentElement._columnPropChanged) {\n        this.parentElement._lastFrozen = lastFrozen;\n      }\n    }\n\n    /**\n     * @param {string} path\n     * @return {string}\n     * @protected\n     */\n    _generateHeader(path) {\n      return path\n        .substr(path.lastIndexOf('.') + 1)\n        .replace(/([A-Z])/g, '-$1')\n        .toLowerCase()\n        .replace(/-/g, ' ')\n        .replace(/^./, (match) => match.toUpperCase());\n    }\n\n    /** @private */\n    _reorderStatusChanged(reorderStatus) {\n      this._allCells.forEach((cell) => cell.setAttribute('reorder-status', reorderStatus));\n    }\n\n    /** @private */\n    _resizableChanged(resizable, headerCell) {\n      if (resizable === undefined || headerCell === undefined) {\n        return;\n      }\n\n      if (headerCell) {\n        [headerCell].concat(this._emptyCells).forEach((cell) => {\n          if (cell) {\n            const existingHandle = cell.querySelector('[part~=\"resize-handle\"]');\n            if (existingHandle) {\n              cell.removeChild(existingHandle);\n            }\n\n            if (resizable) {\n              const handle = document.createElement('div');\n              handle.setAttribute('part', 'resize-handle');\n              cell.appendChild(handle);\n            }\n          }\n        });\n      }\n    }\n\n    /** @private */\n    _textAlignChanged(textAlign) {\n      if (textAlign === undefined) {\n        return;\n      }\n      if (['start', 'end', 'center'].indexOf(textAlign) === -1) {\n        console.warn('textAlign can only be set as \"start\", \"end\" or \"center\"');\n        return;\n      }\n\n      let textAlignFallback;\n      if (getComputedStyle(this._grid).direction === 'ltr') {\n        if (textAlign === 'start') {\n          textAlignFallback = 'left';\n        } else if (textAlign === 'end') {\n          textAlignFallback = 'right';\n        }\n      } else if (textAlign === 'start') {\n        textAlignFallback = 'right';\n      } else if (textAlign === 'end') {\n        textAlignFallback = 'left';\n      }\n\n      this._allCells.forEach((cell) => {\n        cell._content.style.textAlign = textAlign;\n        if (getComputedStyle(cell._content).textAlign !== textAlign) {\n          cell._content.style.textAlign = textAlignFallback;\n        }\n      });\n    }\n\n    /** @private */\n    _hiddenChanged(hidden) {\n      if (this.parentElement && this.parentElement._columnPropChanged) {\n        this.parentElement._columnPropChanged('hidden', hidden);\n      }\n\n      if (!!hidden !== !!this._previousHidden && this._grid) {\n        if (hidden === true) {\n          this._allCells.forEach((cell) => {\n            if (cell._content.parentNode) {\n              cell._content.parentNode.removeChild(cell._content);\n            }\n          });\n        }\n        this._grid._debouncerHiddenChanged = Debouncer.debounce(\n          this._grid._debouncerHiddenChanged,\n          animationFrame,\n          () => {\n            if (this._grid && this._grid._renderColumnTree) {\n              this._grid._renderColumnTree(this._grid._columnTree);\n            }\n          },\n        );\n\n        this._grid._updateLastFrozen && this._grid._updateLastFrozen();\n        this._grid._resetKeyboardNavigation && this._grid._resetKeyboardNavigation();\n      }\n      this._previousHidden = hidden;\n    }\n\n    /** @protected */\n    _runRenderer(renderer, cell, model) {\n      const args = [cell._content, this];\n      if (model && model.item) {\n        args.push(model);\n      }\n\n      renderer.apply(this, args);\n    }\n\n    /**\n     * Renders the content to the given cells using a renderer.\n     *\n     * @private\n     */\n    __renderCellsContent(renderer, cells) {\n      // Skip if the column is hidden or not attached to a grid.\n      if (this.hidden || !this._grid) {\n        return;\n      }\n\n      cells.forEach((cell) => {\n        if (!cell.parentElement) {\n          return;\n        }\n\n        const model = this._grid.__getRowModel(cell.parentElement);\n\n        if (!renderer) {\n          return;\n        }\n\n        if (cell._renderer !== renderer) {\n          this._clearCellContent(cell);\n        }\n\n        cell._renderer = renderer;\n\n        if (model.item || renderer === this._headerRenderer || renderer === this._footerRenderer) {\n          this._runRenderer(renderer, cell, model);\n        }\n      });\n    }\n\n    /**\n     * Clears the content of a cell.\n     *\n     * @protected\n     */\n    _clearCellContent(cell) {\n      cell._content.innerHTML = '';\n      // Whenever a Lit-based renderer is used, it assigns a Lit part to the node it was rendered into.\n      // When clearing the rendered content, this part needs to be manually disposed of.\n      // Otherwise, using a Lit-based renderer on the same node will throw an exception or render nothing afterward.\n      delete cell._content._$litPart$;\n    }\n\n    /**\n     * Renders the header cell content using a renderer,\n     * and then updates the visibility of the parent row depending on\n     * whether all its children cells are empty or not.\n     *\n     * @protected\n     */\n    _renderHeaderCellContent(headerRenderer, headerCell) {\n      if (!headerCell || !headerRenderer) {\n        return;\n      }\n\n      this.__renderCellsContent(headerRenderer, [headerCell]);\n      if (this._grid) {\n        this._grid.__updateHeaderFooterRowVisibility(headerCell.parentElement);\n      }\n    }\n\n    /** @protected */\n    _onHeaderRendererOrBindingChanged(headerRenderer, headerCell, ..._bindings) {\n      this._renderHeaderCellContent(headerRenderer, headerCell);\n    }\n\n    /**\n     * Renders the content of body cells using a renderer.\n     *\n     * @protected\n     */\n    _renderBodyCellsContent(renderer, cells) {\n      if (!cells || !renderer) {\n        return;\n      }\n\n      this.__renderCellsContent(renderer, cells);\n    }\n\n    /** @protected */\n    _onRendererOrBindingChanged(renderer, cells, ..._bindings) {\n      this._renderBodyCellsContent(renderer, cells);\n    }\n\n    /**\n     * Renders the footer cell content using a renderer\n     * and then updates the visibility of the parent row depending on\n     * whether all its children cells are empty or not.\n     *\n     * @protected\n     */\n    _renderFooterCellContent(footerRenderer, footerCell) {\n      if (!footerCell || !footerRenderer) {\n        return;\n      }\n\n      this.__renderCellsContent(footerRenderer, [footerCell]);\n      if (this._grid) {\n        this._grid.__updateHeaderFooterRowVisibility(footerCell.parentElement);\n      }\n    }\n\n    /** @protected */\n    _onFooterRendererOrBindingChanged(footerRenderer, footerCell) {\n      this._renderFooterCellContent(footerRenderer, footerCell);\n    }\n\n    /** @private */\n    __setTextContent(node, textContent) {\n      node.textContent !== textContent && (node.textContent = textContent);\n    }\n\n    /**\n     * Renders the text header to the header cell.\n     *\n     * @private\n     */\n    __textHeaderRenderer() {\n      this.__setTextContent(this._headerCell._content, this.header);\n    }\n\n    /**\n     * Computes the property name based on the path and renders it to the header cell.\n     * If the path is not defined, then nothing is rendered.\n     *\n     * @protected\n     */\n    _defaultHeaderRenderer() {\n      if (!this.path) {\n        return;\n      }\n\n      this.__setTextContent(this._headerCell._content, this._generateHeader(this.path));\n    }\n\n    /**\n     * Computes the item property value based on the path and renders it to the body cell.\n     * If the path is not defined, then nothing is rendered.\n     *\n     * @protected\n     */\n    _defaultRenderer(root, _owner, { item }) {\n      if (!this.path) {\n        return;\n      }\n\n      this.__setTextContent(root, this.get(this.path, item));\n    }\n\n    /**\n     * By default, nothing is rendered to the footer cell.\n     *\n     * @protected\n     */\n    _defaultFooterRenderer() {}\n\n    /**\n     * Computes the final header renderer for the `_headerRenderer` computed property.\n     * All the arguments are observable by the Polymer, it re-calls the method\n     * once an argument is changed to update the property value.\n     *\n     * @protected\n     * @return {GridHeaderFooterRenderer | undefined}\n     */\n    _computeHeaderRenderer(headerRenderer, header) {\n      if (headerRenderer) {\n        return headerRenderer;\n      }\n\n      if (header !== undefined && header !== null) {\n        return this.__textHeaderRenderer;\n      }\n\n      return this._defaultHeaderRenderer;\n    }\n\n    /**\n     * Computes the final renderer for the `_renderer` property.\n     * All the arguments are observable by the Polymer, it re-calls the method\n     * once an argument is changed to update the property value.\n     *\n     * @protected\n     * @return {GridBodyRenderer | undefined}\n     */\n    _computeRenderer(renderer) {\n      if (renderer) {\n        return renderer;\n      }\n\n      return this._defaultRenderer;\n    }\n\n    /**\n     * Computes the final footer renderer for the `_footerRenderer` property.\n     * All the arguments are observable by the Polymer, it re-calls the method\n     * once an argument is changed to update the property value.\n     *\n     * @protected\n     * @return {GridHeaderFooterRenderer | undefined}\n     */\n    _computeFooterRenderer(footerRenderer) {\n      if (footerRenderer) {\n        return footerRenderer;\n      }\n\n      return this._defaultFooterRenderer;\n    }\n  };\n\n/**\n * A `<vaadin-grid-column>` is used to configure how a column in `<vaadin-grid>`\n * should look like.\n *\n * See [`<vaadin-grid>`](#/elements/vaadin-grid) documentation for instructions on how\n * to configure the `<vaadin-grid-column>`.\n *\n * @extends HTMLElement\n * @mixes ColumnBaseMixin\n */\nclass GridColumn extends ColumnBaseMixin(DirMixin(PolymerElement)) {\n  static get is() {\n    return 'vaadin-grid-column';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Width of the cells for this column.\n       */\n      width: {\n        type: String,\n        value: '100px',\n      },\n\n      /**\n       * Flex grow ratio for the cell widths. When set to 0, cell width is fixed.\n       * @attr {number} flex-grow\n       * @type {number}\n       */\n      flexGrow: {\n        type: Number,\n        value: 1,\n      },\n\n      /**\n       * Custom function for rendering the cell content.\n       * Receives three arguments:\n       *\n       * - `root` The cell content DOM element. Append your content to it.\n       * - `column` The `<vaadin-grid-column>` element.\n       * - `model` The object with the properties related with\n       *   the rendered item, contains:\n       *   - `model.index` The index of the item.\n       *   - `model.item` The item.\n       *   - `model.expanded` Sublevel toggle state.\n       *   - `model.level` Level of the tree represented with a horizontal offset of the toggle button.\n       *   - `model.selected` Selected state.\n       *   - `model.detailsOpened` Details opened state.\n       *\n       * @type {GridBodyRenderer | null | undefined}\n       */\n      renderer: Function,\n\n      /**\n       * Represents the final renderer computed on the set of observable arguments.\n       * It is supposed to be used internally when rendering the content of a body cell.\n       *\n       * @protected\n       * @type {GridBodyRenderer | undefined}\n       */\n      _renderer: {\n        type: Function,\n        computed: '_computeRenderer(renderer, __initialized)',\n      },\n\n      /**\n       * Path to an item sub-property whose value gets displayed in the column body cells.\n       * The property name is also shown in the column header if an explicit header or renderer isn't defined.\n       */\n      path: {\n        type: String,\n      },\n\n      /**\n       * Automatically sets the width of the column based on the column contents when this is set to `true`.\n       *\n       * For performance reasons the column width is calculated automatically only once when the grid items\n       * are rendered for the first time and the calculation only considers the rows which are currently\n       * rendered in DOM (a bit more than what is currently visible). If the grid is scrolled, or the cell\n       * content changes, the column width might not match the contents anymore.\n       *\n       * Hidden columns are ignored in the calculation and their widths are not automatically updated when\n       * you show a column that was initially hidden.\n       *\n       * You can manually trigger the auto sizing behavior again by calling `grid.recalculateColumnWidths()`.\n       *\n       * The column width may still grow larger when `flexGrow` is not 0.\n       * @attr {boolean} auto-width\n       * @type {boolean}\n       */\n      autoWidth: {\n        type: Boolean,\n        value: false,\n      },\n\n      /**\n       * @type {Array<!HTMLElement>}\n       * @protected\n       */\n      _cells: Array,\n    };\n  }\n}\n\ncustomElements.define(GridColumn.is, GridColumn);\n\nexport { GridColumn };\n","/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * Passes the component to the template renderer callback if the template renderer is imported.\n * Otherwise, if there is a template, it warns that the template renderer needs to be imported.\n *\n * @param {HTMLElement} component\n */\nexport function processTemplates(component) {\n  if (window.Vaadin && window.Vaadin.templateRendererCallback) {\n    window.Vaadin.templateRendererCallback(component);\n    return;\n  }\n\n  if (component.querySelector('template')) {\n    console.warn(\n      `WARNING: <template> inside <${component.localName}> is no longer supported. Import @vaadin/polymer-legacy-adapter/template-renderer.js to enable compatibility.`,\n    );\n  }\n}\n","/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles(\n  'vaadin-grid',\n  css`\n    @keyframes vaadin-grid-appear {\n      to {\n        opacity: 1;\n      }\n    }\n\n    :host {\n      display: block;\n      animation: 1ms vaadin-grid-appear;\n      height: 400px;\n      flex: 1 1 auto;\n      align-self: stretch;\n      position: relative;\n    }\n\n    :host([hidden]) {\n      display: none !important;\n    }\n\n    :host([disabled]) {\n      pointer-events: none;\n    }\n\n    #scroller {\n      display: block;\n      transform: translateY(0);\n      width: auto;\n      height: auto;\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n    }\n\n    :host([all-rows-visible]) {\n      height: auto;\n      align-self: flex-start;\n      flex-grow: 0;\n      width: 100%;\n    }\n\n    :host([all-rows-visible]) #scroller {\n      width: 100%;\n      height: 100%;\n      position: relative;\n    }\n\n    :host([all-rows-visible]) #items {\n      min-height: 1px;\n    }\n\n    #table {\n      display: flex;\n      flex-direction: column;\n      width: 100%;\n      height: 100%;\n      overflow: auto;\n      position: relative;\n      outline: none;\n      /* Workaround for a Desktop Safari bug: new stacking context here prevents the scrollbar from getting hidden */\n      z-index: 0;\n    }\n\n    #header,\n    #footer {\n      transform: translateX(var(--_grid-horizontal-scroll-position));\n      display: block;\n      position: -webkit-sticky;\n      position: sticky;\n      left: 0;\n      overflow: visible;\n      width: 100%;\n      z-index: 1;\n    }\n\n    #header {\n      top: 0;\n    }\n\n    th {\n      text-align: inherit;\n    }\n\n    /* Safari doesn't work with \"inherit\" */\n    [safari] th {\n      text-align: initial;\n    }\n\n    #footer {\n      bottom: 0;\n    }\n\n    #items {\n      transform: translateX(var(--_grid-horizontal-scroll-position));\n      flex-grow: 1;\n      flex-shrink: 0;\n      display: block;\n      position: -webkit-sticky;\n      position: sticky;\n      width: 100%;\n      left: 0;\n      overflow: visible;\n    }\n\n    [part~='row'] {\n      display: flex;\n      width: 100%;\n      box-sizing: border-box;\n      margin: 0;\n    }\n\n    [part~='row'][loading] [part~='body-cell'] ::slotted(vaadin-grid-cell-content) {\n      opacity: 0;\n    }\n\n    #items [part~='row'] {\n      position: absolute;\n    }\n\n    #items [part~='row']:empty {\n      height: 100%;\n    }\n\n    [part~='cell']:not([part~='details-cell']) {\n      flex-shrink: 0;\n      flex-grow: 1;\n      box-sizing: border-box;\n      display: flex;\n      width: 100%;\n      position: relative;\n      align-items: center;\n      padding: 0;\n      white-space: nowrap;\n    }\n\n    [part~='details-cell'] {\n      position: absolute;\n      bottom: 0;\n      width: 100%;\n      box-sizing: border-box;\n      padding: 0;\n    }\n\n    [part~='cell'] ::slotted(vaadin-grid-cell-content) {\n      display: block;\n      width: 100%;\n      box-sizing: border-box;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n\n    [hidden] {\n      display: none !important;\n    }\n\n    [frozen] {\n      z-index: 2;\n      transform: translateX(calc(-1 * var(--_grid-horizontal-scroll-position)));\n      will-change: transform;\n    }\n\n    [no-scrollbars][safari] #table,\n    [no-scrollbars][firefox] #table {\n      overflow: hidden;\n    }\n\n    /* Reordering styles */\n    :host([reordering]) [part~='cell'] ::slotted(vaadin-grid-cell-content),\n    :host([reordering]) [part~='resize-handle'],\n    #scroller[no-content-pointer-events] [part~='cell'] ::slotted(vaadin-grid-cell-content) {\n      pointer-events: none;\n    }\n\n    [part~='reorder-ghost'] {\n      visibility: hidden;\n      position: fixed;\n      pointer-events: none;\n      opacity: 0.5;\n\n      /* Prevent overflowing the grid in Firefox */\n      top: 0;\n      left: 0;\n    }\n\n    :host([reordering]) {\n      -moz-user-select: none;\n      -webkit-user-select: none;\n      user-select: none;\n    }\n\n    /* Resizing styles */\n    [part~='resize-handle'] {\n      position: absolute;\n      top: 0;\n      right: 0;\n      height: 100%;\n      cursor: col-resize;\n      z-index: 1;\n    }\n\n    [part~='resize-handle']::before {\n      position: absolute;\n      content: '';\n      height: 100%;\n      width: 35px;\n      transform: translateX(-50%);\n    }\n\n    [last-column] [part~='resize-handle']::before,\n    [last-frozen] [part~='resize-handle']::before {\n      width: 18px;\n      transform: none;\n      right: 0;\n    }\n\n    #scroller[column-resizing] {\n      -ms-user-select: none;\n      -moz-user-select: none;\n      -webkit-user-select: none;\n      user-select: none;\n    }\n\n    /* Sizer styles */\n    #sizer {\n      display: flex;\n      position: absolute;\n      visibility: hidden;\n    }\n\n    #sizer [part~='details-cell'] {\n      display: none !important;\n    }\n\n    #sizer [part~='cell'][hidden] {\n      display: none !important;\n    }\n\n    #sizer [part~='cell'] {\n      display: block;\n      flex-shrink: 0;\n      line-height: 0;\n      height: 0 !important;\n      min-height: 0 !important;\n      max-height: 0 !important;\n      padding: 0 !important;\n      border: none !important;\n    }\n\n    #sizer [part~='cell']::before {\n      content: '-';\n    }\n\n    #sizer [part~='cell'] ::slotted(vaadin-grid-cell-content) {\n      display: none !important;\n    }\n\n    /* RTL specific styles */\n\n    :host([dir='rtl']) *:is(#items, #header, #footer, [frozen]) {\n      transform: none;\n    }\n\n    :host([dir='rtl']) #items,\n    :host([dir='rtl']) #header,\n    :host([dir='rtl']) #footer {\n      left: auto;\n    }\n\n    :host([dir='rtl']) [part~='reorder-ghost'] {\n      left: auto;\n      right: 0;\n    }\n\n    :host([dir='rtl']) [part~='resize-handle'] {\n      left: 0;\n      right: auto;\n    }\n\n    :host([dir='rtl']) [part~='resize-handle']::before {\n      transform: translateX(50%);\n    }\n\n    :host([dir='rtl']) [last-column] [part~='resize-handle']::before,\n    :host([dir='rtl']) [last-frozen] [part~='resize-handle']::before {\n      left: 0;\n      right: auto;\n    }\n  `,\n  { moduleId: 'vaadin-grid-styles' },\n);\n","import { IronListAdapter } from './virtualizer-iron-list-adapter.js';\n\nexport class Virtualizer {\n  /**\n   * @typedef {Object} VirtualizerConfig\n   * @property {Function} createElements Function that returns the given number of new elements\n   * @property {Function} updateElement Function that updates the element at a specific index\n   * @property {HTMLElement} scrollTarget Reference to the scrolling element\n   * @property {HTMLElement} scrollContainer Reference to a wrapper for the item elements (or a slot) inside the scrollTarget\n   * @property {HTMLElement | undefined} elementsContainer Reference to the container in which the item elements are placed, defaults to scrollContainer\n   * @property {boolean | undefined} reorderElements Determines whether the physical item elements should be kept in order in the DOM\n   * @param {VirtualizerConfig} config Configuration for the virtualizer\n   */\n  constructor(config) {\n    this.__adapter = new IronListAdapter(config);\n  }\n\n  /**\n   * The size of the virtualizer\n   * @return {number | undefined} The size of the virtualizer\n   */\n  get size() {\n    return this.__adapter.size;\n  }\n\n  /**\n   * The size of the virtualizer\n   * @param {number} size The size of the virtualizer\n   */\n  set size(size) {\n    this.__adapter.size = size;\n  }\n\n  /**\n   * Scroll to a specific index in the virtual list\n   *\n   * @method scrollToIndex\n   * @param {number} index The index of the item\n   */\n  scrollToIndex(index) {\n    this.__adapter.scrollToIndex(index);\n  }\n\n  /**\n   * Requests the virtualizer to re-render the item elements on an index range, if currently in the DOM\n   *\n   * @method update\n   * @param {number | undefined} startIndex The start index of the range\n   * @param {number | undefined} endIndex The end index of the range\n   */\n  update(startIndex = 0, endIndex = this.size - 1) {\n    this.__adapter.update(startIndex, endIndex);\n  }\n\n  /**\n   * Flushes active asynchronous tasks so that the component and the DOM end up in a stable state\n   *\n   * @method update\n   * @param {number | undefined} startIndex The start index of the range\n   * @param {number | undefined} endIndex The end index of the range\n   */\n  flush() {\n    this.__adapter.flush();\n  }\n\n  /**\n   * Gets the index of the first visible item in the viewport.\n   *\n   * @return {number}\n   */\n  get firstVisibleIndex() {\n    return this.__adapter.adjustedFirstVisibleIndex;\n  }\n\n  /**\n   * Gets the index of the last visible item in the viewport.\n   *\n   * @return {number}\n   */\n  get lastVisibleIndex() {\n    return this.__adapter.adjustedLastVisibleIndex;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { animationFrame, timeOut } from './async.js';\nimport { isSafari } from './browser-utils.js';\nimport { Debouncer, flush } from './debounce.js';\nimport { ironList } from './iron-list-core.js';\n\n// iron-list can by default handle sizes up to around 100000.\n// When the size is larger than MAX_VIRTUAL_COUNT _vidxOffset is used\nconst MAX_VIRTUAL_COUNT = 100000;\nconst OFFSET_ADJUST_MIN_THRESHOLD = 1000;\n\nexport class IronListAdapter {\n  constructor({ createElements, updateElement, scrollTarget, scrollContainer, elementsContainer, reorderElements }) {\n    this.isAttached = true;\n    this._vidxOffset = 0;\n    this.createElements = createElements;\n    this.updateElement = updateElement;\n    this.scrollTarget = scrollTarget;\n    this.scrollContainer = scrollContainer;\n    this.elementsContainer = elementsContainer || scrollContainer;\n    this.reorderElements = reorderElements;\n    // Iron-list uses this value to determine how many pages of elements to render\n    this._maxPages = 1.3;\n\n    this.timeouts = {\n      SCROLL_REORDER: 500,\n      IGNORE_WHEEL: 500,\n    };\n\n    this.__resizeObserver = new ResizeObserver(() => this._resizeHandler());\n\n    if (getComputedStyle(this.scrollTarget).overflow === 'visible') {\n      this.scrollTarget.style.overflow = 'auto';\n    }\n\n    if (getComputedStyle(this.scrollContainer).position === 'static') {\n      this.scrollContainer.style.position = 'relative';\n    }\n\n    this.__resizeObserver.observe(this.scrollTarget);\n    this.scrollTarget.addEventListener('scroll', () => this._scrollHandler());\n\n    this._scrollLineHeight = this._getScrollLineHeight();\n    this.scrollTarget.addEventListener('wheel', (e) => this.__onWheel(e));\n\n    if (this.reorderElements) {\n      // Reordering the physical elements cancels the user's grab of the scroll bar handle on Safari.\n      // Need to defer reordering until the user lets go of the scroll bar handle.\n      this.scrollTarget.addEventListener('mousedown', () => (this.__mouseDown = true));\n      this.scrollTarget.addEventListener('mouseup', () => {\n        this.__mouseDown = false;\n        if (this.__pendingReorder) {\n          this.__reorderElements();\n        }\n      });\n    }\n  }\n\n  _manageFocus() {}\n\n  _removeFocusedItem() {}\n\n  get scrollOffset() {\n    return 0;\n  }\n\n  get adjustedFirstVisibleIndex() {\n    return this.firstVisibleIndex + this._vidxOffset;\n  }\n\n  get adjustedLastVisibleIndex() {\n    return this.lastVisibleIndex + this._vidxOffset;\n  }\n\n  scrollToIndex(index) {\n    if (typeof index !== 'number' || isNaN(index) || this.size === 0 || !this.scrollTarget.offsetHeight) {\n      return;\n    }\n    index = this._clamp(index, 0, this.size - 1);\n\n    const visibleElementCount = this.__getVisibleElements().length;\n    let targetVirtualIndex = Math.floor((index / this.size) * this._virtualCount);\n    if (this._virtualCount - targetVirtualIndex < visibleElementCount) {\n      targetVirtualIndex = this._virtualCount - (this.size - index);\n      this._vidxOffset = this.size - this._virtualCount;\n    } else if (targetVirtualIndex < visibleElementCount) {\n      if (index < OFFSET_ADJUST_MIN_THRESHOLD) {\n        targetVirtualIndex = index;\n        this._vidxOffset = 0;\n      } else {\n        targetVirtualIndex = OFFSET_ADJUST_MIN_THRESHOLD;\n        this._vidxOffset = index - targetVirtualIndex;\n      }\n    } else {\n      this._vidxOffset = index - targetVirtualIndex;\n    }\n\n    this.__skipNextVirtualIndexAdjust = true;\n    super.scrollToIndex(targetVirtualIndex);\n\n    if (this.adjustedFirstVisibleIndex !== index && this._scrollTop < this._maxScrollTop && !this.grid) {\n      // Workaround an iron-list issue by manually adjusting the scroll position\n      this._scrollTop -= this.__getIndexScrollOffset(index) || 0;\n    }\n    this._scrollHandler();\n  }\n\n  flush() {\n    // The scroll target is hidden.\n    if (this.scrollTarget.offsetHeight === 0) {\n      return;\n    }\n\n    this._resizeHandler();\n    flush();\n    this._scrollHandler();\n    this.__scrollReorderDebouncer && this.__scrollReorderDebouncer.flush();\n    this.__debouncerWheelAnimationFrame && this.__debouncerWheelAnimationFrame.flush();\n  }\n\n  update(startIndex = 0, endIndex = this.size - 1) {\n    this.__getVisibleElements().forEach((el) => {\n      if (el.__virtualIndex >= startIndex && el.__virtualIndex <= endIndex) {\n        this.__updateElement(el, el.__virtualIndex, true);\n      }\n    });\n  }\n\n  __updateElement(el, index, forceSameIndexUpdates) {\n    // Clean up temporary min height\n    if (el.style.minHeight) {\n      el.style.minHeight = '';\n    }\n\n    if (!this.__preventElementUpdates && (el.__lastUpdatedIndex !== index || forceSameIndexUpdates)) {\n      this.updateElement(el, index);\n      el.__lastUpdatedIndex = index;\n    }\n\n    if (el.offsetHeight === 0) {\n      // If the elements have 0 height after update (for example due to lazy rendering),\n      // it results in iron-list requesting to create an unlimited count of elements.\n      // Assign a temporary min height to elements that would otherwise end up having\n      // no height.\n      el.style.minHeight = '200px';\n    }\n  }\n\n  __getIndexScrollOffset(index) {\n    const element = this.__getVisibleElements().find((el) => el.__virtualIndex === index);\n    return element ? this.scrollTarget.getBoundingClientRect().top - element.getBoundingClientRect().top : undefined;\n  }\n\n  get size() {\n    return this.__size;\n  }\n\n  set size(size) {\n    if (size === this.size) {\n      return;\n    }\n\n    // Prevent element update while the scroll position is being restored\n    this.__preventElementUpdates = true;\n\n    // Record the scroll position before changing the size\n    let fvi; // first visible index\n    let fviOffsetBefore; // scroll offset of the first visible index\n    if (size > 0) {\n      fvi = this.adjustedFirstVisibleIndex;\n      fviOffsetBefore = this.__getIndexScrollOffset(fvi);\n    }\n\n    // Change the size\n    this.__size = size;\n\n    // Flush before invoking items change to avoid\n    // creating excess elements on the following flush()\n    flush();\n\n    this._itemsChanged({\n      path: 'items',\n    });\n    flush();\n\n    // Try to restore the scroll position if the new size is larger than 0\n    if (size > 0) {\n      fvi = Math.min(fvi, size - 1);\n      this.scrollToIndex(fvi);\n\n      const fviOffsetAfter = this.__getIndexScrollOffset(fvi);\n      if (fviOffsetBefore !== undefined && fviOffsetAfter !== undefined) {\n        this._scrollTop += fviOffsetBefore - fviOffsetAfter;\n      }\n    }\n\n    if (!this.elementsContainer.children.length) {\n      requestAnimationFrame(() => this._resizeHandler());\n    }\n\n    this.__preventElementUpdates = false;\n    // Schedule and flush a resize handler\n    this._resizeHandler();\n    flush();\n  }\n\n  /** @private */\n  get _scrollTop() {\n    return this.scrollTarget.scrollTop;\n  }\n\n  /** @private */\n  set _scrollTop(top) {\n    this.scrollTarget.scrollTop = top;\n  }\n\n  /** @private */\n  get items() {\n    return {\n      length: Math.min(this.size, MAX_VIRTUAL_COUNT),\n    };\n  }\n\n  /** @private */\n  get offsetHeight() {\n    return this.scrollTarget.offsetHeight;\n  }\n\n  /** @private */\n  get $() {\n    return {\n      items: this.scrollContainer,\n    };\n  }\n\n  /** @private */\n  updateViewportBoundaries() {\n    const styles = window.getComputedStyle(this.scrollTarget);\n    this._scrollerPaddingTop = this.scrollTarget === this ? 0 : parseInt(styles['padding-top'], 10);\n    this._isRTL = Boolean(styles.direction === 'rtl');\n    this._viewportWidth = this.elementsContainer.offsetWidth;\n    this._viewportHeight = this.scrollTarget.offsetHeight;\n    this._scrollPageHeight = this._viewportHeight - this._scrollLineHeight;\n    this.grid && this._updateGridMetrics();\n  }\n\n  /** @private */\n  setAttribute() {}\n\n  /** @private */\n  _createPool(size) {\n    const physicalItems = this.createElements(size);\n    const fragment = document.createDocumentFragment();\n    physicalItems.forEach((el) => {\n      el.style.position = 'absolute';\n      fragment.appendChild(el);\n      this.__resizeObserver.observe(el);\n    });\n    this.elementsContainer.appendChild(fragment);\n    return physicalItems;\n  }\n\n  /** @private */\n  _assignModels(itemSet) {\n    this._iterateItems((pidx, vidx) => {\n      const el = this._physicalItems[pidx];\n      el.hidden = vidx >= this.size;\n      if (!el.hidden) {\n        el.__virtualIndex = vidx + (this._vidxOffset || 0);\n        this.__updateElement(el, el.__virtualIndex);\n      } else {\n        delete el.__lastUpdatedIndex;\n      }\n    }, itemSet);\n  }\n\n  /** @private */\n  _isClientFull() {\n    // Workaround an issue in iron-list that can cause it to freeze on fast scroll\n    setTimeout(() => (this.__clientFull = true));\n    return this.__clientFull || super._isClientFull();\n  }\n\n  /** @private */\n  translate3d(_x, y, _z, el) {\n    el.style.transform = `translateY(${y})`;\n  }\n\n  /** @private */\n  toggleScrollListener() {}\n\n  _scrollHandler() {\n    this._adjustVirtualIndexOffset(this._scrollTop - (this.__previousScrollTop || 0));\n\n    super._scrollHandler();\n\n    if (this._physicalCount !== 0) {\n      // After running super._scrollHandler, fix _virtualStart to workaround an iron-list issue.\n      // See https://github.com/vaadin/web-components/issues/1691\n      const reusables = this._getReusables(true);\n      this._physicalTop = reusables.physicalTop;\n      this._virtualStart += reusables.indexes.length;\n      this._physicalStart += reusables.indexes.length;\n    }\n\n    if (this.reorderElements) {\n      this.__scrollReorderDebouncer = Debouncer.debounce(\n        this.__scrollReorderDebouncer,\n        timeOut.after(this.timeouts.SCROLL_REORDER),\n        () => this.__reorderElements(),\n      );\n    }\n\n    this.__previousScrollTop = this._scrollTop;\n  }\n\n  /** @private */\n  __onWheel(e) {\n    if (e.ctrlKey || this._hasScrolledAncestor(e.target, e.deltaX, e.deltaY)) {\n      return;\n    }\n\n    let deltaY = e.deltaY;\n    if (e.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      // Scrolling by \"lines of text\" instead of pixels\n      deltaY *= this._scrollLineHeight;\n    } else if (e.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      // Scrolling by \"pages\" instead of pixels\n      deltaY *= this._scrollPageHeight;\n    }\n\n    this._deltaYAcc = this._deltaYAcc || 0;\n\n    if (this._wheelAnimationFrame) {\n      // Accumulate wheel delta while a frame is being processed\n      this._deltaYAcc += deltaY;\n      e.preventDefault();\n      return;\n    }\n\n    deltaY += this._deltaYAcc;\n    this._deltaYAcc = 0;\n\n    this._wheelAnimationFrame = true;\n    this.__debouncerWheelAnimationFrame = Debouncer.debounce(\n      this.__debouncerWheelAnimationFrame,\n      animationFrame,\n      () => (this._wheelAnimationFrame = false),\n    );\n\n    const momentum = Math.abs(e.deltaX) + Math.abs(deltaY);\n\n    if (this._canScroll(this.scrollTarget, e.deltaX, deltaY)) {\n      e.preventDefault();\n      this.scrollTarget.scrollTop += deltaY;\n      this.scrollTarget.scrollLeft += e.deltaX;\n\n      this._hasResidualMomentum = true;\n\n      this._ignoreNewWheel = true;\n      this._debouncerIgnoreNewWheel = Debouncer.debounce(\n        this._debouncerIgnoreNewWheel,\n        timeOut.after(this.timeouts.IGNORE_WHEEL),\n        () => (this._ignoreNewWheel = false),\n      );\n    } else if ((this._hasResidualMomentum && momentum <= this._previousMomentum) || this._ignoreNewWheel) {\n      e.preventDefault();\n    } else if (momentum > this._previousMomentum) {\n      this._hasResidualMomentum = false;\n    }\n    this._previousMomentum = momentum;\n  }\n\n  /**\n   * Determines if the element has an ancestor that handles the scroll delta prior to this\n   *\n   * @private\n   */\n  _hasScrolledAncestor(el, deltaX, deltaY) {\n    if (el === this.scrollTarget || el === this.scrollTarget.getRootNode().host) {\n      return false;\n    } else if (\n      this._canScroll(el, deltaX, deltaY) &&\n      ['auto', 'scroll'].indexOf(getComputedStyle(el).overflow) !== -1\n    ) {\n      return true;\n    } else if (el !== this && el.parentElement) {\n      return this._hasScrolledAncestor(el.parentElement, deltaX, deltaY);\n    }\n  }\n\n  _canScroll(el, deltaX, deltaY) {\n    return (\n      (deltaY > 0 && el.scrollTop < el.scrollHeight - el.offsetHeight) ||\n      (deltaY < 0 && el.scrollTop > 0) ||\n      (deltaX > 0 && el.scrollLeft < el.scrollWidth - el.offsetWidth) ||\n      (deltaX < 0 && el.scrollLeft > 0)\n    );\n  }\n\n  /**\n   * @returns {Number|undefined} - The browser's default font-size in pixels\n   * @private\n   */\n  _getScrollLineHeight() {\n    const el = document.createElement('div');\n    el.style.fontSize = 'initial';\n    el.style.display = 'none';\n    document.body.appendChild(el);\n    const fontSize = window.getComputedStyle(el).fontSize;\n    document.body.removeChild(el);\n    return fontSize ? window.parseInt(fontSize) : undefined;\n  }\n\n  __getVisibleElements() {\n    return Array.from(this.elementsContainer.children).filter((element) => !element.hidden);\n  }\n\n  /** @private */\n  __reorderElements() {\n    if (this.__mouseDown) {\n      this.__pendingReorder = true;\n      return;\n    }\n    this.__pendingReorder = false;\n\n    const adjustedVirtualStart = this._virtualStart + (this._vidxOffset || 0);\n\n    // Which row to use as a target?\n    const visibleElements = this.__getVisibleElements();\n\n    const elementWithFocus = visibleElements.find(\n      (element) =>\n        element.contains(this.elementsContainer.getRootNode().activeElement) ||\n        element.contains(this.scrollTarget.getRootNode().activeElement),\n    );\n    const targetElement = elementWithFocus || visibleElements[0];\n    if (!targetElement) {\n      // All elements are hidden, don't reorder\n      return;\n    }\n\n    // Where the target row should be?\n    const targetPhysicalIndex = targetElement.__virtualIndex - adjustedVirtualStart;\n\n    // Reodrer the DOM elements to keep the target row at the target physical index\n    const delta = visibleElements.indexOf(targetElement) - targetPhysicalIndex;\n    if (delta > 0) {\n      for (let i = 0; i < delta; i++) {\n        this.elementsContainer.appendChild(visibleElements[i]);\n      }\n    } else if (delta < 0) {\n      for (let i = visibleElements.length + delta; i < visibleElements.length; i++) {\n        this.elementsContainer.insertBefore(visibleElements[i], visibleElements[0]);\n      }\n    }\n\n    // Due to a rendering bug, reordering the rows can make parts of the scroll target disappear\n    // on Safari when using sticky positioning in case the scroll target is inside a flexbox.\n    // This issue manifests with grid (the header can disappear if grid is used inside a flexbox)\n    if (isSafari) {\n      const { transform } = this.scrollTarget.style;\n      this.scrollTarget.style.transform = 'translateZ(0)';\n      setTimeout(() => (this.scrollTarget.style.transform = transform));\n    }\n  }\n\n  /** @private */\n  _adjustVirtualIndexOffset(delta) {\n    if (this._virtualCount >= this.size) {\n      this._vidxOffset = 0;\n    } else if (this.__skipNextVirtualIndexAdjust) {\n      this.__skipNextVirtualIndexAdjust = false;\n    } else if (Math.abs(delta) > 10000) {\n      // Process a large scroll position change\n      const scale = this._scrollTop / (this.scrollTarget.scrollHeight - this.scrollTarget.offsetHeight);\n      const offset = scale * this.size;\n      this._vidxOffset = Math.round(offset - scale * this._virtualCount);\n    } else {\n      // Make sure user can always swipe/wheel scroll to the start and end\n      const oldOffset = this._vidxOffset;\n      const threshold = OFFSET_ADJUST_MIN_THRESHOLD;\n      const maxShift = 100;\n\n      // Near start\n      if (this._scrollTop === 0) {\n        this._vidxOffset = 0;\n        if (oldOffset !== this._vidxOffset) {\n          super.scrollToIndex(0);\n        }\n      } else if (this.firstVisibleIndex < threshold && this._vidxOffset > 0) {\n        this._vidxOffset -= Math.min(this._vidxOffset, maxShift);\n        super.scrollToIndex(this.firstVisibleIndex + (oldOffset - this._vidxOffset));\n      }\n\n      // Near end\n      const maxOffset = this.size - this._virtualCount;\n      if (this._scrollTop >= this._maxScrollTop && this._maxScrollTop > 0) {\n        this._vidxOffset = maxOffset;\n        if (oldOffset !== this._vidxOffset) {\n          super.scrollToIndex(this._virtualCount - 1);\n        }\n      } else if (this.firstVisibleIndex > this._virtualCount - threshold && this._vidxOffset < maxOffset) {\n        this._vidxOffset += Math.min(maxOffset - this._vidxOffset, maxShift);\n        super.scrollToIndex(this.firstVisibleIndex - (this._vidxOffset - oldOffset));\n      }\n    }\n  }\n}\n\nObject.setPrototypeOf(IronListAdapter.prototype, ironList);\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\nimport { animationFrame, idlePeriod, microTask } from './async.js';\nimport { Debouncer, enqueueDebouncer, flush } from './debounce.js';\n\nconst IOS = navigator.userAgent.match(/iP(?:hone|ad;(?: U;)? CPU) OS (\\d+)/);\nconst IOS_TOUCH_SCROLLING = IOS && IOS[1] >= 8;\nconst DEFAULT_PHYSICAL_COUNT = 3;\n\n/**\n * @private\n */\nexport const ironList = {\n  /**\n   * The ratio of hidden tiles that should remain in the scroll direction.\n   * Recommended value ~0.5, so it will distribute tiles evenly in both\n   * directions.\n   */\n  _ratio: 0.5,\n\n  /**\n   * The padding-top value for the list.\n   */\n  _scrollerPaddingTop: 0,\n\n  /**\n   * This value is a cached value of `scrollTop` from the last `scroll` event.\n   */\n  _scrollPosition: 0,\n\n  /**\n   * The sum of the heights of all the tiles in the DOM.\n   */\n  _physicalSize: 0,\n\n  /**\n   * The average `offsetHeight` of the tiles observed till now.\n   */\n  _physicalAverage: 0,\n\n  /**\n   * The number of tiles which `offsetHeight` > 0 observed until now.\n   */\n  _physicalAverageCount: 0,\n\n  /**\n   * The Y position of the item rendered in the `_physicalStart`\n   * tile relative to the scrolling list.\n   */\n  _physicalTop: 0,\n\n  /**\n   * The number of items in the list.\n   */\n  _virtualCount: 0,\n\n  /**\n   * The estimated scroll height based on `_physicalAverage`\n   */\n  _estScrollHeight: 0,\n\n  /**\n   * The scroll height of the dom node\n   */\n  _scrollHeight: 0,\n\n  /**\n   * The height of the list. This is referred as the viewport in the context of\n   * list.\n   */\n  _viewportHeight: 0,\n\n  /**\n   * The width of the list. This is referred as the viewport in the context of\n   * list.\n   */\n  _viewportWidth: 0,\n\n  /**\n   * An array of DOM nodes that are currently in the tree\n   * @type {?Array<!HTMLElement>}\n   */\n  _physicalItems: null,\n\n  /**\n   * An array of heights for each item in `_physicalItems`\n   * @type {?Array<number>}\n   */\n  _physicalSizes: null,\n\n  /**\n   * A cached value for the first visible index.\n   * See `firstVisibleIndex`\n   * @type {?number}\n   */\n  _firstVisibleIndexVal: null,\n\n  /**\n   * A cached value for the last visible index.\n   * See `lastVisibleIndex`\n   * @type {?number}\n   */\n  _lastVisibleIndexVal: null,\n\n  /**\n   * The max number of pages to render. One page is equivalent to the height of\n   * the list.\n   */\n  _maxPages: 2,\n\n  /**\n   * The maximum items per row\n   */\n  _itemsPerRow: 1,\n\n  /**\n   * The width of each grid item\n   */\n  _itemWidth: 0,\n\n  /**\n   * The height of the row in grid layout.\n   */\n  _rowHeight: 0,\n\n  /**\n   * The cost of stamping a template in ms.\n   */\n  _templateCost: 0,\n\n  /**\n   * Needed to pass event.model property to declarative event handlers -\n   * see polymer/polymer#4339.\n   */\n  _parentModel: true,\n\n  /**\n   * The bottom of the physical content.\n   */\n  get _physicalBottom() {\n    return this._physicalTop + this._physicalSize;\n  },\n\n  /**\n   * The bottom of the scroll.\n   */\n  get _scrollBottom() {\n    return this._scrollPosition + this._viewportHeight;\n  },\n\n  /**\n   * The n-th item rendered in the last physical item.\n   */\n  get _virtualEnd() {\n    return this._virtualStart + this._physicalCount - 1;\n  },\n\n  /**\n   * The height of the physical content that isn't on the screen.\n   */\n  get _hiddenContentSize() {\n    var size = this.grid ? this._physicalRows * this._rowHeight : this._physicalSize;\n    return size - this._viewportHeight;\n  },\n\n  /**\n   * The maximum scroll top value.\n   */\n  get _maxScrollTop() {\n    return this._estScrollHeight - this._viewportHeight + this._scrollOffset;\n  },\n\n  /**\n   * The largest n-th value for an item such that it can be rendered in\n   * `_physicalStart`.\n   */\n  get _maxVirtualStart() {\n    var virtualCount = this._convertIndexToCompleteRow(this._virtualCount);\n    return Math.max(0, virtualCount - this._physicalCount);\n  },\n\n  get _virtualStart() {\n    return this._virtualStartVal || 0;\n  },\n\n  set _virtualStart(val) {\n    val = this._clamp(val, 0, this._maxVirtualStart);\n    if (this.grid) {\n      val -= val % this._itemsPerRow;\n    }\n    this._virtualStartVal = val;\n  },\n\n  get _physicalStart() {\n    return this._physicalStartVal || 0;\n  },\n\n  /**\n   * The k-th tile that is at the top of the scrolling list.\n   */\n  set _physicalStart(val) {\n    val %= this._physicalCount;\n    if (val < 0) {\n      val = this._physicalCount + val;\n    }\n    if (this.grid) {\n      val -= val % this._itemsPerRow;\n    }\n    this._physicalStartVal = val;\n  },\n\n  /**\n   * The k-th tile that is at the bottom of the scrolling list.\n   */\n  get _physicalEnd() {\n    return (this._physicalStart + this._physicalCount - 1) % this._physicalCount;\n  },\n\n  get _physicalCount() {\n    return this._physicalCountVal || 0;\n  },\n\n  set _physicalCount(val) {\n    this._physicalCountVal = val;\n  },\n\n  /**\n   * An optimal physical size such that we will have enough physical items\n   * to fill up the viewport and recycle when the user scrolls.\n   *\n   * This default value assumes that we will at least have the equivalent\n   * to a viewport of physical items above and below the user's viewport.\n   */\n  get _optPhysicalSize() {\n    return this._viewportHeight === 0 ? Infinity : this._viewportHeight * this._maxPages;\n  },\n\n  /**\n   * True if the current list is visible.\n   */\n  get _isVisible() {\n    return Boolean(this.offsetWidth || this.offsetHeight);\n  },\n\n  /**\n   * Gets the index of the first visible item in the viewport.\n   *\n   * @type {number}\n   */\n  get firstVisibleIndex() {\n    var idx = this._firstVisibleIndexVal;\n    if (idx == null) {\n      var physicalOffset = this._physicalTop + this._scrollOffset;\n\n      idx =\n        this._iterateItems((pidx, vidx) => {\n          physicalOffset += this._getPhysicalSizeIncrement(pidx);\n\n          if (physicalOffset > this._scrollPosition) {\n            return this.grid ? vidx - (vidx % this._itemsPerRow) : vidx;\n          }\n          // Handle a partially rendered final row in grid mode\n          if (this.grid && this._virtualCount - 1 === vidx) {\n            return vidx - (vidx % this._itemsPerRow);\n          }\n        }) || 0;\n      this._firstVisibleIndexVal = idx;\n    }\n    return idx;\n  },\n\n  /**\n   * Gets the index of the last visible item in the viewport.\n   *\n   * @type {number}\n   */\n  get lastVisibleIndex() {\n    var idx = this._lastVisibleIndexVal;\n    if (idx == null) {\n      if (this.grid) {\n        idx = Math.min(this._virtualCount, this.firstVisibleIndex + this._estRowsInView * this._itemsPerRow - 1);\n      } else {\n        var physicalOffset = this._physicalTop + this._scrollOffset;\n        this._iterateItems((pidx, vidx) => {\n          if (physicalOffset < this._scrollBottom) {\n            idx = vidx;\n          }\n          physicalOffset += this._getPhysicalSizeIncrement(pidx);\n        });\n      }\n      this._lastVisibleIndexVal = idx;\n    }\n    return idx;\n  },\n\n  get _defaultScrollTarget() {\n    return this;\n  },\n\n  get _virtualRowCount() {\n    return Math.ceil(this._virtualCount / this._itemsPerRow);\n  },\n\n  get _estRowsInView() {\n    return Math.ceil(this._viewportHeight / this._rowHeight);\n  },\n\n  get _physicalRows() {\n    return Math.ceil(this._physicalCount / this._itemsPerRow);\n  },\n\n  get _scrollOffset() {\n    return this._scrollerPaddingTop + this.scrollOffset;\n  },\n\n  /**\n   * Recycles the physical items when needed.\n   */\n  _scrollHandler: function () {\n    var scrollTop = Math.max(0, Math.min(this._maxScrollTop, this._scrollTop));\n    var delta = scrollTop - this._scrollPosition;\n    var isScrollingDown = delta >= 0;\n    // Track the current scroll position.\n    this._scrollPosition = scrollTop;\n    // Clear indexes for first and last visible indexes.\n    this._firstVisibleIndexVal = null;\n    this._lastVisibleIndexVal = null;\n    // Random access.\n    if (Math.abs(delta) > this._physicalSize && this._physicalSize > 0) {\n      delta -= this._scrollOffset;\n      var idxAdjustment = Math.round(delta / this._physicalAverage) * this._itemsPerRow;\n      this._virtualStart += idxAdjustment;\n      this._physicalStart += idxAdjustment;\n      // Estimate new physical offset based on the virtual start index.\n      // adjusts the physical start position to stay in sync with the clamped\n      // virtual start index. It's critical not to let this value be\n      // more than the scroll position however, since that would result in\n      // the physical items not covering the viewport, and leading to\n      // _increasePoolIfNeeded to run away creating items to try to fill it.\n      this._physicalTop = Math.min(\n        Math.floor(this._virtualStart / this._itemsPerRow) * this._physicalAverage,\n        this._scrollPosition,\n      );\n      this._update();\n    } else if (this._physicalCount > 0) {\n      var reusables = this._getReusables(isScrollingDown);\n      if (isScrollingDown) {\n        this._physicalTop = reusables.physicalTop;\n        this._virtualStart += reusables.indexes.length;\n        this._physicalStart += reusables.indexes.length;\n      } else {\n        this._virtualStart -= reusables.indexes.length;\n        this._physicalStart -= reusables.indexes.length;\n      }\n      this._update(reusables.indexes, isScrollingDown ? null : reusables.indexes);\n      this._debounce('_increasePoolIfNeeded', this._increasePoolIfNeeded.bind(this, 0), microTask);\n    }\n  },\n\n  /**\n   * Returns an object that contains the indexes of the physical items\n   * that might be reused and the physicalTop.\n   *\n   * @param {boolean} fromTop If the potential reusable items are above the scrolling region.\n   */\n  _getReusables: function (fromTop) {\n    var ith, lastIth, offsetContent, physicalItemHeight;\n    var idxs = [];\n    var protectedOffsetContent = this._hiddenContentSize * this._ratio;\n    var virtualStart = this._virtualStart;\n    var virtualEnd = this._virtualEnd;\n    var physicalCount = this._physicalCount;\n    var top = this._physicalTop + this._scrollOffset;\n    var bottom = this._physicalBottom + this._scrollOffset;\n    // This may be called outside of a scrollHandler, so use last cached position\n    var scrollTop = this._scrollPosition;\n    var scrollBottom = this._scrollBottom;\n\n    if (fromTop) {\n      ith = this._physicalStart;\n      lastIth = this._physicalEnd;\n      offsetContent = scrollTop - top;\n    } else {\n      ith = this._physicalEnd;\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      lastIth = this._physicalStart;\n      offsetContent = bottom - scrollBottom;\n    }\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      physicalItemHeight = this._getPhysicalSizeIncrement(ith);\n      offsetContent -= physicalItemHeight;\n      if (idxs.length >= physicalCount || offsetContent <= protectedOffsetContent) {\n        break;\n      }\n      if (fromTop) {\n        // Check that index is within the valid range.\n        if (virtualEnd + idxs.length + 1 >= this._virtualCount) {\n          break;\n        }\n        // Check that the index is not visible.\n        if (top + physicalItemHeight >= scrollTop - this._scrollOffset) {\n          break;\n        }\n        idxs.push(ith);\n        top += physicalItemHeight;\n        ith = (ith + 1) % physicalCount;\n      } else {\n        // Check that index is within the valid range.\n        if (virtualStart - idxs.length <= 0) {\n          break;\n        }\n        // Check that the index is not visible.\n        if (top + this._physicalSize - physicalItemHeight <= scrollBottom) {\n          break;\n        }\n        idxs.push(ith);\n        top -= physicalItemHeight;\n        ith = ith === 0 ? physicalCount - 1 : ith - 1;\n      }\n    }\n    return { indexes: idxs, physicalTop: top - this._scrollOffset };\n  },\n\n  /**\n   * Update the list of items, starting from the `_virtualStart` item.\n   * @param {!Array<number>=} itemSet\n   * @param {!Array<number>=} movingUp\n   */\n  _update: function (itemSet, movingUp) {\n    if ((itemSet && itemSet.length === 0) || this._physicalCount === 0) {\n      return;\n    }\n    this._manageFocus();\n    this._assignModels(itemSet);\n    this._updateMetrics(itemSet);\n    // Adjust offset after measuring.\n    if (movingUp) {\n      while (movingUp.length) {\n        var idx = movingUp.pop();\n        this._physicalTop -= this._getPhysicalSizeIncrement(idx);\n      }\n    }\n    this._positionItems();\n    this._updateScrollerSize();\n  },\n\n  _isClientFull: function () {\n    return (\n      this._scrollBottom != 0 &&\n      this._physicalBottom - 1 >= this._scrollBottom &&\n      this._physicalTop <= this._scrollPosition\n    );\n  },\n\n  /**\n   * Increases the pool size.\n   */\n  _increasePoolIfNeeded: function (count) {\n    var nextPhysicalCount = this._clamp(\n      this._physicalCount + count,\n      DEFAULT_PHYSICAL_COUNT,\n      this._virtualCount - this._virtualStart,\n    );\n    nextPhysicalCount = this._convertIndexToCompleteRow(nextPhysicalCount);\n    if (this.grid) {\n      var correction = nextPhysicalCount % this._itemsPerRow;\n      if (correction && nextPhysicalCount - correction <= this._physicalCount) {\n        nextPhysicalCount += this._itemsPerRow;\n      }\n      nextPhysicalCount -= correction;\n    }\n    var delta = nextPhysicalCount - this._physicalCount;\n    var nextIncrease = Math.round(this._physicalCount * 0.5);\n\n    if (delta < 0) {\n      return;\n    }\n    if (delta > 0) {\n      var ts = window.performance.now();\n      // Concat arrays in place.\n      [].push.apply(this._physicalItems, this._createPool(delta));\n      // Push 0s into physicalSizes. Can't use Array.fill because IE11 doesn't\n      // support it.\n      for (var i = 0; i < delta; i++) {\n        this._physicalSizes.push(0);\n      }\n      this._physicalCount += delta;\n      // Update the physical start if it needs to preserve the model of the\n      // focused item. In this situation, the focused item is currently rendered\n      // and its model would have changed after increasing the pool if the\n      // physical start remained unchanged.\n      if (\n        this._physicalStart > this._physicalEnd &&\n        this._isIndexRendered(this._focusedVirtualIndex) &&\n        this._getPhysicalIndex(this._focusedVirtualIndex) < this._physicalEnd\n      ) {\n        this._physicalStart += delta;\n      }\n      this._update();\n      this._templateCost = (window.performance.now() - ts) / delta;\n      nextIncrease = Math.round(this._physicalCount * 0.5);\n    }\n    // The upper bounds is not fixed when dealing with a grid that doesn't\n    // fill it's last row with the exact number of items per row.\n    if (this._virtualEnd >= this._virtualCount - 1 || nextIncrease === 0) {\n      // Do nothing.\n    } else if (!this._isClientFull()) {\n      this._debounce('_increasePoolIfNeeded', this._increasePoolIfNeeded.bind(this, nextIncrease), microTask);\n    } else if (this._physicalSize < this._optPhysicalSize) {\n      // Yield and increase the pool during idle time until the physical size is\n      // optimal.\n      this._debounce(\n        '_increasePoolIfNeeded',\n        this._increasePoolIfNeeded.bind(this, this._clamp(Math.round(50 / this._templateCost), 1, nextIncrease)),\n        idlePeriod,\n      );\n    }\n  },\n\n  /**\n   * Renders the a new list.\n   */\n  _render: function () {\n    if (!this.isAttached || !this._isVisible) {\n      return;\n    }\n    if (this._physicalCount !== 0) {\n      var reusables = this._getReusables(true);\n      this._physicalTop = reusables.physicalTop;\n      this._virtualStart += reusables.indexes.length;\n      this._physicalStart += reusables.indexes.length;\n      this._update(reusables.indexes);\n      this._update();\n      this._increasePoolIfNeeded(0);\n    } else if (this._virtualCount > 0) {\n      // Initial render\n      this.updateViewportBoundaries();\n      this._increasePoolIfNeeded(DEFAULT_PHYSICAL_COUNT);\n    }\n  },\n\n  _gridChanged: function (newGrid, oldGrid) {\n    if (typeof oldGrid === 'undefined') {\n      return;\n    }\n    this.notifyResize();\n    flush();\n    newGrid && this._updateGridMetrics();\n  },\n\n  /**\n   * Called when the items have changed. That is, reassignments\n   * to `items`, splices or updates to a single item.\n   */\n  _itemsChanged: function (change) {\n    if (change.path === 'items') {\n      this._virtualStart = 0;\n      this._physicalTop = 0;\n      this._virtualCount = this.items ? this.items.length : 0;\n      this._physicalIndexForKey = {};\n      this._firstVisibleIndexVal = null;\n      this._lastVisibleIndexVal = null;\n      this._physicalCount = this._physicalCount || 0;\n      this._physicalItems = this._physicalItems || [];\n      this._physicalSizes = this._physicalSizes || [];\n      this._physicalStart = 0;\n      if (this._scrollTop > this._scrollOffset) {\n        this._resetScrollPosition(0);\n      }\n      this._removeFocusedItem();\n      this._debounce('_render', this._render, animationFrame);\n    } else if (change.path === 'items.splices') {\n      this._adjustVirtualIndex(change.value.indexSplices);\n      this._virtualCount = this.items ? this.items.length : 0;\n      // Only blur if at least one item is added or removed.\n      var itemAddedOrRemoved = change.value.indexSplices.some(function (splice) {\n        return splice.addedCount > 0 || splice.removed.length > 0;\n      });\n      if (itemAddedOrRemoved) {\n        // Only blur activeElement if it is a descendant of the list (#505,\n        // #507).\n        var activeElement = this._getActiveElement();\n        if (this.contains(activeElement)) {\n          activeElement.blur();\n        }\n      }\n      // Render only if the affected index is rendered.\n      var affectedIndexRendered = change.value.indexSplices.some(function (splice) {\n        return splice.index + splice.addedCount >= this._virtualStart && splice.index <= this._virtualEnd;\n      }, this);\n      if (!this._isClientFull() || affectedIndexRendered) {\n        this._debounce('_render', this._render, animationFrame);\n      }\n    } else if (change.path !== 'items.length') {\n      this._forwardItemPath(change.path, change.value);\n    }\n  },\n\n  /**\n   * Executes a provided function per every physical index in `itemSet`\n   * `itemSet` default value is equivalent to the entire set of physical\n   * indexes.\n   *\n   * @param {!function(number, number)} fn\n   * @param {!Array<number>=} itemSet\n   */\n  _iterateItems: function (fn, itemSet) {\n    var pidx, vidx, rtn, i;\n\n    if (arguments.length === 2 && itemSet) {\n      for (i = 0; i < itemSet.length; i++) {\n        pidx = itemSet[i];\n        vidx = this._computeVidx(pidx);\n        if ((rtn = fn.call(this, pidx, vidx)) != null) {\n          return rtn;\n        }\n      }\n    } else {\n      pidx = this._physicalStart;\n      vidx = this._virtualStart;\n      for (; pidx < this._physicalCount; pidx++, vidx++) {\n        if ((rtn = fn.call(this, pidx, vidx)) != null) {\n          return rtn;\n        }\n      }\n      for (pidx = 0; pidx < this._physicalStart; pidx++, vidx++) {\n        if ((rtn = fn.call(this, pidx, vidx)) != null) {\n          return rtn;\n        }\n      }\n    }\n  },\n\n  /**\n   * Returns the virtual index for a given physical index\n   *\n   * @param {number} pidx Physical index\n   * @return {number}\n   */\n  _computeVidx: function (pidx) {\n    if (pidx >= this._physicalStart) {\n      return this._virtualStart + (pidx - this._physicalStart);\n    }\n    return this._virtualStart + (this._physicalCount - this._physicalStart) + pidx;\n  },\n\n  /**\n   * Updates the height for a given set of items.\n   *\n   * @param {!Array<number>=} itemSet\n   */\n  _updateMetrics: function (itemSet) {\n    // Make sure we distributed all the physical items\n    // so we can measure them.\n    flush();\n\n    var newPhysicalSize = 0;\n    var oldPhysicalSize = 0;\n    var prevAvgCount = this._physicalAverageCount;\n    var prevPhysicalAvg = this._physicalAverage;\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    this._iterateItems((pidx, vidx) => {\n      oldPhysicalSize += this._physicalSizes[pidx];\n      this._physicalSizes[pidx] = this._physicalItems[pidx].offsetHeight;\n      newPhysicalSize += this._physicalSizes[pidx];\n      this._physicalAverageCount += this._physicalSizes[pidx] ? 1 : 0;\n    }, itemSet);\n\n    if (this.grid) {\n      this._updateGridMetrics();\n      this._physicalSize = Math.ceil(this._physicalCount / this._itemsPerRow) * this._rowHeight;\n    } else {\n      oldPhysicalSize =\n        this._itemsPerRow === 1\n          ? oldPhysicalSize\n          : Math.ceil(this._physicalCount / this._itemsPerRow) * this._rowHeight;\n      this._physicalSize = this._physicalSize + newPhysicalSize - oldPhysicalSize;\n      this._itemsPerRow = 1;\n    }\n    // Update the average if it measured something.\n    if (this._physicalAverageCount !== prevAvgCount) {\n      this._physicalAverage = Math.round(\n        (prevPhysicalAvg * prevAvgCount + newPhysicalSize) / this._physicalAverageCount,\n      );\n    }\n  },\n\n  _updateGridMetrics: function () {\n    this._itemWidth = this._physicalCount > 0 ? this._physicalItems[0].getBoundingClientRect().width : 200;\n    this._rowHeight = this._physicalCount > 0 ? this._physicalItems[0].offsetHeight : 200;\n    this._itemsPerRow = this._itemWidth ? Math.floor(this._viewportWidth / this._itemWidth) : this._itemsPerRow;\n  },\n\n  /**\n   * Updates the position of the physical items.\n   */\n  _positionItems: function () {\n    this._adjustScrollPosition();\n\n    var y = this._physicalTop;\n\n    if (this.grid) {\n      var totalItemWidth = this._itemsPerRow * this._itemWidth;\n      var rowOffset = (this._viewportWidth - totalItemWidth) / 2;\n\n      this._iterateItems((pidx, vidx) => {\n        var modulus = vidx % this._itemsPerRow;\n        var x = Math.floor(modulus * this._itemWidth + rowOffset);\n        if (this._isRTL) {\n          x *= -1;\n        }\n        this.translate3d(x + 'px', y + 'px', 0, this._physicalItems[pidx]);\n        if (this._shouldRenderNextRow(vidx)) {\n          y += this._rowHeight;\n        }\n      });\n    } else {\n      const order = [];\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      this._iterateItems((pidx, vidx) => {\n        const item = this._physicalItems[pidx];\n        this.translate3d(0, y + 'px', 0, item);\n        y += this._physicalSizes[pidx];\n        const itemId = item.id;\n        if (itemId) {\n          order.push(itemId);\n        }\n      });\n      if (order.length) {\n        this.setAttribute('aria-owns', order.join(' '));\n      }\n    }\n  },\n\n  _getPhysicalSizeIncrement: function (pidx) {\n    if (!this.grid) {\n      return this._physicalSizes[pidx];\n    }\n    if (this._computeVidx(pidx) % this._itemsPerRow !== this._itemsPerRow - 1) {\n      return 0;\n    }\n    return this._rowHeight;\n  },\n\n  /**\n   * Returns, based on the current index,\n   * whether or not the next index will need\n   * to be rendered on a new row.\n   *\n   * @param {number} vidx Virtual index\n   * @return {boolean}\n   */\n  _shouldRenderNextRow: function (vidx) {\n    return vidx % this._itemsPerRow === this._itemsPerRow - 1;\n  },\n\n  /**\n   * Adjusts the scroll position when it was overestimated.\n   */\n  _adjustScrollPosition: function () {\n    var deltaHeight =\n      this._virtualStart === 0 ? this._physicalTop : Math.min(this._scrollPosition + this._physicalTop, 0);\n    // Note: the delta can be positive or negative.\n    if (deltaHeight !== 0) {\n      this._physicalTop -= deltaHeight;\n      // This may be called outside of a scrollHandler, so use last cached position\n      var scrollTop = this._scrollPosition;\n      // juking scroll position during interial scrolling on iOS is no bueno\n      if (!IOS_TOUCH_SCROLLING && scrollTop > 0) {\n        this._resetScrollPosition(scrollTop - deltaHeight);\n      }\n    }\n  },\n\n  /**\n   * Sets the position of the scroll.\n   */\n  _resetScrollPosition: function (pos) {\n    if (this.scrollTarget && pos >= 0) {\n      this._scrollTop = pos;\n      this._scrollPosition = this._scrollTop;\n    }\n  },\n\n  /**\n   * Sets the scroll height, that's the height of the content,\n   *\n   * @param {boolean=} forceUpdate If true, updates the height no matter what.\n   */\n  _updateScrollerSize: function (forceUpdate) {\n    if (this.grid) {\n      this._estScrollHeight = this._virtualRowCount * this._rowHeight;\n    } else {\n      this._estScrollHeight =\n        this._physicalBottom +\n        Math.max(this._virtualCount - this._physicalCount - this._virtualStart, 0) * this._physicalAverage;\n    }\n    forceUpdate = forceUpdate || this._scrollHeight === 0;\n    forceUpdate = forceUpdate || this._scrollPosition >= this._estScrollHeight - this._physicalSize;\n    forceUpdate = forceUpdate || (this.grid && this.$.items.style.height < this._estScrollHeight);\n    // Amortize height adjustment, so it won't trigger large repaints too often.\n    if (forceUpdate || Math.abs(this._estScrollHeight - this._scrollHeight) >= this._viewportHeight) {\n      this.$.items.style.height = this._estScrollHeight + 'px';\n      this._scrollHeight = this._estScrollHeight;\n    }\n  },\n\n  /**\n   * Scroll to a specific index in the virtual list regardless\n   * of the physical items in the DOM tree.\n   *\n   * @method scrollToIndex\n   * @param {number} idx The index of the item\n   */\n  scrollToIndex: function (idx) {\n    if (typeof idx !== 'number' || idx < 0 || idx > this.items.length - 1) {\n      return;\n    }\n    flush();\n    // Items should have been rendered prior scrolling to an index.\n    if (this._physicalCount === 0) {\n      return;\n    }\n    idx = this._clamp(idx, 0, this._virtualCount - 1);\n    // Update the virtual start only when needed.\n    if (!this._isIndexRendered(idx) || idx >= this._maxVirtualStart) {\n      this._virtualStart = this.grid ? idx - this._itemsPerRow * 2 : idx - 1;\n    }\n    this._manageFocus();\n    this._assignModels();\n    this._updateMetrics();\n    // Estimate new physical offset.\n    this._physicalTop = Math.floor(this._virtualStart / this._itemsPerRow) * this._physicalAverage;\n\n    var currentTopItem = this._physicalStart;\n    var currentVirtualItem = this._virtualStart;\n    var targetOffsetTop = 0;\n    var hiddenContentSize = this._hiddenContentSize;\n    // scroll to the item as much as we can.\n    while (currentVirtualItem < idx && targetOffsetTop <= hiddenContentSize) {\n      targetOffsetTop += this._getPhysicalSizeIncrement(currentTopItem);\n      currentTopItem = (currentTopItem + 1) % this._physicalCount;\n      currentVirtualItem += 1;\n    }\n    this._updateScrollerSize(true);\n    this._positionItems();\n    this._resetScrollPosition(this._physicalTop + this._scrollOffset + targetOffsetTop);\n    this._increasePoolIfNeeded(0);\n    // clear cached visible index.\n    this._firstVisibleIndexVal = null;\n    this._lastVisibleIndexVal = null;\n  },\n\n  /**\n   * Reset the physical average and the average count.\n   */\n  _resetAverage: function () {\n    this._physicalAverage = 0;\n    this._physicalAverageCount = 0;\n  },\n\n  /**\n   * A handler for the `iron-resize` event triggered by `IronResizableBehavior`\n   * when the element is resized.\n   */\n  _resizeHandler: function () {\n    this._debounce(\n      '_render',\n      () => {\n        // clear cached visible index.\n        this._firstVisibleIndexVal = null;\n        this._lastVisibleIndexVal = null;\n        if (this._isVisible) {\n          this.updateViewportBoundaries();\n          // Reinstall the scroll event listener.\n          this.toggleScrollListener(true);\n          this._resetAverage();\n          this._render();\n        } else {\n          // Uninstall the scroll event listener.\n          this.toggleScrollListener(false);\n        }\n      },\n      animationFrame,\n    );\n  },\n\n  /**\n   * Updates the size of a given list item.\n   *\n   * @method updateSizeForItem\n   * @param {Object} item The item instance.\n   */\n  updateSizeForItem: function (item) {\n    return this.updateSizeForIndex(this.items.indexOf(item));\n  },\n\n  /**\n   * Updates the size of the item at the given index in the items array.\n   *\n   * @method updateSizeForIndex\n   * @param {number} index The index of the item in the items array.\n   */\n  updateSizeForIndex: function (index) {\n    if (!this._isIndexRendered(index)) {\n      return null;\n    }\n    this._updateMetrics([this._getPhysicalIndex(index)]);\n    this._positionItems();\n    return null;\n  },\n\n  /**\n   * Converts a random index to the index of the item that completes it's row.\n   * Allows for better order and fill computation when grid == true.\n   */\n  _convertIndexToCompleteRow: function (idx) {\n    // when grid == false _itemPerRow can be unset.\n    this._itemsPerRow = this._itemsPerRow || 1;\n    return this.grid ? Math.ceil(idx / this._itemsPerRow) * this._itemsPerRow : idx;\n  },\n\n  _isIndexRendered: function (idx) {\n    return idx >= this._virtualStart && idx <= this._virtualEnd;\n  },\n\n  _isIndexVisible: function (idx) {\n    return idx >= this.firstVisibleIndex && idx <= this.lastVisibleIndex;\n  },\n\n  _getPhysicalIndex: function (vidx) {\n    return (this._physicalStart + (vidx - this._virtualStart)) % this._physicalCount;\n  },\n\n  _clamp: function (v, min, max) {\n    return Math.min(max, Math.max(min, v));\n  },\n\n  _debounce: function (name, cb, asyncModule) {\n    this._debouncers = this._debouncers || {};\n    this._debouncers[name] = Debouncer.debounce(this._debouncers[name], asyncModule, cb.bind(this));\n    enqueueDebouncer(this._debouncers[name]);\n  },\n};\n","/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nexport const A11yMixin = (superClass) =>\n  class A11yMixin extends superClass {\n    static get observers() {\n      return ['_a11yUpdateGridSize(size, _columnTree, _columnTree.*)'];\n    }\n\n    /** @private */\n    _a11yGetHeaderRowCount(_columnTree) {\n      return _columnTree.filter((level) => level.some((col) => col.headerRenderer || col.path || col.header)).length;\n    }\n\n    /** @private */\n    _a11yGetFooterRowCount(_columnTree) {\n      return _columnTree.filter((level) => level.some((col) => col.headerRenderer)).length;\n    }\n\n    /** @private */\n    _a11yUpdateGridSize(size, _columnTree) {\n      if (size === undefined || _columnTree === undefined) {\n        return;\n      }\n\n      const bodyColumns = _columnTree[_columnTree.length - 1];\n      this.$.table.setAttribute(\n        'aria-rowcount',\n        size + this._a11yGetHeaderRowCount(_columnTree) + this._a11yGetFooterRowCount(_columnTree),\n      );\n      this.$.table.setAttribute('aria-colcount', (bodyColumns && bodyColumns.length) || 0);\n\n      this._a11yUpdateHeaderRows();\n      this._a11yUpdateFooterRows();\n    }\n\n    /** @protected */\n    _a11yUpdateHeaderRows() {\n      Array.from(this.$.header.children).forEach((headerRow, index) =>\n        headerRow.setAttribute('aria-rowindex', index + 1),\n      );\n    }\n\n    /** @protected */\n    _a11yUpdateFooterRows() {\n      Array.from(this.$.footer.children).forEach((footerRow, index) =>\n        footerRow.setAttribute('aria-rowindex', this._a11yGetHeaderRowCount(this._columnTree) + this.size + index + 1),\n      );\n    }\n\n    /**\n     * @param {!HTMLElement} row\n     * @param {number} index\n     * @protected\n     */\n    _a11yUpdateRowRowindex(row, index) {\n      row.setAttribute('aria-rowindex', index + this._a11yGetHeaderRowCount(this._columnTree) + 1);\n    }\n\n    /**\n     * @param {!HTMLElement} row\n     * @param {boolean} selected\n     * @protected\n     */\n    _a11yUpdateRowSelected(row, selected) {\n      // Jaws reads selection only for rows, NVDA only for cells\n      row.setAttribute('aria-selected', Boolean(selected));\n      Array.from(row.children).forEach((cell) => cell.setAttribute('aria-selected', Boolean(selected)));\n    }\n\n    /**\n     * @param {!HTMLElement} row\n     * @protected\n     */\n    _a11yUpdateRowExpanded(row) {\n      if (this.__isRowExpandable(row)) {\n        row.setAttribute('aria-expanded', 'false');\n      } else if (this.__isRowCollapsible(row)) {\n        row.setAttribute('aria-expanded', 'true');\n      } else {\n        row.removeAttribute('aria-expanded');\n      }\n    }\n\n    /**\n     * @param {!HTMLElement} row\n     * @param {number} level\n     * @protected\n     */\n    _a11yUpdateRowLevel(row, level) {\n      // Set level for the expandable rows itself, and all the nested rows.\n      if (level > 0 || this.__isRowCollapsible(row) || this.__isRowExpandable(row)) {\n        row.setAttribute('aria-level', level + 1);\n      } else {\n        row.removeAttribute('aria-level');\n      }\n    }\n\n    /**\n     * @param {!HTMLElement} row\n     * @param {!HTMLElement} detailsCell\n     * @protected\n     */\n    _a11ySetRowDetailsCell(row, detailsCell) {\n      Array.from(row.children).forEach((cell) => {\n        if (cell !== detailsCell) {\n          cell.setAttribute('aria-controls', detailsCell.id);\n        }\n      });\n    }\n\n    /**\n     * @param {!HTMLElement} row\n     * @param {number} colspan\n     * @protected\n     */\n    _a11yUpdateCellColspan(cell, colspan) {\n      cell.setAttribute('aria-colspan', Number(colspan));\n    }\n\n    /** @protected */\n    _a11yUpdateSorters() {\n      Array.from(this.querySelectorAll('vaadin-grid-sorter')).forEach((sorter) => {\n        let cellContent = sorter.parentNode;\n        while (cellContent && cellContent.localName !== 'vaadin-grid-cell-content') {\n          cellContent = cellContent.parentNode;\n        }\n        if (cellContent && cellContent.assignedSlot) {\n          const cell = cellContent.assignedSlot.parentNode;\n          cell.setAttribute(\n            'aria-sort',\n            {\n              asc: 'ascending',\n              desc: 'descending',\n            }[String(sorter.direction)] || 'none',\n          );\n        }\n      });\n    }\n  };\n","/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nexport const ActiveItemMixin = (superClass) =>\n  class ActiveItemMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * The item user has last interacted with. Turns to `null` after user deactivates\n         * the item by re-interacting with the currently active item.\n         * @type {GridItem}\n         */\n        activeItem: {\n          type: Object,\n          notify: true,\n          value: null,\n        },\n      };\n    }\n\n    ready() {\n      super.ready();\n\n      this.$.scroller.addEventListener('click', this._onClick.bind(this));\n      this.addEventListener('cell-activate', this._activateItem.bind(this));\n      this.addEventListener('row-activate', this._activateItem.bind(this));\n    }\n\n    /** @private */\n    _activateItem(e) {\n      const model = e.detail.model;\n      const clickedItem = model ? model.item : null;\n\n      if (clickedItem) {\n        this.activeItem = !this._itemsEqual(this.activeItem, clickedItem) ? clickedItem : null;\n      }\n    }\n\n    /**\n     * We need to listen to click instead of tap because on mobile safari, the\n     * document.activeElement has not been updated (focus has not been shifted)\n     * yet at the point when tap event is being executed.\n     * @param {!MouseEvent} e\n     * @protected\n     */\n    _onClick(e) {\n      if (e.defaultPrevented) {\n        // Something has handled this click already, e. g., <vaadin-grid-sorter>\n        return;\n      }\n\n      const path = e.composedPath();\n      const cell = path[path.indexOf(this.$.table) - 3];\n      if (!cell || cell.getAttribute('part').indexOf('details-cell') > -1) {\n        return;\n      }\n      const cellContent = cell._content;\n\n      const activeElement = this.getRootNode().activeElement;\n      const cellContentHasFocus = cellContent.contains(activeElement);\n      if (!cellContentHasFocus && !this._isFocusable(e.target)) {\n        this.dispatchEvent(\n          new CustomEvent('cell-activate', {\n            detail: {\n              model: this.__getRowModel(cell.parentElement),\n            },\n          }),\n        );\n      }\n    }\n\n    /**\n     * @param {!Element} target\n     * @return {boolean}\n     * @protected\n     */\n    _isFocusable(target) {\n      return isFocusable(target);\n    }\n\n    /**\n     * Fired when the `activeItem` property changes.\n     *\n     * @event active-item-changed\n     */\n\n    /**\n     * Fired when the cell is activated with click or keyboard.\n     *\n     * @event cell-activate\n     */\n  };\n\n/**\n * @param {!Element} target\n * @return {boolean}\n * @protected\n */\nexport const isFocusable = (target) => {\n  if (!target.parentNode) {\n    return false;\n  }\n  const focusables = Array.from(\n    target.parentNode.querySelectorAll(\n      '[tabindex], button, input, select, textarea, object, iframe, label, a[href], area[href]',\n    ),\n  ).filter((element) => element.getAttribute('part') !== 'cell body-cell');\n\n  const isFocusableElement = focusables.indexOf(target) !== -1;\n  return !target.disabled && isFocusableElement;\n};\n","/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { createArrayDataProvider } from './array-data-provider.js';\n\n/**\n * @polymerMixin\n */\nexport const ArrayDataProviderMixin = (superClass) =>\n  class ArrayDataProviderMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * An array containing the items which will be passed to renderer functions.\n         *\n         * @type {Array<!GridItem> | undefined}\n         */\n        items: Array,\n      };\n    }\n\n    static get observers() {\n      return ['__dataProviderOrItemsChanged(dataProvider, items, isAttached, items.*, _filters, _sorters)'];\n    }\n\n    /** @private */\n    __setArrayDataProvider(items) {\n      const arrayDataProvider = createArrayDataProvider(this.items, {});\n      arrayDataProvider.__items = items;\n      this.setProperties({\n        _arrayDataProvider: arrayDataProvider,\n        size: items.length,\n        dataProvider: arrayDataProvider,\n      });\n    }\n\n    /** @private */\n    __dataProviderOrItemsChanged(dataProvider, items, isAttached) {\n      if (!isAttached) {\n        return;\n      }\n\n      if (this._arrayDataProvider) {\n        // Has an items array data provider beforehand\n\n        if (dataProvider !== this._arrayDataProvider) {\n          // A custom data provider was set externally\n          this.setProperties({\n            _arrayDataProvider: undefined,\n            items: undefined,\n          });\n        } else if (!items) {\n          // The items array was unset\n          this.setProperties({\n            _arrayDataProvider: undefined,\n            dataProvider: undefined,\n            size: 0,\n          });\n          this.clearCache();\n        } else if (this._arrayDataProvider.__items === items) {\n          // The items array was modified\n          this.clearCache();\n          this.size = this._effectiveSize;\n        } else {\n          // The items array was replaced\n          this.__setArrayDataProvider(items);\n        }\n      } else if (items) {\n        // There was no array data provider before items was set\n        this.__setArrayDataProvider(items);\n      }\n    }\n  };\n","/**\n * Returns a sub-property of an object\n *\n * @param {string} path dot-separated path to the sub property\n * @param {*} object\n * @returns {*}\n */\nfunction get(path, object) {\n  return path.split('.').reduce((obj, property) => obj[property], object);\n}\n\n/**\n * Check array of filters/sorters for paths validity, console.warn invalid items\n * @param {!Array<!GridFilterDefinition | !GridSorterDefinition>} arrayToCheck The array of filters/sorters to check\n * @param {string} action The name of action to include in warning (filtering, sorting)\n * @param {!Array<!GridItem>} items\n */\nfunction checkPaths(arrayToCheck, action, items) {\n  if (items.length === 0) {\n    return false;\n  }\n\n  let result = true;\n\n  for (const i in arrayToCheck) {\n    const path = arrayToCheck[i].path;\n\n    // skip simple paths\n    if (!path || path.indexOf('.') === -1) {\n      continue;\n    }\n\n    const parentProperty = path.replace(/\\.[^.]*$/, ''); // a.b.c -> a.b\n    if (get(parentProperty, items[0]) === undefined) {\n      console.warn(`Path \"${path}\" used for ${action} does not exist in all of the items, ${action} is disabled.`);\n      result = false;\n    }\n  }\n\n  return result;\n}\n\n/**\n * Sorts the given array of items based on the sorting rules and returns the result.\n *\n * @param {Array<any>} items\n * @param {Array<GridSorterDefinition>} items\n * @return {Array<any>}\n */\nfunction multiSort(items, sortOrders) {\n  return items.sort((a, b) => {\n    return sortOrders\n      .map((sortOrder) => {\n        if (sortOrder.direction === 'asc') {\n          return compare(get(sortOrder.path, a), get(sortOrder.path, b));\n        } else if (sortOrder.direction === 'desc') {\n          return compare(get(sortOrder.path, b), get(sortOrder.path, a));\n        }\n        return 0;\n      })\n      .reduce((p, n) => {\n        return p !== 0 ? p : n;\n      }, 0);\n  });\n}\n\n/**\n * @param {unknown} value\n * @return {string}\n */\nfunction normalizeEmptyValue(value) {\n  if ([undefined, null].indexOf(value) >= 0) {\n    return '';\n  } else if (isNaN(value)) {\n    return value.toString();\n  }\n  return value;\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @return {number}\n */\nfunction compare(a, b) {\n  a = normalizeEmptyValue(a);\n  b = normalizeEmptyValue(b);\n\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n  return 0;\n}\n\n/**\n * @param {!Array<!GridItem>} items\n * @return {!Array<!GridItem>}\n */\nfunction filter(items, filters) {\n  return items.filter((item) => {\n    return filters.every((filter) => {\n      const value = normalizeEmptyValue(get(filter.path, item));\n      const filterValueLowercase = normalizeEmptyValue(filter.value).toString().toLowerCase();\n      return value.toString().toLowerCase().includes(filterValueLowercase);\n    });\n  });\n}\n\n/**\n * WARNING: This API is still intended for internal purposes only and\n * may change any time.\n *\n * Creates a new grid compatible data provider that serves the items\n * from the given array as data when requested by the grid.\n *\n * @param {Array<any>} items\n * @return {GridDataProvider<any>}\n */\nexport const createArrayDataProvider = (allItems) => {\n  return (params, callback) => {\n    let items = allItems ? [...allItems] : [];\n\n    if (params.filters && checkPaths(params.filters, 'filtering', items)) {\n      items = filter(items, params.filters);\n    }\n\n    if (\n      Array.isArray(params.sortOrders) &&\n      params.sortOrders.length &&\n      checkPaths(params.sortOrders, 'sorting', items)\n    ) {\n      items = multiSort(items, params.sortOrders);\n    }\n\n    const count = Math.min(items.length, params.pageSize);\n    const start = params.page * count;\n    const end = start + count;\n    const slice = items.slice(start, end);\n    callback(slice, items.length);\n  };\n};\n","/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { addListener } from '@vaadin/component-base/src/gestures.js';\nimport { updateColumnOrders } from './vaadin-grid-helpers.js';\n\n/**\n * @polymerMixin\n */\nexport const ColumnReorderingMixin = (superClass) =>\n  class ColumnReorderingMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * Set to true to allow column reordering.\n         * @attr {boolean} column-reordering-allowed\n         * @type {boolean}\n         */\n        columnReorderingAllowed: {\n          type: Boolean,\n          value: false,\n        },\n\n        /** @private */\n        _orderBaseScope: {\n          type: Number,\n          value: 10000000,\n        },\n      };\n    }\n\n    static get observers() {\n      return ['_updateOrders(_columnTree, _columnTree.*)'];\n    }\n\n    ready() {\n      super.ready();\n      addListener(this, 'track', this._onTrackEvent);\n      this._reorderGhost = this.shadowRoot.querySelector('[part=\"reorder-ghost\"]');\n\n      this.addEventListener('touchstart', this._onTouchStart.bind(this));\n      this.addEventListener('touchmove', this._onTouchMove.bind(this));\n      this.addEventListener('touchend', this._onTouchEnd.bind(this));\n      this.addEventListener('contextmenu', this._onContextMenu.bind(this));\n    }\n\n    /** @private */\n    _onContextMenu(e) {\n      if (this.hasAttribute('reordering')) {\n        e.preventDefault();\n      }\n    }\n\n    /** @private */\n    _onTouchStart(e) {\n      // Touch event, delay activation by 100ms\n      this._startTouchReorderTimeout = setTimeout(() => {\n        this._onTrackStart({\n          detail: {\n            x: e.touches[0].clientX,\n            y: e.touches[0].clientY,\n          },\n        });\n      }, 100);\n    }\n\n    /** @private */\n    _onTouchMove(e) {\n      if (this._draggedColumn) {\n        e.preventDefault();\n      }\n      clearTimeout(this._startTouchReorderTimeout);\n    }\n\n    /** @private */\n    _onTouchEnd() {\n      clearTimeout(this._startTouchReorderTimeout);\n      this._onTrackEnd();\n    }\n\n    /** @private */\n    _onTrackEvent(e) {\n      if (e.detail.state === 'start') {\n        const path = e.composedPath();\n        const headerCell = path[path.indexOf(this.$.header) - 2];\n        if (!headerCell || !headerCell._content) {\n          // Not a header column\n          return;\n        }\n\n        if (headerCell._content.contains(this.getRootNode().activeElement)) {\n          // Something was focused inside the cell\n          return;\n        }\n\n        if (this.$.scroller.hasAttribute('column-resizing')) {\n          // Resizing is in progress\n          return;\n        }\n\n        if (!this._touchDevice) {\n          // Not a touch device\n          this._onTrackStart(e);\n        }\n      } else if (e.detail.state === 'track') {\n        this._onTrack(e);\n      } else if (e.detail.state === 'end') {\n        this._onTrackEnd(e);\n      }\n    }\n\n    /** @private */\n    _onTrackStart(e) {\n      if (!this.columnReorderingAllowed) {\n        return;\n      }\n\n      // Cancel reordering if there are draggable nodes on the event path\n      const path = e.composedPath && e.composedPath();\n      if (path && path.filter((node) => node.hasAttribute && node.hasAttribute('draggable'))[0]) {\n        return;\n      }\n\n      const headerCell = this._cellFromPoint(e.detail.x, e.detail.y);\n      if (!headerCell || headerCell.getAttribute('part').indexOf('header-cell') === -1) {\n        return;\n      }\n\n      this.toggleAttribute('reordering', true);\n      this._draggedColumn = headerCell._column;\n      while (this._draggedColumn.parentElement.childElementCount === 1) {\n        // This is the only column in the group, drag the whole group instead\n        this._draggedColumn = this._draggedColumn.parentElement;\n      }\n      this._setSiblingsReorderStatus(this._draggedColumn, 'allowed');\n      this._draggedColumn._reorderStatus = 'dragging';\n\n      this._updateGhost(headerCell);\n      this._reorderGhost.style.visibility = 'visible';\n      this._updateGhostPosition(e.detail.x, this._touchDevice ? e.detail.y - 50 : e.detail.y);\n      this._autoScroller();\n    }\n\n    /** @private */\n    _onTrack(e) {\n      if (!this._draggedColumn) {\n        // Reordering didn’t start. Skip this event.\n        return;\n      }\n\n      const targetCell = this._cellFromPoint(e.detail.x, e.detail.y);\n      if (!targetCell) {\n        return;\n      }\n\n      const targetColumn = this._getTargetColumn(targetCell, this._draggedColumn);\n      if (\n        this._isSwapAllowed(this._draggedColumn, targetColumn) &&\n        this._isSwappableByPosition(targetColumn, e.detail.x)\n      ) {\n        this._swapColumnOrders(this._draggedColumn, targetColumn);\n      }\n\n      this._updateGhostPosition(e.detail.x, this._touchDevice ? e.detail.y - 50 : e.detail.y);\n      this._lastDragClientX = e.detail.x;\n    }\n\n    /** @private */\n    _onTrackEnd() {\n      if (!this._draggedColumn) {\n        // Reordering didn’t start. Skip this event.\n        return;\n      }\n\n      this.toggleAttribute('reordering', false);\n      this._draggedColumn._reorderStatus = '';\n      this._setSiblingsReorderStatus(this._draggedColumn, '');\n      this._draggedColumn = null;\n      this._lastDragClientX = null;\n      this._reorderGhost.style.visibility = 'hidden';\n\n      this.dispatchEvent(\n        new CustomEvent('column-reorder', {\n          detail: {\n            columns: this._getColumnsInOrder(),\n          },\n        }),\n      );\n    }\n\n    /**\n     * @return {!Array<!GridColumn>}\n     * @protected\n     */\n    _getColumnsInOrder() {\n      return this._columnTree\n        .slice(0)\n        .pop()\n        .filter((c) => !c.hidden)\n        .sort((b, a) => b._order - a._order);\n    }\n\n    /**\n     * @param {number} x\n     * @param {number} y\n     * @return {HTMLElement | undefined}\n     * @protected\n     */\n    _cellFromPoint(x, y) {\n      x = x || 0;\n      y = y || 0;\n      if (!this._draggedColumn) {\n        this.$.scroller.toggleAttribute('no-content-pointer-events', true);\n      }\n      const cell = this.shadowRoot.elementFromPoint(x, y);\n      this.$.scroller.toggleAttribute('no-content-pointer-events', false);\n\n      // Make sure the element is actually a cell\n      if (cell && cell._column) {\n        return cell;\n      }\n    }\n\n    /**\n     * @param {number} eventClientX\n     * @param {number} eventClientY\n     * @protected\n     */\n    _updateGhostPosition(eventClientX, eventClientY) {\n      const ghostRect = this._reorderGhost.getBoundingClientRect();\n      // // This is where we want to position the ghost\n      const targetLeft = eventClientX - ghostRect.width / 2;\n      const targetTop = eventClientY - ghostRect.height / 2;\n      // Current position\n      const _left = parseInt(this._reorderGhost._left || 0);\n      const _top = parseInt(this._reorderGhost._top || 0);\n      // Reposition the ghost\n      this._reorderGhost._left = _left - (ghostRect.left - targetLeft);\n      this._reorderGhost._top = _top - (ghostRect.top - targetTop);\n      this._reorderGhost.style.transform = `translate(${this._reorderGhost._left}px, ${this._reorderGhost._top}px)`;\n    }\n\n    /**\n     * @param {!HTMLElement} cell\n     * @return {!HTMLElement}\n     * @protected\n     */\n    _updateGhost(cell) {\n      const ghost = this._reorderGhost;\n      ghost.textContent = cell._content.innerText;\n      const style = window.getComputedStyle(cell);\n      [\n        'boxSizing',\n        'display',\n        'width',\n        'height',\n        'background',\n        'alignItems',\n        'padding',\n        'border',\n        'flex-direction',\n        'overflow',\n      ].forEach((propertyName) => (ghost.style[propertyName] = style[propertyName]));\n      return ghost;\n    }\n\n    /** @private */\n    _updateOrders(columnTree, splices) {\n      if (columnTree === undefined || splices === undefined) {\n        return;\n      }\n\n      // Reset all column orders\n      columnTree[0].forEach((column) => (column._order = 0));\n      // Set order numbers to top-level columns\n      updateColumnOrders(columnTree[0], this._orderBaseScope, 0);\n    }\n\n    /**\n     * @param {!GridColumn} column\n     * @param {string} status\n     * @protected\n     */\n    _setSiblingsReorderStatus(column, status) {\n      Array.from(column.parentNode.children)\n        .filter((child) => /column/.test(child.localName) && this._isSwapAllowed(child, column))\n        .forEach((sibling) => (sibling._reorderStatus = status));\n    }\n\n    /** @protected */\n    _autoScroller() {\n      if (this._lastDragClientX) {\n        const rightDiff = this._lastDragClientX - this.getBoundingClientRect().right + 50;\n        const leftDiff = this.getBoundingClientRect().left - this._lastDragClientX + 50;\n\n        if (rightDiff > 0) {\n          this.$.table.scrollLeft += rightDiff / 10;\n        } else if (leftDiff > 0) {\n          this.$.table.scrollLeft -= leftDiff / 10;\n        }\n      }\n\n      if (this._draggedColumn) {\n        setTimeout(() => this._autoScroller(), 10);\n      }\n    }\n\n    /**\n     * @param {GridColumn | undefined} column1\n     * @param {GridColumn | undefined} column2\n     * @return {boolean | undefined}\n     * @protected\n     */\n    _isSwapAllowed(column1, column2) {\n      if (column1 && column2) {\n        const differentColumns = column1 !== column2;\n        const sameParent = column1.parentElement === column2.parentElement;\n        const sameFrozen = column1.frozen === column2.frozen;\n        return differentColumns && sameParent && sameFrozen;\n      }\n    }\n\n    /**\n     * @param {!GridColumn} targetColumn\n     * @param {number} clientX\n     * @return {boolean}\n     * @protected\n     */\n    _isSwappableByPosition(targetColumn, clientX) {\n      const targetCell = Array.from(this.$.header.querySelectorAll('tr:not([hidden]) [part~=\"cell\"]')).filter((cell) =>\n        targetColumn.contains(cell._column),\n      )[0];\n      const sourceCellRect = this.$.header\n        .querySelector('tr:not([hidden]) [reorder-status=dragging]')\n        .getBoundingClientRect();\n      const targetRect = targetCell.getBoundingClientRect();\n      if (targetRect.left > sourceCellRect.left) {\n        return clientX > targetRect.right - sourceCellRect.width;\n      }\n      return clientX < targetRect.left + sourceCellRect.width;\n    }\n\n    /**\n     * @param {!GridColumn} column1\n     * @param {!GridColumn} column2\n     * @protected\n     */\n    _swapColumnOrders(column1, column2) {\n      const _order = column1._order;\n      column1._order = column2._order;\n      column2._order = _order;\n      this._updateLastFrozen();\n      this._updateFirstAndLastColumn();\n    }\n\n    /**\n     * @param {HTMLElement | undefined} targetCell\n     * @param {GridColumn} draggedColumn\n     * @return {GridColumn | undefined}\n     * @protected\n     */\n    _getTargetColumn(targetCell, draggedColumn) {\n      if (targetCell && draggedColumn) {\n        let candidate = targetCell._column;\n        while (candidate.parentElement !== draggedColumn.parentElement && candidate !== this) {\n          candidate = candidate.parentElement;\n        }\n        if (candidate.parentElement === draggedColumn.parentElement) {\n          return candidate;\n        }\n        return targetCell._column;\n      }\n    }\n\n    /**\n     * Fired when the columns in the grid are reordered.\n     *\n     * @event column-reorder\n     * @param {Object} detail\n     * @param {Object} detail.columns the columns in the new order\n     */\n  };\n","/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @param {Array<Object>} columns array of columns to be modified\n * @param {number} scope multiplier added to base order for each column\n * @param {number} baseOrder base number used for order\n */\nexport function updateColumnOrders(columns, scope, baseOrder) {\n  let c = 1;\n  columns.forEach((column) => {\n    // avoid multiples of 10 because they introduce and extra zero and\n    // causes the underlying calculations for child order goes wrong\n    if (c % 10 === 0) {\n      c += 1;\n    }\n    column._order = baseOrder + c * scope;\n    c += 1;\n  });\n}\n","/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { addListener } from '@vaadin/component-base/src/gestures.js';\n\n/**\n * @polymerMixin\n */\nexport const ColumnResizingMixin = (superClass) =>\n  class ColumnResizingMixin extends superClass {\n    ready() {\n      super.ready();\n      const scroller = this.$.scroller;\n      addListener(scroller, 'track', this._onHeaderTrack.bind(this));\n\n      // Disallow scrolling while resizing\n      scroller.addEventListener('touchmove', (e) => scroller.hasAttribute('column-resizing') && e.preventDefault());\n\n      // Disable contextmenu on any resize separator.\n      scroller.addEventListener(\n        'contextmenu',\n        (e) => e.target.getAttribute('part') == 'resize-handle' && e.preventDefault(),\n      );\n\n      // Disable native cell focus when resizing\n      scroller.addEventListener(\n        'mousedown',\n        (e) => e.target.getAttribute('part') === 'resize-handle' && e.preventDefault(),\n      );\n    }\n\n    /** @private */\n    _onHeaderTrack(e) {\n      const handle = e.target;\n      if (handle.getAttribute('part') === 'resize-handle') {\n        const cell = handle.parentElement;\n        let column = cell._column;\n\n        this.$.scroller.toggleAttribute('column-resizing', true);\n\n        // Get the target column to resize\n        while (column.localName === 'vaadin-grid-column-group') {\n          column = Array.prototype.slice\n            .call(column._childColumns, 0)\n            .sort(function (a, b) {\n              return a._order - b._order;\n            })\n            .filter(function (column) {\n              return !column.hidden;\n            })\n            .pop();\n        }\n\n        const columnRowCells = Array.from(this.$.header.querySelectorAll('[part~=\"row\"]:last-child [part~=\"cell\"]'));\n        const targetCell = columnRowCells.filter((cell) => cell._column === column)[0];\n        // Resize the target column\n        if (targetCell.offsetWidth) {\n          const style = getComputedStyle(targetCell._content);\n          const minWidth =\n            10 +\n            parseInt(style.paddingLeft) +\n            parseInt(style.paddingRight) +\n            parseInt(style.borderLeftWidth) +\n            parseInt(style.borderRightWidth) +\n            parseInt(style.marginLeft) +\n            parseInt(style.marginRight);\n          const maxWidth =\n            targetCell.offsetWidth +\n            (this.__isRTL\n              ? targetCell.getBoundingClientRect().left - e.detail.x\n              : e.detail.x - targetCell.getBoundingClientRect().right);\n          column.width = Math.max(minWidth, maxWidth) + 'px';\n          column.flexGrow = 0;\n        }\n        // Fix width and flex-grow for all preceding columns\n        columnRowCells\n          .sort(function (a, b) {\n            return a._column._order - b._column._order;\n          })\n          .forEach(function (cell, index, array) {\n            if (index < array.indexOf(targetCell)) {\n              cell._column.width = cell.offsetWidth + 'px';\n              cell._column.flexGrow = 0;\n            }\n          });\n\n        if (e.detail.state === 'end') {\n          this.$.scroller.toggleAttribute('column-resizing', false);\n          this.dispatchEvent(\n            new CustomEvent('column-resize', {\n              detail: { resizedColumn: column },\n            }),\n          );\n        }\n\n        // Notify resize\n        this._resizeHandler();\n      }\n    }\n\n    /**\n     * Fired when a column in the grid is resized by the user.\n     *\n     * @event column-resize\n     * @param {Object} detail\n     * @param {Object} detail.resizedColumn the column that was resized\n     */\n  };\n","/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { timeOut } from '@vaadin/component-base/src/async.js';\nimport { Debouncer } from '@vaadin/component-base/src/debounce.js';\n\n/**\n * @private\n */\nexport const ItemCache = class ItemCache {\n  /**\n   * @param {!HTMLElement} grid\n   * @param {!ItemCache | undefined} parentCache\n   * @param {!GridItem | undefined} parentItem\n   */\n  constructor(grid, parentCache, parentItem) {\n    /** @type {!HTMLElement} */\n    this.grid = grid;\n    /** @type {!ItemCache | undefined} */\n    this.parentCache = parentCache;\n    /** @type {!GridItem | undefined} */\n    this.parentItem = parentItem;\n    /** @type {object} */\n    this.itemCaches = {};\n    /** @type {object} */\n    this.items = {};\n    /** @type {number} */\n    this.effectiveSize = 0;\n    /** @type {number} */\n    this.size = 0;\n    /** @type {object} */\n    this.pendingRequests = {};\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isLoading() {\n    return Boolean(\n      Object.keys(this.pendingRequests).length ||\n        Object.keys(this.itemCaches).filter((index) => {\n          return this.itemCaches[index].isLoading();\n        })[0],\n    );\n  }\n\n  /**\n   * @param {number} index\n   * @return {!GridItem | undefined}\n   */\n  getItemForIndex(index) {\n    const { cache, scaledIndex } = this.getCacheAndIndex(index);\n    return cache.items[scaledIndex];\n  }\n\n  updateSize() {\n    this.effectiveSize =\n      !this.parentItem || this.grid._isExpanded(this.parentItem)\n        ? this.size +\n          Object.keys(this.itemCaches).reduce((prev, curr) => {\n            const subCache = this.itemCaches[curr];\n            subCache.updateSize();\n            return prev + subCache.effectiveSize;\n          }, 0)\n        : 0;\n  }\n\n  /**\n   * @param {number} scaledIndex\n   */\n  ensureSubCacheForScaledIndex(scaledIndex) {\n    if (!this.itemCaches[scaledIndex]) {\n      const subCache = new ItemCache(this.grid, this, this.items[scaledIndex]);\n      this.itemCaches[scaledIndex] = subCache;\n      this.grid._loadPage(0, subCache);\n    }\n  }\n\n  /**\n   * @param {number} index\n   * @return {{cache: !ItemCache, scaledIndex: number}}\n   */\n  getCacheAndIndex(index) {\n    let thisLevelIndex = index;\n    const keys = Object.keys(this.itemCaches);\n    for (let i = 0; i < keys.length; i++) {\n      const expandedIndex = Number(keys[i]);\n      const subCache = this.itemCaches[expandedIndex];\n      if (thisLevelIndex <= expandedIndex) {\n        return { cache: this, scaledIndex: thisLevelIndex };\n      } else if (thisLevelIndex <= expandedIndex + subCache.effectiveSize) {\n        return subCache.getCacheAndIndex(thisLevelIndex - expandedIndex - 1);\n      }\n      thisLevelIndex -= subCache.effectiveSize;\n    }\n    return { cache: this, scaledIndex: thisLevelIndex };\n  }\n};\n\n/**\n * @polymerMixin\n */\nexport const DataProviderMixin = (superClass) =>\n  class DataProviderMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * The number of root-level items in the grid.\n         * @attr {number} size\n         * @type {number}\n         */\n        size: {\n          type: Number,\n          notify: true,\n        },\n\n        /**\n         * Number of items fetched at a time from the dataprovider.\n         * @attr {number} page-size\n         * @type {number}\n         */\n        pageSize: {\n          type: Number,\n          value: 50,\n          observer: '_pageSizeChanged',\n        },\n\n        /**\n         * Function that provides items lazily. Receives arguments `params`, `callback`\n         *\n         * `params.page` Requested page index\n         *\n         * `params.pageSize` Current page size\n         *\n         * `params.filters` Currently applied filters\n         *\n         * `params.sortOrders` Currently applied sorting orders\n         *\n         * `params.parentItem` When tree is used, and sublevel items\n         * are requested, reference to parent item of the requested sublevel.\n         * Otherwise `undefined`.\n         *\n         * `callback(items, size)` Callback function with arguments:\n         *   - `items` Current page of items\n         *   - `size` Total number of items. When tree sublevel items\n         *     are requested, total number of items in the requested sublevel.\n         *     Optional when tree is not used, required for tree.\n         *\n         * @type {GridDataProvider | null | undefined}\n         */\n        dataProvider: {\n          type: Object,\n          notify: true,\n          observer: '_dataProviderChanged',\n        },\n\n        /**\n         * `true` while data is being requested from the data provider.\n         */\n        loading: {\n          type: Boolean,\n          notify: true,\n          readOnly: true,\n          reflectToAttribute: true,\n        },\n\n        /**\n         * @type {!ItemCache}\n         * @protected\n         */\n        _cache: {\n          type: Object,\n          value: function () {\n            const cache = new ItemCache(this);\n            return cache;\n          },\n        },\n\n        /**\n         * @protected\n         */\n        _hasData: {\n          type: Boolean,\n          value: false,\n        },\n\n        /**\n         * Path to an item sub-property that indicates whether the item has child items.\n         * @attr {string} item-has-children-path\n         */\n        itemHasChildrenPath: {\n          type: String,\n          value: 'children',\n        },\n\n        /**\n         * Path to an item sub-property that identifies the item.\n         * @attr {string} item-id-path\n         */\n        itemIdPath: {\n          type: String,\n          value: null,\n        },\n\n        /**\n         * An array that contains the expanded items.\n         * @type {!Array<!GridItem>}\n         */\n        expandedItems: {\n          type: Object,\n          notify: true,\n          value: () => [],\n        },\n\n        /**\n         * @private\n         */\n        __expandedKeys: {\n          type: Object,\n          computed: '__computeExpandedKeys(itemIdPath, expandedItems.*)',\n        },\n      };\n    }\n\n    static get observers() {\n      return ['_sizeChanged(size)', '_expandedItemsChanged(expandedItems.*)'];\n    }\n\n    /** @private */\n    _sizeChanged(size) {\n      const delta = size - this._cache.size;\n      this._cache.size += delta;\n      this._cache.effectiveSize += delta;\n      this._effectiveSize = this._cache.effectiveSize;\n    }\n\n    /**\n     * @param {number} index\n     * @param {HTMLElement} el\n     * @protected\n     */\n    _getItem(index, el) {\n      if (index >= this._effectiveSize) {\n        return;\n      }\n\n      el.index = index;\n      const { cache, scaledIndex } = this._cache.getCacheAndIndex(index);\n      const item = cache.items[scaledIndex];\n      if (item) {\n        el.toggleAttribute('loading', false);\n        this._updateItem(el, item);\n        if (this._isExpanded(item)) {\n          cache.ensureSubCacheForScaledIndex(scaledIndex);\n        }\n      } else {\n        el.toggleAttribute('loading', true);\n        this._loadPage(this._getPageForIndex(scaledIndex), cache);\n      }\n    }\n\n    /**\n     * Returns a value that identifies the item. Uses `itemIdPath` if available.\n     * Can be customized by overriding.\n     * @param {!GridItem} item\n     * @return {!GridItem | !unknown}\n     */\n    getItemId(item) {\n      return this.itemIdPath ? this.get(this.itemIdPath, item) : item;\n    }\n\n    /**\n     * @param {!GridItem} item\n     * @return {boolean}\n     * @protected\n     */\n    _isExpanded(item) {\n      return this.__expandedKeys.has(this.getItemId(item));\n    }\n\n    /** @private */\n    _expandedItemsChanged() {\n      this._cache.updateSize();\n      this._effectiveSize = this._cache.effectiveSize;\n      this.__updateVisibleRows();\n    }\n\n    /** @private */\n    __computeExpandedKeys(itemIdPath, expandedItems) {\n      const expanded = expandedItems.base || [];\n      const expandedKeys = new Set();\n      expanded.forEach((item) => {\n        expandedKeys.add(this.getItemId(item));\n      });\n\n      return expandedKeys;\n    }\n\n    /**\n     * Expands the given item tree.\n     * @param {!GridItem} item\n     */\n    expandItem(item) {\n      if (!this._isExpanded(item)) {\n        this.expandedItems = [...this.expandedItems, item];\n      }\n    }\n\n    /**\n     * Collapses the given item tree.\n     * @param {!GridItem} item\n     */\n    collapseItem(item) {\n      if (this._isExpanded(item)) {\n        this.expandedItems = this.expandedItems.filter((i) => !this._itemsEqual(i, item));\n      }\n    }\n\n    /**\n     * @param {number} index\n     * @return {number}\n     * @protected\n     */\n    _getIndexLevel(index) {\n      let { cache } = this._cache.getCacheAndIndex(index);\n      let level = 0;\n      while (cache.parentCache) {\n        cache = cache.parentCache;\n        level += 1;\n      }\n      return level;\n    }\n\n    /**\n     * @param {number} page\n     * @param {ItemCache} cache\n     * @protected\n     */\n    _loadPage(page, cache) {\n      // make sure same page isn't requested multiple times.\n      if (!cache.pendingRequests[page] && this.dataProvider) {\n        this._setLoading(true);\n        cache.pendingRequests[page] = true;\n        const params = {\n          page,\n          pageSize: this.pageSize,\n          sortOrders: this._mapSorters(),\n          filters: this._mapFilters(),\n          parentItem: cache.parentItem,\n        };\n\n        this.dataProvider(params, (items, size) => {\n          if (size !== undefined) {\n            cache.size = size;\n          } else if (params.parentItem) {\n            cache.size = items.length;\n          }\n\n          const currentItems = Array.from(this.$.items.children).map((row) => row._item);\n\n          // Populate the cache with new items\n          items.forEach((item, itemsIndex) => {\n            const itemIndex = page * this.pageSize + itemsIndex;\n            cache.items[itemIndex] = item;\n            if (this._isExpanded(item) && currentItems.indexOf(item) > -1) {\n              // Force synchronous data request for expanded item sub-cache\n              cache.ensureSubCacheForScaledIndex(itemIndex);\n            }\n          });\n\n          this._hasData = true;\n\n          delete cache.pendingRequests[page];\n\n          this._debouncerApplyCachedData = Debouncer.debounce(this._debouncerApplyCachedData, timeOut.after(0), () => {\n            this._setLoading(false);\n            this._cache.updateSize();\n            this._effectiveSize = this._cache.effectiveSize;\n\n            Array.from(this.$.items.children)\n              .filter((row) => !row.hidden)\n              .forEach((row) => {\n                const cachedItem = this._cache.getItemForIndex(row.index);\n                if (cachedItem) {\n                  this._getItem(row.index, row);\n                }\n              });\n\n            this.__scrollToPendingIndex();\n          });\n\n          if (!this._cache.isLoading()) {\n            this._debouncerApplyCachedData.flush();\n          }\n\n          this.__itemsReceived();\n        });\n      }\n    }\n\n    /**\n     * @param {number} index\n     * @return {number}\n     * @private\n     */\n    _getPageForIndex(index) {\n      return Math.floor(index / this.pageSize);\n    }\n\n    /**\n     * Clears the cached pages and reloads data from dataprovider when needed.\n     */\n    clearCache() {\n      this._cache = new ItemCache(this);\n      this._cache.size = this.size || 0;\n      this._cache.updateSize();\n      this._hasData = false;\n      this.__updateVisibleRows();\n\n      if (!this._effectiveSize) {\n        this._loadPage(0, this._cache);\n      }\n    }\n\n    /** @private */\n    _pageSizeChanged(pageSize, oldPageSize) {\n      if (oldPageSize !== undefined && pageSize !== oldPageSize) {\n        this.clearCache();\n      }\n    }\n\n    /** @protected */\n    _checkSize() {\n      if (this.size === undefined && this._effectiveSize === 0) {\n        console.warn(\n          'The <vaadin-grid> needs the total number of items' +\n            ' in order to display rows. Set the total number of items' +\n            ' to the `size` property, or provide the total number of items' +\n            ' in the second argument of the `dataProvider`’s `callback` call.',\n        );\n      }\n    }\n\n    /** @private */\n    _dataProviderChanged(dataProvider, oldDataProvider) {\n      if (oldDataProvider !== undefined) {\n        this.clearCache();\n      }\n\n      this._ensureFirstPageLoaded();\n\n      this._debouncerCheckSize = Debouncer.debounce(\n        this._debouncerCheckSize,\n        timeOut.after(2000),\n        this._checkSize.bind(this),\n      );\n    }\n\n    /** @protected */\n    _ensureFirstPageLoaded() {\n      if (!this._hasData) {\n        // load data before adding rows to make sure they have content when\n        // rendered for the first time.\n        this._loadPage(0, this._cache);\n      }\n    }\n\n    /**\n     * @param {!GridItem} item1\n     * @param {!GridItem} item2\n     * @return {boolean}\n     * @protected\n     */\n    _itemsEqual(item1, item2) {\n      return this.getItemId(item1) === this.getItemId(item2);\n    }\n\n    /**\n     * @param {!GridItem} item\n     * @param {!Array<!GridItem>} array\n     * @return {number}\n     * @protected\n     */\n    _getItemIndexInArray(item, array) {\n      let result = -1;\n      array.forEach((i, idx) => {\n        if (this._itemsEqual(i, item)) {\n          result = idx;\n        }\n      });\n      return result;\n    }\n\n    scrollToIndex(index) {\n      super.scrollToIndex(index);\n      if (!isNaN(index) && (this._cache.isLoading() || !this.clientHeight)) {\n        this.__pendingScrollToIndex = index;\n      }\n    }\n\n    __scrollToPendingIndex() {\n      if (this.__pendingScrollToIndex && this.$.items.children.length) {\n        const index = this.__pendingScrollToIndex;\n        delete this.__pendingScrollToIndex;\n        this.scrollToIndex(index);\n      }\n    }\n\n    /**\n     * Fired when the `expandedItems` property changes.\n     *\n     * @event expanded-items-changed\n     */\n\n    /**\n     * Fired when the `loading` property changes.\n     *\n     * @event loading-changed\n     */\n  };\n","/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nconst DropMode = {\n  BETWEEN: 'between',\n  ON_TOP: 'on-top',\n  ON_TOP_OR_BETWEEN: 'on-top-or-between',\n  ON_GRID: 'on-grid',\n};\n\nconst DropLocation = {\n  ON_TOP: 'on-top',\n  ABOVE: 'above',\n  BELOW: 'below',\n  EMPTY: 'empty',\n};\n\n/**\n * @polymerMixin\n */\nexport const DragAndDropMixin = (superClass) =>\n  class DragAndDropMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * Defines the locations within the Grid row where an element can be dropped.\n         *\n         * Possible values are:\n         * - `between`: The drop event can happen between Grid rows.\n         * - `on-top`: The drop event can happen on top of Grid rows.\n         * - `on-top-or-between`: The drop event can happen either on top of or between Grid rows.\n         * - `on-grid`: The drop event will not happen on any specific row, it will show the drop target outline around the whole grid.\n         * @attr {between|on-top|on-top-or-between|on-grid} drop-mode\n         * @type {GridDropMode | null | undefined}\n         */\n        dropMode: String,\n\n        /**\n         * Marks the grid's rows to be available for dragging.\n         * @attr {boolean} rows-draggable\n         */\n        rowsDraggable: Boolean,\n\n        /**\n         * A function that filters dragging of specific grid rows. The return value should be false\n         * if dragging of the row should be disabled.\n         *\n         * Receives one argument:\n         * - `model` The object with the properties related with\n         *   the rendered item, contains:\n         *   - `model.index` The index of the item.\n         *   - `model.item` The item.\n         *   - `model.expanded` Sublevel toggle state.\n         *   - `model.level` Level of the tree represented with a horizontal offset of the toggle button.\n         *   - `model.selected` Selected state.\n         *\n         * @type {GridDragAndDropFilter | null | undefined}\n         */\n        dragFilter: Function,\n\n        /**\n         * A function that filters dropping on specific grid rows. The return value should be false\n         * if dropping on the row should be disabled.\n         *\n         * Receives one argument:\n         * - `model` The object with the properties related with\n         *   the rendered item, contains:\n         *   - `model.index` The index of the item.\n         *   - `model.item` The item.\n         *   - `model.expanded` Sublevel toggle state.\n         *   - `model.level` Level of the tree represented with a horizontal offset of the toggle button.\n         *   - `model.selected` Selected state.\n         *\n         * @type {GridDragAndDropFilter | null | undefined}\n         */\n        dropFilter: Function,\n\n        /** @private */\n        __dndAutoScrollThreshold: {\n          value: 50,\n        },\n      };\n    }\n\n    static get observers() {\n      return ['_dragDropAccessChanged(rowsDraggable, dropMode, dragFilter, dropFilter, loading)'];\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n      this.$.table.addEventListener('dragstart', this._onDragStart.bind(this));\n      this.$.table.addEventListener('dragend', this._onDragEnd.bind(this));\n      this.$.table.addEventListener('dragover', this._onDragOver.bind(this));\n      this.$.table.addEventListener('dragleave', this._onDragLeave.bind(this));\n      this.$.table.addEventListener('drop', this._onDrop.bind(this));\n      this.$.table.addEventListener('dragenter', (e) => {\n        if (this.dropMode) {\n          e.preventDefault();\n          e.stopPropagation();\n        }\n      });\n    }\n\n    /** @private */\n    _onDragStart(e) {\n      if (this.rowsDraggable) {\n        let row = e.target;\n        if (row.localName === 'vaadin-grid-cell-content') {\n          // The draggable node is the cell content element on browsers that support native shadow\n          row = row.assignedSlot.parentNode.parentNode;\n        }\n        if (row.parentNode !== this.$.items) {\n          return;\n        }\n\n        e.stopPropagation();\n        this.toggleAttribute('dragging-rows', true);\n\n        if (this._safari) {\n          // Safari doesn't position drag images from transformed\n          // elements properly so we need to switch to use top temporarily\n          const transform = row.style.transform;\n          row.style.top = /translateY\\((.*)\\)/.exec(transform)[1];\n          row.style.transform = 'none';\n          requestAnimationFrame(() => {\n            row.style.top = '';\n            row.style.transform = transform;\n          });\n        }\n\n        const rowRect = row.getBoundingClientRect();\n\n        if (this._ios) {\n          e.dataTransfer.setDragImage(row);\n        } else {\n          e.dataTransfer.setDragImage(row, e.clientX - rowRect.left, e.clientY - rowRect.top);\n        }\n\n        let rows = [row];\n        if (this._isSelected(row._item)) {\n          rows = this.__getViewportRows()\n            .filter((row) => this._isSelected(row._item))\n            .filter((row) => !this.dragFilter || this.dragFilter(this.__getRowModel(row)));\n        }\n\n        // Set the default transfer data\n        e.dataTransfer.setData('text', this.__formatDefaultTransferData(rows));\n\n        row.setAttribute('dragstart', rows.length > 1 ? rows.length : '');\n        this.style.setProperty('--_grid-drag-start-x', `${e.clientX - rowRect.left + 20}px`);\n        this.style.setProperty('--_grid-drag-start-y', `${e.clientY - rowRect.top + 10}px`);\n\n        requestAnimationFrame(() => {\n          row.removeAttribute('dragstart');\n          this.updateStyles({ '--_grid-drag-start-x': '', '--_grid-drag-start-y': '' });\n        });\n\n        const event = new CustomEvent('grid-dragstart', {\n          detail: {\n            draggedItems: rows.map((row) => row._item),\n            setDragData: (type, data) => e.dataTransfer.setData(type, data),\n            setDraggedItemsCount: (count) => row.setAttribute('dragstart', count),\n          },\n        });\n        event.originalEvent = e;\n        this.dispatchEvent(event);\n      }\n    }\n\n    /** @private */\n    _onDragEnd(e) {\n      this.toggleAttribute('dragging-rows', false);\n      e.stopPropagation();\n      const event = new CustomEvent('grid-dragend');\n      event.originalEvent = e;\n      this.dispatchEvent(event);\n    }\n\n    /** @private */\n    _onDragLeave(e) {\n      e.stopPropagation();\n      this._clearDragStyles();\n    }\n\n    /** @private */\n    _onDragOver(e) {\n      if (this.dropMode) {\n        this._dropLocation = undefined;\n        this._dragOverItem = undefined;\n\n        if (this.__dndAutoScroll(e.clientY)) {\n          this._clearDragStyles();\n          return;\n        }\n\n        let row = e.composedPath().filter((node) => node.localName === 'tr')[0];\n\n        if (!this._effectiveSize || this.dropMode === DropMode.ON_GRID) {\n          // The grid is empty or \"on-grid\" drop mode was used, always default to \"empty\"\n          this._dropLocation = DropLocation.EMPTY;\n        } else if (!row || row.parentNode !== this.$.items) {\n          // The dragover didn't occur on a body row but the grid has items\n          if (row) {\n            // The dragover occurred over a header/footer row\n            return;\n          } else if (this.dropMode === DropMode.BETWEEN || this.dropMode === DropMode.ON_TOP_OR_BETWEEN) {\n            // The drop mode allows setting the last row as the drag over item\n            row = Array.from(this.$.items.children)\n              .filter((row) => !row.hidden)\n              .pop();\n            this._dropLocation = DropLocation.BELOW;\n          } else {\n            // Drop mode on-top used but the dragover didn't occur over one of the existing rows\n            return;\n          }\n        } else {\n          // The dragover occurred on a body row, determine the drop location from coordinates\n          const rowRect = row.getBoundingClientRect();\n\n          this._dropLocation = DropLocation.ON_TOP;\n\n          if (this.dropMode === DropMode.BETWEEN) {\n            const dropAbove = e.clientY - rowRect.top < rowRect.bottom - e.clientY;\n            this._dropLocation = dropAbove ? DropLocation.ABOVE : DropLocation.BELOW;\n          } else if (this.dropMode === DropMode.ON_TOP_OR_BETWEEN) {\n            if (e.clientY - rowRect.top < rowRect.height / 3) {\n              this._dropLocation = DropLocation.ABOVE;\n            } else if (e.clientY - rowRect.top > (rowRect.height / 3) * 2) {\n              this._dropLocation = DropLocation.BELOW;\n            }\n          }\n        }\n\n        if (row && row.hasAttribute('drop-disabled')) {\n          this._dropLocation = undefined;\n          return;\n        }\n\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (this._dropLocation === DropLocation.EMPTY) {\n          this.toggleAttribute('dragover', true);\n        } else if (row) {\n          this._dragOverItem = row._item;\n          if (row.getAttribute('dragover') !== this._dropLocation) {\n            row.setAttribute('dragover', this._dropLocation);\n          }\n        } else {\n          this._clearDragStyles();\n        }\n      }\n    }\n\n    /** @private */\n    __dndAutoScroll(clientY) {\n      if (this.__dndAutoScrolling) {\n        return true;\n      }\n\n      const headerBottom = this.$.header.getBoundingClientRect().bottom;\n      const footerTop = this.$.footer.getBoundingClientRect().top;\n      const topDiff = headerBottom - clientY + this.__dndAutoScrollThreshold;\n      const bottomDiff = clientY - footerTop + this.__dndAutoScrollThreshold;\n      let scrollTopDelta = 0;\n\n      if (bottomDiff > 0) {\n        scrollTopDelta = bottomDiff * 2;\n      } else if (topDiff > 0) {\n        scrollTopDelta = -topDiff * 2;\n      }\n\n      if (scrollTopDelta) {\n        const scrollTop = this.$.table.scrollTop;\n        this.$.table.scrollTop += scrollTopDelta;\n        const scrollTopChanged = scrollTop !== this.$.table.scrollTop;\n        if (scrollTopChanged) {\n          this.__dndAutoScrolling = true;\n          // Disallow more auto-scrolls within 20ms\n          setTimeout(() => (this.__dndAutoScrolling = false), 20);\n          return true;\n        }\n      }\n    }\n\n    /** @private */\n    __getViewportRows() {\n      const headerBottom = this.$.header.getBoundingClientRect().bottom;\n      const footerTop = this.$.footer.getBoundingClientRect().top;\n      return Array.from(this.$.items.children).filter((row) => {\n        const rowRect = row.getBoundingClientRect();\n        return rowRect.bottom > headerBottom && rowRect.top < footerTop;\n      });\n    }\n\n    /** @protected */\n    _clearDragStyles() {\n      this.removeAttribute('dragover');\n      Array.from(this.$.items.children).forEach((row) => row.removeAttribute('dragover'));\n    }\n\n    /** @private */\n    _onDrop(e) {\n      if (this.dropMode) {\n        e.stopPropagation();\n        e.preventDefault();\n\n        const dragData =\n          e.dataTransfer.types &&\n          Array.from(e.dataTransfer.types).map((type) => {\n            return {\n              type,\n              data: e.dataTransfer.getData(type),\n            };\n          });\n\n        this._clearDragStyles();\n\n        const event = new CustomEvent('grid-drop', {\n          bubbles: e.bubbles,\n          cancelable: e.cancelable,\n          detail: {\n            dropTargetItem: this._dragOverItem,\n            dropLocation: this._dropLocation,\n            dragData,\n          },\n        });\n        event.originalEvent = e;\n        this.dispatchEvent(event);\n      }\n    }\n\n    /** @private */\n    __formatDefaultTransferData(rows) {\n      return rows\n        .map((row) => {\n          return Array.from(row.children)\n            .filter((cell) => !cell.hidden && cell.getAttribute('part').indexOf('details-cell') === -1)\n            .sort((a, b) => {\n              return a._column._order > b._column._order ? 1 : -1;\n            })\n            .map((cell) => cell._content.textContent.trim())\n            .filter((content) => content)\n            .join('\\t');\n        })\n        .join('\\n');\n    }\n\n    /** @private */\n    _dragDropAccessChanged() {\n      this.filterDragAndDrop();\n    }\n\n    /**\n     * Runs the `dragFilter` and `dropFilter` hooks for the visible cells.\n     * If the filter depends on varying conditions, you may need to\n     * call this function manually in order to update the draggability when\n     * the conditions change.\n     */\n    filterDragAndDrop() {\n      Array.from(this.$.items.children)\n        .filter((row) => !row.hidden)\n        .forEach((row) => {\n          this._filterDragAndDrop(row, this.__getRowModel(row));\n        });\n    }\n\n    /**\n     * @param {!HTMLElement} row\n     * @param {!GridItemModel} model\n     * @protected\n     */\n    _filterDragAndDrop(row, model) {\n      const loading = this.loading || row.hasAttribute('loading');\n      const dragDisabled = !this.rowsDraggable || loading || (this.dragFilter && !this.dragFilter(model));\n      const dropDisabled = !this.dropMode || loading || (this.dropFilter && !this.dropFilter(model));\n\n      const draggableElements = Array.from(row.children).map((cell) => cell._content);\n\n      draggableElements.forEach((e) => {\n        if (dragDisabled) {\n          e.removeAttribute('draggable');\n        } else {\n          e.setAttribute('draggable', true);\n        }\n      });\n\n      row.toggleAttribute('drag-disabled', !!dragDisabled);\n      row.toggleAttribute('drop-disabled', !!dropDisabled);\n    }\n\n    /**\n     * Fired when starting to drag grid rows.\n     *\n     * @event grid-dragstart\n     * @param {Object} originalEvent The native dragstart event\n     * @param {Object} detail\n     * @param {Object} detail.draggedItems the items in the visible viewport that are dragged\n     * @param {Function} detail.setDraggedItemsCount Overrides the default number shown in the drag image on multi row drag.\n     * Parameter is of type number.\n     * @param {Function} detail.setDragData Sets dataTransfer data for the drag operation.\n     * Note that \"text\" is the only data type supported by all the browsers the grid currently supports (including IE11).\n     * The function takes two parameters:\n     * - type:string The type of the data\n     * - data:string The data\n     */\n\n    /**\n     * Fired when the dragging of the rows ends.\n     *\n     * @event grid-dragend\n     * @param {Object} originalEvent The native dragend event\n     */\n\n    /**\n     * Fired when a drop occurs on top of the grid.\n     *\n     * @event grid-drop\n     * @param {Object} originalEvent The native drop event\n     * @param {Object} detail\n     * @param {Object} detail.dropTargetItem The item of the grid row on which the drop occurred.\n     * @param {string} detail.dropLocation The position at which the drop event took place relative to a row.\n     * Depending on the dropMode value, the drop location can be one of the following\n     * - `on-top`: when the drop occurred on top of the row\n     * - `above`: when the drop occurred above the row\n     * - `below`: when the drop occurred below the row\n     * - `empty`: when the drop occurred over the grid, not relative to any specific row\n     * @param {string} detail.dragData An array of items with the payload as a string representation as the\n     * `data` property and the type of the data as `type` property.\n     */\n  };\n","/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { timeOut } from '@vaadin/component-base/src/async.js';\nimport { Debouncer } from '@vaadin/component-base/src/debounce.js';\n\n/**\n * @polymerMixin\n */\nexport const DynamicColumnsMixin = (superClass) =>\n  class DynamicColumnsMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * @protected\n         */\n        _columnTree: Object,\n      };\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n      this._addNodeObserver();\n    }\n\n    /** @private */\n    _hasColumnGroups(columns) {\n      for (let i = 0; i < columns.length; i++) {\n        if (columns[i].localName === 'vaadin-grid-column-group') {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    /**\n     * @param {!GridColumnGroup} el\n     * @return {!Array<!GridColumn>}\n     * @protected\n     */\n    _getChildColumns(el) {\n      return FlattenedNodesObserver.getFlattenedNodes(el).filter(this._isColumnElement);\n    }\n\n    /** @private */\n    _flattenColumnGroups(columns) {\n      return columns\n        .map((col) => {\n          if (col.localName === 'vaadin-grid-column-group') {\n            return this._getChildColumns(col);\n          }\n          return [col];\n        })\n        .reduce((prev, curr) => {\n          return prev.concat(curr);\n        }, []);\n    }\n\n    /** @private */\n    _getColumnTree() {\n      const rootColumns = FlattenedNodesObserver.getFlattenedNodes(this).filter(this._isColumnElement);\n      const columnTree = [rootColumns];\n\n      let c = rootColumns;\n      while (this._hasColumnGroups(c)) {\n        c = this._flattenColumnGroups(c);\n        columnTree.push(c);\n      }\n\n      return columnTree;\n    }\n\n    /** @protected */\n    _updateColumnTree() {\n      const columnTree = this._getColumnTree();\n      if (!this._arrayEquals(columnTree, this._columnTree)) {\n        this._columnTree = columnTree;\n      }\n    }\n\n    /** @private */\n    _addNodeObserver() {\n      this._observer = new FlattenedNodesObserver(this, (info) => {\n        const hasColumnElements = (nodeCollection) => nodeCollection.filter(this._isColumnElement).length > 0;\n        if (hasColumnElements(info.addedNodes) || hasColumnElements(info.removedNodes)) {\n          const allRemovedCells = info.removedNodes.flatMap((c) => c._allCells);\n          const filterNotConnected = (element) =>\n            allRemovedCells.filter((cell) => cell._content.contains(element)).length;\n\n          this.__removeSorters(this._sorters.filter(filterNotConnected));\n          this.__removeFilters(this._filters.filter(filterNotConnected));\n          this._updateColumnTree();\n        }\n\n        this._debouncerCheckImports = Debouncer.debounce(\n          this._debouncerCheckImports,\n          timeOut.after(2000),\n          this._checkImports.bind(this),\n        );\n\n        this._ensureFirstPageLoaded();\n      });\n    }\n\n    /** @private */\n    _arrayEquals(arr1, arr2) {\n      if (!arr1 || !arr2 || arr1.length != arr2.length) {\n        return false;\n      }\n\n      for (let i = 0, l = arr1.length; i < l; i++) {\n        // Check if we have nested arrays\n        if (arr1[i] instanceof Array && arr2[i] instanceof Array) {\n          // recurse into the nested arrays\n          if (!this._arrayEquals(arr1[i], arr2[i])) {\n            return false;\n          }\n        } else if (arr1[i] != arr2[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /** @protected */\n    _checkImports() {\n      [\n        'vaadin-grid-column-group',\n        'vaadin-grid-filter',\n        'vaadin-grid-filter-column',\n        'vaadin-grid-tree-toggle',\n        'vaadin-grid-selection-column',\n        'vaadin-grid-sort-column',\n        'vaadin-grid-sorter',\n      ].forEach((elementName) => {\n        const element = this.querySelector(elementName);\n        if (element && !(element instanceof PolymerElement)) {\n          console.warn(`Make sure you have imported the required module for <${elementName}> element.`);\n        }\n      });\n    }\n\n    /** @protected */\n    _updateFirstAndLastColumn() {\n      Array.from(this.shadowRoot.querySelectorAll('tr')).forEach((row) => this._updateFirstAndLastColumnForRow(row));\n    }\n\n    /**\n     * @param {!HTMLElement} row\n     * @protected\n     */\n    _updateFirstAndLastColumnForRow(row) {\n      Array.from(row.querySelectorAll('[part~=\"cell\"]:not([part~=\"details-cell\"])'))\n        .sort((a, b) => {\n          return a._column._order - b._column._order;\n        })\n        .forEach((cell, cellIndex, children) => {\n          cell.toggleAttribute('first-column', cellIndex === 0);\n          cell.toggleAttribute('last-column', cellIndex === children.length - 1);\n        });\n    }\n\n    /**\n     * @param {!Node} node\n     * @return {boolean}\n     * @protected\n     */\n    _isColumnElement(node) {\n      return node.nodeType === Node.ELEMENT_NODE && /\\bcolumn\\b/.test(node.localName);\n    }\n  };\n","/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nexport const EventContextMixin = (superClass) =>\n  class EventContextMixin extends superClass {\n    /**\n     * Returns an object with context information about the event target:\n     * - `item`: the data object corresponding to the targeted row (not specified when targeting header or footer)\n     * - `column`: the column element corresponding to the targeted cell (not specified when targeting row details)\n     * - `section`: whether the event targeted the body, header, footer or details of the grid\n     *\n     * These additional properties are included when `item` is specified:\n     * - `index`: the index of the item\n     * - `selected`: the selected state of the item\n     * - `detailsOpened`: whether the row details are open for the item\n     * - `expanded`: the expanded state of the tree toggle\n     * - `level`: the tree hierarchy level\n     *\n     * The returned object is populated only when a grid cell, header, footer or row details is found in `event.composedPath()`.\n     * This means mostly mouse and keyboard events. If such a grid part is not found in the path, an empty object is returned.\n     * This may be the case eg. if the event is fired on the `<vaadin-grid>` element and not any deeper in the DOM, or if\n     * the event targets the empty part of the grid body.\n     *\n     * @param {!Event} event\n     * @return {GridEventContext}\n     */\n    getEventContext(event) {\n      const context = {};\n\n      const path = event.composedPath();\n      const cell = path[path.indexOf(this.$.table) - 3];\n\n      if (!cell) {\n        return context;\n      }\n\n      context.section = ['body', 'header', 'footer', 'details'].filter(\n        (section) => cell.getAttribute('part').indexOf(section) > -1,\n      )[0];\n\n      if (cell._column) {\n        context.column = cell._column;\n      }\n\n      if (context.section === 'body' || context.section === 'details') {\n        Object.assign(context, this.__getRowModel(cell.parentElement));\n      }\n\n      return context;\n    }\n  };\n","/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nexport const FilterMixin = (superClass) =>\n  class FilterMixin extends superClass {\n    static get properties() {\n      return {\n        /** @private */\n        _filters: {\n          type: Array,\n          value: function () {\n            return [];\n          },\n        },\n      };\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n      this.addEventListener('filter-changed', this._filterChanged.bind(this));\n    }\n\n    /** @private */\n    _filterChanged(e) {\n      e.stopPropagation();\n\n      this.__addFilter(e.target);\n      this.__applyFilters();\n    }\n\n    /** @private */\n    __removeFilters(filtersToRemove) {\n      if (filtersToRemove.length == 0) {\n        return;\n      }\n\n      this._filters = this._filters.filter((filter) => filtersToRemove.indexOf(filter) < 0);\n      this.__applyFilters();\n    }\n\n    /** @private */\n    __addFilter(filter) {\n      const filterIndex = this._filters.indexOf(filter);\n\n      if (filterIndex === -1) {\n        this._filters.push(filter);\n      }\n    }\n\n    /** @private */\n    __applyFilters() {\n      if (this.dataProvider && this.isAttached) {\n        this.clearCache();\n      }\n    }\n\n    /**\n     * @return {!Array<!GridFilterDefinition>}\n     * @protected\n     */\n    _mapFilters() {\n      return this._filters.map((filter) => {\n        return {\n          path: filter.path,\n          value: filter.value,\n        };\n      });\n    }\n  };\n","/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nexport const KeyboardNavigationMixin = (superClass) =>\n  class KeyboardNavigationMixin extends superClass {\n    static get properties() {\n      return {\n        /** @private */\n        _headerFocusable: {\n          type: Object,\n          observer: '_focusableChanged',\n        },\n\n        /**\n         * @type {!HTMLElement | undefined}\n         * @protected\n         */\n        _itemsFocusable: {\n          type: Object,\n          observer: '_focusableChanged',\n        },\n\n        /** @private */\n        _footerFocusable: {\n          type: Object,\n          observer: '_focusableChanged',\n        },\n\n        /** @private */\n        _navigatingIsHidden: Boolean,\n\n        /**\n         * @type {number}\n         * @protected\n         */\n        _focusedItemIndex: {\n          type: Number,\n          value: 0,\n        },\n\n        /** @private */\n        _focusedColumnOrder: Number,\n\n        /**\n         * Indicates whether the grid is currently in interaction mode.\n         * In interaction mode the user is currently interacting with a control,\n         * such as an input or a select, within a cell.\n         * In interaction mode keyboard navigation between cells is disabled.\n         * Interaction mode also prevents the focus target cell of that section of\n         * the grid from receiving focus, allowing the user to switch focus to\n         * controls in adjacent cells, rather than focussing the outer cell\n         * itself.\n         * @type {boolean}\n         * @private\n         */\n        interacting: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n          readOnly: true,\n          observer: '_interactingChanged',\n        },\n      };\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      if (this._ios || this._android) {\n        // Disable keyboard navigation on mobile devices\n        return;\n      }\n\n      this.addEventListener('keydown', this._onKeyDown);\n      this.addEventListener('keyup', this._onKeyUp);\n\n      this.addEventListener('focusin', this._onFocusIn);\n      this.addEventListener('focusout', this._onFocusOut);\n\n      // When focus goes from cell to another cell, focusin/focusout events do\n      // not escape the grid’s shadowRoot, thus listening inside the shadowRoot.\n      this.$.table.addEventListener('focusin', this._onContentFocusIn.bind(this));\n\n      this.addEventListener('mousedown', () => {\n        this.toggleAttribute('navigating', false);\n        this._isMousedown = true;\n\n        // Reset stored order when moving focus with mouse.\n        this._focusedColumnOrder = undefined;\n      });\n      this.addEventListener('mouseup', () => (this._isMousedown = false));\n    }\n\n    /** @private */\n    get __rowFocusMode() {\n      return (\n        this.__isRow(this._itemsFocusable) || this.__isRow(this._headerFocusable) || this.__isRow(this._footerFocusable)\n      );\n    }\n\n    set __rowFocusMode(value) {\n      ['_itemsFocusable', '_footerFocusable', '_headerFocusable'].forEach((focusable) => {\n        if (value && this.__isCell(this[focusable])) {\n          this[focusable] = this[focusable].parentElement;\n        } else if (!value && this.__isRow(this[focusable])) {\n          this[focusable] = this[focusable].firstElementChild;\n        }\n      });\n    }\n\n    /** @private */\n    _focusableChanged(focusable, oldFocusable) {\n      if (oldFocusable) {\n        oldFocusable.setAttribute('tabindex', '-1');\n      }\n      if (focusable) {\n        this._updateGridSectionFocusTarget(focusable);\n      }\n    }\n\n    /** @private */\n    _interactingChanged() {\n      // Update focus targets when entering / exiting interaction mode\n      this._updateGridSectionFocusTarget(this._headerFocusable);\n      this._updateGridSectionFocusTarget(this._itemsFocusable);\n      this._updateGridSectionFocusTarget(this._footerFocusable);\n    }\n\n    /**\n     * Since the focused cell/row state is stored as an element reference, the reference may get\n     * out of sync when the virtual indexes for elements update due to effective size change.\n     * This function updates the reference to the correct element after a possible index change.\n     * @private\n     */\n    __updateItemsFocusable() {\n      if (!this._itemsFocusable) {\n        return;\n      }\n\n      const wasFocused = this.shadowRoot.activeElement === this._itemsFocusable;\n\n      this._getVisibleRows().forEach((row) => {\n        if (row.index === this._focusedItemIndex) {\n          if (this.__rowFocusMode) {\n            // Row focus mode\n            this._itemsFocusable = row;\n          } else if (this._itemsFocusable.parentElement) {\n            // Cell focus mode\n            const cellIndex = [...this._itemsFocusable.parentElement.children].indexOf(this._itemsFocusable);\n            this._itemsFocusable = row.children[cellIndex];\n          }\n        }\n      });\n\n      if (wasFocused) {\n        this._itemsFocusable.focus();\n      }\n    }\n\n    /**\n     * @param {!KeyboardEvent} e\n     * @protected\n     */\n    _onKeyDown(e) {\n      const key = e.key;\n\n      let keyGroup;\n      switch (key) {\n        case 'ArrowUp':\n        case 'ArrowDown':\n        case 'ArrowLeft':\n        case 'ArrowRight':\n        case 'PageUp':\n        case 'PageDown':\n        case 'Home':\n        case 'End':\n          keyGroup = 'Navigation';\n          break;\n        case 'Enter':\n        case 'Escape':\n        case 'F2':\n          keyGroup = 'Interaction';\n          break;\n        case 'Tab':\n          keyGroup = 'Tab';\n          break;\n        case ' ':\n          keyGroup = 'Space';\n          break;\n        default:\n          break;\n      }\n\n      this._detectInteracting(e);\n      if (this.interacting && keyGroup !== 'Interaction') {\n        // When in the interacting mode, only the “Interaction” keys are handled.\n        keyGroup = undefined;\n      }\n\n      if (keyGroup) {\n        this[`_on${keyGroup}KeyDown`](e, key);\n      }\n    }\n\n    /** @private */\n    _ensureScrolledToIndex(index) {\n      const targetRowInDom = [...this.$.items.children].find((child) => child.index === index);\n      if (!targetRowInDom) {\n        this.scrollToIndex(index);\n      } else {\n        this.__scrollIntoViewport(index);\n      }\n    }\n\n    /** @private */\n    __isRowExpandable(row) {\n      if (this.itemHasChildrenPath) {\n        const item = row._item;\n        return item && this.get(this.itemHasChildrenPath, item) && !this._isExpanded(item);\n      }\n    }\n\n    /** @private */\n    __isRowCollapsible(row) {\n      return this._isExpanded(row._item);\n    }\n\n    /** @private */\n    __isDetailsCell(element) {\n      return element.matches('[part~=\"details-cell\"]');\n    }\n\n    /** @private */\n    __isCell(element) {\n      return element instanceof HTMLTableCellElement;\n    }\n\n    /** @private */\n    __isRow(element) {\n      return element instanceof HTMLTableRowElement;\n    }\n\n    /** @private */\n    __getIndexOfChildElement(el) {\n      return Array.prototype.indexOf.call(el.parentNode.children, el);\n    }\n\n    /** @private */\n    _onNavigationKeyDown(e, key) {\n      e.preventDefault();\n\n      const visibleItemsCount = this._lastVisibleIndex - this._firstVisibleIndex - 1;\n\n      // Handle keyboard interaction as defined in:\n      // https://w3c.github.io/aria-practices/#keyboard-interaction-24\n\n      let dx = 0,\n        dy = 0;\n      switch (key) {\n        case 'ArrowRight':\n          dx = this.__isRTL ? -1 : 1;\n          break;\n        case 'ArrowLeft':\n          dx = this.__isRTL ? 1 : -1;\n          break;\n        case 'Home':\n          if (this.__rowFocusMode) {\n            // \"If focus is on a row, moves focus to the first row. If focus is in the first row, focus does not move.\"\n            dy = -Infinity;\n          } else if (e.ctrlKey) {\n            // \"If focus is on a cell, moves focus to the first cell in the column. If focus is in the first row, focus does not move.\"\n            dy = -Infinity;\n          } else {\n            // \"If focus is on a cell, moves focus to the first cell in the row. If focus is in the first cell of the row, focus does not move.\"\n            dx = -Infinity;\n          }\n          break;\n        case 'End':\n          if (this.__rowFocusMode) {\n            // \"If focus is on a row, moves focus to the last row. If focus is in the last row, focus does not move.\"\n            dy = Infinity;\n          } else if (e.ctrlKey) {\n            // \"If focus is on a cell, moves focus to the last cell in the column. If focus is in the last row, focus does not move.\"\n            dy = Infinity;\n          } else {\n            // \"If focus is on a cell, moves focus to the last cell in the row. If focus is in the last cell of the row, focus does not move.\"\n            dx = Infinity;\n          }\n          break;\n        case 'ArrowDown':\n          dy = 1;\n          break;\n        case 'ArrowUp':\n          dy = -1;\n          break;\n        case 'PageDown':\n          dy = visibleItemsCount;\n          break;\n        case 'PageUp':\n          dy = -visibleItemsCount;\n          break;\n        default:\n          break;\n      }\n\n      const activeRow = e.composedPath().find((el) => this.__isRow(el));\n      const activeCell = e.composedPath().find((el) => this.__isCell(el));\n\n      if ((this.__rowFocusMode && !activeRow) || (!this.__rowFocusMode && !activeCell)) {\n        // When using a screen reader, it's possible that neither a cell nor a row is focused.\n        return;\n      }\n\n      const forwardsKey = this.__isRTL ? 'ArrowLeft' : 'ArrowRight';\n      const backwardsKey = this.__isRTL ? 'ArrowRight' : 'ArrowLeft';\n      if (key === forwardsKey) {\n        // \"Right Arrow:\"\n        if (this.__rowFocusMode) {\n          // In row focus mode\n          if (this.__isRowExpandable(activeRow)) {\n            // \"If focus is on a collapsed row, expands the row.\"\n            this.expandItem(activeRow._item);\n            return;\n          }\n          // \"If focus is on an expanded row or is on a row that does not have child rows,\n          // moves focus to the first cell in the row.\"\n          this.__rowFocusMode = false;\n          this._onCellNavigation(activeRow.firstElementChild, 0, 0);\n          return;\n        }\n      } else if (key === backwardsKey) {\n        // \"Left Arrow:\"\n        if (this.__rowFocusMode) {\n          // In row focus mode\n          if (this.__isRowCollapsible(activeRow)) {\n            // \"If focus is on an expanded row, collapses the row.\"\n            this.collapseItem(activeRow._item);\n            return;\n          }\n        } else {\n          // In cell focus mode\n          const activeRowCells = [...activeRow.children].sort((a, b) => a._order - b._order);\n          if (activeCell === activeRowCells[0] || this.__isDetailsCell(activeCell)) {\n            // \"If focus is on the first cell in a row and row focus is supported, moves focus to the row.\"\n            this.__rowFocusMode = true;\n            this._onRowNavigation(activeRow, 0);\n            return;\n          }\n        }\n      }\n\n      // Navigate\n      if (this.__rowFocusMode) {\n        // Navigate the rows\n        this._onRowNavigation(activeRow, dy);\n      } else {\n        // Navigate the cells\n        this._onCellNavigation(activeCell, dx, dy);\n      }\n    }\n\n    /**\n     * Focuses the target row after navigating by the given dy offset.\n     * If the row is not in the viewport, it is first scrolled to.\n     * @private\n     **/\n    _onRowNavigation(activeRow, dy) {\n      const { dstRow } = this.__navigateRows(dy, activeRow);\n\n      if (dstRow) {\n        dstRow.focus();\n      }\n    }\n\n    /** @private */\n    __getIndexInGroup(row, bodyFallbackIndex) {\n      const rowGroup = row.parentNode;\n      // Body rows have index property, otherwise DOM child index of the row is used.\n      if (rowGroup === this.$.items) {\n        return bodyFallbackIndex !== undefined ? bodyFallbackIndex : row.index;\n      }\n      return this.__getIndexOfChildElement(row);\n    }\n\n    /**\n     * Returns the target row after navigating by the given dy offset.\n     * Also returns information whether the details cell should be the target on the target row.\n     * If the row is not in the viewport, it is first scrolled to.\n     * @private\n     **/\n    __navigateRows(dy, activeRow, activeCell) {\n      const currentRowIndex = this.__getIndexInGroup(activeRow, this._focusedItemIndex);\n      const activeRowGroup = activeRow.parentNode;\n      const maxRowIndex = (activeRowGroup === this.$.items ? this._effectiveSize : activeRowGroup.children.length) - 1;\n\n      // Index of the destination row\n      let dstRowIndex = Math.max(0, Math.min(currentRowIndex + dy, maxRowIndex));\n\n      if (activeRowGroup !== this.$.items) {\n        // Navigating header/footer rows\n\n        // Header and footer could have hidden rows, e. g., if none of the columns\n        // or groups on the given column tree level define template. Skip them\n        // in vertical keyboard navigation.\n        if (dstRowIndex > currentRowIndex) {\n          while (dstRowIndex < maxRowIndex && activeRowGroup.children[dstRowIndex].hidden) {\n            dstRowIndex += 1;\n          }\n        } else if (dstRowIndex < currentRowIndex) {\n          while (dstRowIndex > 0 && activeRowGroup.children[dstRowIndex].hidden) {\n            dstRowIndex -= 1;\n          }\n        }\n\n        this.toggleAttribute('navigating', true);\n\n        return { dstRow: activeRowGroup.children[dstRowIndex] };\n      }\n      // Navigating body rows\n\n      let dstIsRowDetails = false;\n      if (activeCell) {\n        const isRowDetails = this.__isDetailsCell(activeCell);\n        // Row details navigation logic\n        if (activeRowGroup === this.$.items) {\n          const item = activeRow._item;\n          const dstItem = this._cache.getItemForIndex(dstRowIndex);\n          // Should we navigate to row details?\n          if (isRowDetails) {\n            dstIsRowDetails = dy === 0;\n          } else {\n            dstIsRowDetails =\n              (dy === 1 && this._isDetailsOpened(item)) ||\n              (dy === -1 && dstRowIndex !== currentRowIndex && this._isDetailsOpened(dstItem));\n          }\n          // Should we navigate between details and regular cells of the same row?\n          if (dstIsRowDetails !== isRowDetails && ((dy === 1 && dstIsRowDetails) || (dy === -1 && !dstIsRowDetails))) {\n            dstRowIndex = currentRowIndex;\n          }\n        }\n      }\n\n      // Ensure correct vertical scroll position, destination row is visible\n      this._ensureScrolledToIndex(dstRowIndex);\n\n      // When scrolling with repeated keydown, sometimes FocusEvent listeners\n      // are too late to update _focusedItemIndex. Ensure next keydown\n      // listener invocation gets updated _focusedItemIndex value.\n      this._focusedItemIndex = dstRowIndex;\n\n      // This has to be set after scrolling, otherwise it can be removed by\n      // `_preventScrollerRotatingCellFocus(row, index)` during scrolling.\n      this.toggleAttribute('navigating', true);\n\n      return {\n        dstRow: [...activeRowGroup.children].find((el) => !el.hidden && el.index === dstRowIndex),\n        dstIsRowDetails,\n      };\n    }\n\n    /**\n     * Focuses the target cell after navigating by the given dx and dy offset.\n     * If the cell is not in the viewport, it is first scrolled to.\n     * @private\n     **/\n    _onCellNavigation(activeCell, dx, dy) {\n      const activeRow = activeCell.parentNode;\n      const { dstRow, dstIsRowDetails } = this.__navigateRows(dy, activeRow, activeCell);\n      if (!dstRow) {\n        return;\n      }\n\n      const columnIndex = this.__getIndexOfChildElement(activeCell);\n      const isCurrentCellRowDetails = this.__isDetailsCell(activeCell);\n      const activeRowGroup = activeRow.parentNode;\n      const currentRowIndex = this.__getIndexInGroup(activeRow, this._focusedItemIndex);\n\n      // _focusedColumnOrder is memoized — this is to ensure predictable\n      // navigation when entering and leaving detail and column group cells.\n      if (this._focusedColumnOrder === undefined) {\n        if (isCurrentCellRowDetails) {\n          this._focusedColumnOrder = 0;\n        } else {\n          this._focusedColumnOrder = this._getColumns(activeRowGroup, currentRowIndex).filter((c) => !c.hidden)[\n            columnIndex\n          ]._order;\n        }\n      }\n\n      if (dstIsRowDetails) {\n        // Focusing a row details cell on the destination row\n        const dstCell = [...dstRow.children].find((el) => this.__isDetailsCell(el));\n        dstCell.focus();\n      } else {\n        // Focusing a regular cell on the destination row\n\n        // Find orderedColumnIndex — the index of order closest matching the\n        // original _focusedColumnOrder in the sorted array of orders\n        // of the visible columns on the destination row.\n        const dstRowIndex = this.__getIndexInGroup(dstRow, this._focusedItemIndex);\n        const dstColumns = this._getColumns(activeRowGroup, dstRowIndex).filter((c) => !c.hidden);\n        const dstSortedColumnOrders = dstColumns.map((c) => c._order).sort((b, a) => b - a);\n        const maxOrderedColumnIndex = dstSortedColumnOrders.length - 1;\n        const orderedColumnIndex = dstSortedColumnOrders.indexOf(\n          dstSortedColumnOrders\n            .slice(0)\n            .sort((b, a) => Math.abs(b - this._focusedColumnOrder) - Math.abs(a - this._focusedColumnOrder))[0],\n        );\n\n        // Index of the destination column order\n        const dstOrderedColumnIndex =\n          dy === 0 && isCurrentCellRowDetails\n            ? orderedColumnIndex\n            : Math.max(0, Math.min(orderedColumnIndex + dx, maxOrderedColumnIndex));\n\n        if (dstOrderedColumnIndex !== orderedColumnIndex) {\n          // Horizontal movement invalidates stored _focusedColumnOrder\n          this._focusedColumnOrder = undefined;\n        }\n\n        const columnIndexByOrder = dstColumns.reduce((acc, col, i) => {\n          acc[col._order] = i;\n          return acc;\n        }, {});\n        const dstColumnIndex = columnIndexByOrder[dstSortedColumnOrders[dstOrderedColumnIndex]];\n        const dstCell = dstRow.children[dstColumnIndex];\n\n        this._scrollHorizontallyToCell(dstCell);\n        dstCell.focus();\n      }\n    }\n\n    /** @private */\n    _onInteractionKeyDown(e, key) {\n      const localTarget = e.composedPath()[0];\n      const localTargetIsTextInput =\n        localTarget.localName === 'input' &&\n        !/^(button|checkbox|color|file|image|radio|range|reset|submit)$/i.test(localTarget.type);\n\n      let wantInteracting;\n      switch (key) {\n        case 'Enter':\n          wantInteracting = this.interacting ? !localTargetIsTextInput : true;\n          break;\n        case 'Escape':\n          wantInteracting = false;\n          break;\n        case 'F2':\n          wantInteracting = !this.interacting;\n          break;\n        default:\n          break;\n      }\n\n      const { cell } = this._getGridEventLocation(e);\n\n      if (this.interacting !== wantInteracting && cell !== null) {\n        if (wantInteracting) {\n          const focusTarget =\n            cell._content.querySelector('[focus-target]') ||\n            // If a child element hasn't been explicitly marked as a focus target,\n            // fall back to any focusable element inside the cell.\n            [...cell._content.querySelectorAll('*')].find((node) => this._isFocusable(node));\n          if (focusTarget) {\n            e.preventDefault();\n            focusTarget.focus();\n            this._setInteracting(true);\n            this.toggleAttribute('navigating', false);\n          }\n        } else {\n          e.preventDefault();\n          this._focusedColumnOrder = undefined;\n          cell.focus();\n          this._setInteracting(false);\n          this.toggleAttribute('navigating', true);\n        }\n      }\n    }\n\n    /** @private */\n    _predictFocusStepTarget(srcElement, step) {\n      const tabOrder = [\n        this.$.table,\n        this._headerFocusable,\n        this._itemsFocusable,\n        this._footerFocusable,\n        this.$.focusexit,\n      ];\n\n      let index = tabOrder.indexOf(srcElement);\n\n      index += step;\n      while (index >= 0 && index <= tabOrder.length - 1) {\n        let rowElement = tabOrder[index];\n        if (rowElement && !this.__rowFocusMode) {\n          rowElement = tabOrder[index].parentNode;\n        }\n\n        if (!rowElement || rowElement.hidden) {\n          index += step;\n        } else {\n          break;\n        }\n      }\n\n      return tabOrder[index];\n    }\n\n    /** @private */\n    _onTabKeyDown(e) {\n      const focusTarget = this._predictFocusStepTarget(e.composedPath()[0], e.shiftKey ? -1 : 1);\n\n      // Can be undefined if grid has tabindex\n      if (!focusTarget) {\n        return;\n      }\n\n      // Prevent focus-trap logic from intercepting the event.\n      e.stopPropagation();\n\n      if (focusTarget === this.$.table) {\n        // The focus is about to exit the grid to the top.\n        this.$.table.focus();\n      } else if (focusTarget === this.$.focusexit) {\n        // The focus is about to exit the grid to the bottom.\n        this.$.focusexit.focus();\n      } else if (focusTarget === this._itemsFocusable) {\n        let itemsFocusTarget = focusTarget;\n        const targetRow = this.__isRow(focusTarget) ? focusTarget : focusTarget.parentNode;\n        this._ensureScrolledToIndex(this._focusedItemIndex);\n        if (targetRow.index !== this._focusedItemIndex && this.__isCell(focusTarget)) {\n          // The target row, which is about to be focused next, has been\n          // assigned with a new index since last focus, probably because of\n          // scrolling. Focus the row for the stored focused item index instead.\n          const columnIndex = Array.from(targetRow.children).indexOf(this._itemsFocusable);\n          const focusedItemRow = Array.from(this.$.items.children).find(\n            (row) => !row.hidden && row.index === this._focusedItemIndex,\n          );\n          if (focusedItemRow) {\n            itemsFocusTarget = focusedItemRow.children[columnIndex];\n          }\n        }\n        e.preventDefault();\n        itemsFocusTarget.focus();\n      } else {\n        e.preventDefault();\n        focusTarget.focus();\n      }\n\n      this.toggleAttribute('navigating', true);\n    }\n\n    /** @private */\n    _onSpaceKeyDown(e) {\n      e.preventDefault();\n\n      const element = e.composedPath()[0];\n      const isRow = this.__isRow(element);\n      if (isRow || !element._content || !element._content.firstElementChild) {\n        this.dispatchEvent(\n          new CustomEvent(isRow ? 'row-activate' : 'cell-activate', {\n            detail: {\n              model: this.__getRowModel(isRow ? element : element.parentElement),\n            },\n          }),\n        );\n      }\n    }\n\n    /** @private */\n    _onKeyUp(e) {\n      if (!/^( |SpaceBar)$/.test(e.key) || this.interacting) {\n        return;\n      }\n\n      e.preventDefault();\n\n      const cell = e.composedPath()[0];\n      if (cell._content && cell._content.firstElementChild) {\n        const wasNavigating = this.hasAttribute('navigating');\n        cell._content.firstElementChild.click();\n        this.toggleAttribute('navigating', wasNavigating);\n      }\n    }\n\n    /**\n     * @param {!FocusEvent} e\n     * @protected\n     */\n    _onFocusIn(e) {\n      if (!this._isMousedown) {\n        this.toggleAttribute('navigating', true);\n      }\n\n      const rootTarget = e.composedPath()[0];\n\n      if (rootTarget === this.$.table || rootTarget === this.$.focusexit) {\n        // The focus enters the top (bottom) of the grid, meaning that user has\n        // tabbed (shift-tabbed) into the grid. Move the focus to\n        // the first (the last) focusable.\n        this._predictFocusStepTarget(rootTarget, rootTarget === this.$.table ? 1 : -1).focus();\n        this._setInteracting(false);\n      } else {\n        this._detectInteracting(e);\n      }\n    }\n\n    /**\n     * @param {!FocusEvent} e\n     * @protected\n     */\n    _onFocusOut(e) {\n      this.toggleAttribute('navigating', false);\n      this._detectInteracting(e);\n    }\n\n    /** @private */\n    _onContentFocusIn(e) {\n      const { section, cell, row } = this._getGridEventLocation(e);\n      this._detectInteracting(e);\n\n      if (section && (cell || row)) {\n        this._activeRowGroup = section;\n        if (this.$.header === section) {\n          this._headerFocusable = this.__rowFocusMode ? row : cell;\n        } else if (this.$.items === section) {\n          this._itemsFocusable = this.__rowFocusMode ? row : cell;\n        } else if (this.$.footer === section) {\n          this._footerFocusable = this.__rowFocusMode ? row : cell;\n        }\n\n        if (cell) {\n          // Fire a public event for cell.\n          const context = this.getEventContext(e);\n          cell.dispatchEvent(\n            new CustomEvent('cell-focus', { bubbles: true, composed: true, detail: { context: context } }),\n          );\n        }\n      }\n\n      this._detectFocusedItemIndex(e);\n    }\n\n    /** @private\n     * Enables interaction mode if a cells descendant receives focus or keyboard\n     * input. Disables it if the event is not related to cell content.\n     * @param {!KeyboardEvent|!FocusEvent} e\n     */\n    _detectInteracting(e) {\n      const isInteracting = e.composedPath().some((el) => el.localName === 'vaadin-grid-cell-content');\n      this._setInteracting(isInteracting);\n    }\n\n    /** @private */\n    _detectFocusedItemIndex(e) {\n      const { section, row } = this._getGridEventLocation(e);\n      if (section === this.$.items) {\n        this._focusedItemIndex = row.index;\n      }\n    }\n\n    /** @private\n     * Enables or disables the focus target of the containing section of the\n     * grid from receiving focus, based on whether the user is interacting with\n     * that section of the grid.\n     * @param {HTMLElement} focusTarget\n     */\n    _updateGridSectionFocusTarget(focusTarget) {\n      if (!focusTarget) {\n        return;\n      }\n\n      const section = this._getGridSectionFromFocusTarget(focusTarget);\n      const isInteractingWithinActiveSection = this.interacting && section === this._activeRowGroup;\n\n      focusTarget.tabIndex = isInteractingWithinActiveSection ? -1 : 0;\n    }\n\n    /**\n     * @param {!HTMLTableRowElement} row\n     * @param {number} index\n     * @protected\n     */\n    _preventScrollerRotatingCellFocus(row, index) {\n      if (\n        row.index === this._focusedItemIndex &&\n        this.hasAttribute('navigating') &&\n        this._activeRowGroup === this.$.items\n      ) {\n        // Focused item has went, hide navigation mode\n        this._navigatingIsHidden = true;\n        this.toggleAttribute('navigating', false);\n      }\n      if (index === this._focusedItemIndex && this._navigatingIsHidden) {\n        // Focused item is back, restore navigation mode\n        this._navigatingIsHidden = false;\n        this.toggleAttribute('navigating', true);\n      }\n    }\n\n    /**\n     * @param {HTMLTableSectionElement=} rowGroup\n     * @param {number=} rowIndex\n     * @return {!Array<!GridColumn>}\n     * @protected\n     */\n    _getColumns(rowGroup, rowIndex) {\n      let columnTreeLevel = this._columnTree.length - 1;\n      if (rowGroup === this.$.header) {\n        columnTreeLevel = rowIndex;\n      } else if (rowGroup === this.$.footer) {\n        columnTreeLevel = this._columnTree.length - 1 - rowIndex;\n      }\n      return this._columnTree[columnTreeLevel];\n    }\n\n    /** @private */\n    __isValidFocusable(element) {\n      return this.$.table.contains(element) && element.offsetHeight;\n    }\n\n    /** @protected */\n    _resetKeyboardNavigation() {\n      // Header / footer\n      ['header', 'footer'].forEach((section) => {\n        if (!this.__isValidFocusable(this[`_${section}Focusable`])) {\n          const firstVisibleRow = [...this.$[section].children].find((row) => row.offsetHeight);\n          const firstVisibleCell = firstVisibleRow ? [...firstVisibleRow.children].find((cell) => !cell.hidden) : null;\n          if (firstVisibleRow && firstVisibleCell) {\n            this[`_${section}Focusable`] = this.__rowFocusMode ? firstVisibleRow : firstVisibleCell;\n          }\n        }\n      });\n\n      // Body\n      if (!this.__isValidFocusable(this._itemsFocusable) && this.$.items.firstElementChild) {\n        const firstVisibleRow = this.__getFirstVisibleItem();\n        const firstVisibleCell = firstVisibleRow ? [...firstVisibleRow.children].find((cell) => !cell.hidden) : null;\n\n        if (firstVisibleCell && firstVisibleRow) {\n          // Reset memoized column\n          delete this._focusedColumnOrder;\n          this._itemsFocusable = this.__rowFocusMode ? firstVisibleRow : firstVisibleCell;\n        }\n      } else {\n        this.__updateItemsFocusable();\n      }\n    }\n\n    /**\n     * @param {!HTMLElement} dstCell\n     * @protected\n     */\n    _scrollHorizontallyToCell(dstCell) {\n      if (dstCell.hasAttribute('frozen') || this.__isDetailsCell(dstCell)) {\n        // These cells are, by design, always visible, no need to scroll.\n        return;\n      }\n\n      const dstCellRect = dstCell.getBoundingClientRect();\n      const dstRow = dstCell.parentNode;\n      const dstCellIndex = Array.from(dstRow.children).indexOf(dstCell);\n      const tableRect = this.$.table.getBoundingClientRect();\n      let leftBoundary = tableRect.left,\n        rightBoundary = tableRect.right;\n      for (let i = dstCellIndex - 1; i >= 0; i--) {\n        const cell = dstRow.children[i];\n        if (cell.hasAttribute('hidden') || this.__isDetailsCell(cell)) {\n          continue;\n        }\n        if (cell.hasAttribute('frozen')) {\n          leftBoundary = cell.getBoundingClientRect().right;\n          break;\n        }\n      }\n      for (let i = dstCellIndex + 1; i < dstRow.children.length; i++) {\n        const cell = dstRow.children[i];\n        if (cell.hasAttribute('hidden') || this.__isDetailsCell(cell)) {\n          continue;\n        }\n        if (cell.hasAttribute('frozen')) {\n          rightBoundary = cell.getBoundingClientRect().left;\n          break;\n        }\n      }\n\n      if (dstCellRect.left < leftBoundary) {\n        this.$.table.scrollLeft += Math.round(dstCellRect.left - leftBoundary);\n      }\n      if (dstCellRect.right > rightBoundary) {\n        this.$.table.scrollLeft += Math.round(dstCellRect.right - rightBoundary);\n      }\n    }\n\n    /**\n     * @typedef {Object} GridEventLocation\n     * @property {HTMLTableSectionElement | null} section - The table section element that the event occurred in (header, body, or footer), or null if the event did not occur in a section\n     * @property {HTMLTableRowElement | null} row - The row element that the event occurred in, or null if the event did not occur in a row\n     * @property {HTMLTableCellElement | null} cell - The cell element that the event occurred in, or null if the event did not occur in a cell\n     * @private\n     */\n    /**\n     * Takes an event and returns a location object describing in which part of the grid the event occurred.\n     * The event may either target table section, a row, a cell or contents of a cell.\n     * @param {Event} e\n     * @returns {GridEventLocation}\n     * @private\n     */\n    _getGridEventLocation(e) {\n      const path = e.composedPath();\n      const tableIndex = path.indexOf(this.$.table);\n      // Assuming ascending path to table is: [...,] th|td, tr, thead|tbody, table [,...]\n      const section = tableIndex >= 1 ? path[tableIndex - 1] : null;\n      const row = tableIndex >= 2 ? path[tableIndex - 2] : null;\n      const cell = tableIndex >= 3 ? path[tableIndex - 3] : null;\n\n      return {\n        section,\n        row,\n        cell,\n      };\n    }\n\n    /**\n     * Helper method that maps a focus target cell to the containing grid section\n     * @param {HTMLElement} focusTarget\n     * @returns {HTMLTableSectionElement | null}\n     * @private\n     */\n    _getGridSectionFromFocusTarget(focusTarget) {\n      if (focusTarget === this._headerFocusable) {\n        return this.$.header;\n      }\n      if (focusTarget === this._itemsFocusable) {\n        return this.$.items;\n      }\n      if (focusTarget === this._footerFocusable) {\n        return this.$.footer;\n      }\n      return null;\n    }\n\n    /**\n     * Fired when a cell is focused with click or keyboard navigation.\n     *\n     * Use context property of @see {@link GridCellFocusEvent} to get detail information about the event.\n     *\n     * @event cell-focus\n     */\n  };\n","/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nexport const RowDetailsMixin = (superClass) =>\n  class RowDetailsMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * An array containing references to items with open row details.\n         * @type {!Array<!GridItem>}\n         */\n        detailsOpenedItems: {\n          type: Array,\n          value: function () {\n            return [];\n          },\n        },\n\n        /**\n         * Custom function for rendering the content of the row details.\n         * Receives three arguments:\n         *\n         * - `root` The row details content DOM element. Append your content to it.\n         * - `grid` The `<vaadin-grid>` element.\n         * - `model` The object with the properties related with\n         *   the rendered item, contains:\n         *   - `model.index` The index of the item.\n         *   - `model.item` The item.\n         *   - `model.level` The number of the item's tree sublevel, starts from 0.\n         *   - `model.expanded` True if the item's tree sublevel is expanded.\n         *   - `model.selected` True if the item is selected.\n         *\n         * @type {GridRowDetailsRenderer | null | undefined}\n         */\n        rowDetailsRenderer: Function,\n\n        /**\n         * @type {!Array<!HTMLElement> | undefined}\n         * @protected\n         */\n        _detailsCells: {\n          type: Array,\n        },\n      };\n    }\n\n    static get observers() {\n      return [\n        '_detailsOpenedItemsChanged(detailsOpenedItems.*, rowDetailsRenderer)',\n        '_rowDetailsRendererChanged(rowDetailsRenderer)',\n      ];\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      this._detailsCellResizeObserver = new ResizeObserver((entries) => {\n        entries.forEach(({ target: cell }) => {\n          this._updateDetailsCellHeight(cell.parentElement);\n        });\n\n        // This workaround is needed until Safari also supports\n        // ResizeObserver.observe with {box: 'border-box'}\n        this.__virtualizer.__adapter._resizeHandler();\n      });\n    }\n\n    /** @private */\n    _rowDetailsRendererChanged(rowDetailsRenderer) {\n      if (!rowDetailsRenderer) {\n        return;\n      }\n\n      if (this._columnTree) {\n        // Only update the rows if the column tree has already been initialized\n        Array.from(this.$.items.children).forEach((row) => {\n          if (!row.querySelector('[part~=details-cell]')) {\n            this._updateRow(row, this._columnTree[this._columnTree.length - 1]);\n            const isDetailsOpened = this._isDetailsOpened(row._item);\n            this._toggleDetailsCell(row, isDetailsOpened);\n          }\n        });\n      }\n    }\n\n    /** @private */\n    _detailsOpenedItemsChanged(changeRecord, rowDetailsRenderer) {\n      // Skip to avoid duplicate work of both “.splices” and “.length” updates.\n      if (changeRecord.path === 'detailsOpenedItems.length' || !changeRecord.value) {\n        return;\n      }\n\n      [...this.$.items.children].forEach((row) => {\n        // Re-renders the row to possibly close the previously opened details.\n        if (row.hasAttribute('details-opened')) {\n          this._updateItem(row, row._item);\n          return;\n        }\n\n        // Re-renders the row to open the details when a row details renderer is provided.\n        if (rowDetailsRenderer && this._isDetailsOpened(row._item)) {\n          this._updateItem(row, row._item);\n        }\n      });\n    }\n\n    /**\n     * @param {!HTMLElement} cell\n     * @protected\n     */\n    _configureDetailsCell(cell) {\n      cell.setAttribute('part', 'cell details-cell');\n      // Freeze the details cell, so that it does not scroll horizontally\n      // with the normal cells. This way it looks less weird.\n      cell.toggleAttribute('frozen', true);\n\n      this._detailsCellResizeObserver.observe(cell);\n    }\n\n    /**\n     * @param {!HTMLElement} row\n     * @param {!GridItem} item\n     * @protected\n     */\n    _toggleDetailsCell(row, detailsOpened) {\n      const cell = row.querySelector('[part~=\"details-cell\"]');\n      if (!cell) {\n        return;\n      }\n\n      cell.hidden = !detailsOpened;\n\n      if (cell.hidden) {\n        return;\n      }\n\n      // Assigns a renderer when the details cell is opened.\n      // The details cell content is rendered later in the `_updateItem` method.\n      if (this.rowDetailsRenderer) {\n        cell._renderer = this.rowDetailsRenderer;\n      }\n    }\n\n    /** @protected */\n    _updateDetailsCellHeight(row) {\n      const cell = row.querySelector('[part~=\"details-cell\"]');\n      if (!cell) {\n        return;\n      }\n\n      if (cell.hidden) {\n        row.style.removeProperty('padding-bottom');\n      } else {\n        row.style.setProperty('padding-bottom', `${cell.offsetHeight}px`);\n      }\n    }\n\n    /** @protected */\n    _updateDetailsCellHeights() {\n      [...this.$.items.children].forEach((row) => {\n        this._updateDetailsCellHeight(row);\n      });\n    }\n\n    /**\n     * @param {!GridItem} item\n     * @return {boolean}\n     * @protected\n     */\n    _isDetailsOpened(item) {\n      return this.detailsOpenedItems && this._getItemIndexInArray(item, this.detailsOpenedItems) !== -1;\n    }\n\n    /**\n     * Open the details row of a given item.\n     * @param {!GridItem} item\n     */\n    openItemDetails(item) {\n      if (!this._isDetailsOpened(item)) {\n        this.detailsOpenedItems = [...this.detailsOpenedItems, item];\n      }\n    }\n\n    /**\n     * Close the details row of a given item.\n     * @param {!GridItem} item\n     */\n    closeItemDetails(item) {\n      if (this._isDetailsOpened(item)) {\n        this.detailsOpenedItems = this.detailsOpenedItems.filter((i) => !this._itemsEqual(i, item));\n      }\n    }\n  };\n","/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { animationFrame, microTask, timeOut } from '@vaadin/component-base/src/async.js';\nimport { Debouncer } from '@vaadin/component-base/src/debounce.js';\n\nconst timeouts = {\n  SCROLLING: 500,\n};\n\n/**\n * @polymerMixin\n */\nexport const ScrollMixin = (superClass) =>\n  class ScrollMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * Cached array of frozen cells\n         * @private\n         */\n        _frozenCells: {\n          type: Array,\n          value: () => [],\n        },\n\n        /** @private */\n        _rowWithFocusedElement: Element,\n      };\n    }\n\n    /** @private */\n    get _scrollTop() {\n      return this.$.table.scrollTop;\n    }\n\n    /**\n     * Override (from iron-scroll-target-behavior) to avoid document scroll\n     * @private\n     */\n    set _scrollTop(top) {\n      this.$.table.scrollTop = top;\n    }\n\n    /** @private */\n    get _scrollLeft() {\n      return this.$.table.scrollLeft;\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      // Preserve accessor to the legacy scrolling functionality\n      this.$.outerscroller = document.createElement('div');\n\n      this.scrollTarget = this.$.table;\n\n      this.$.items.addEventListener('focusin', (e) => {\n        const itemsIndex = e.composedPath().indexOf(this.$.items);\n        this._rowWithFocusedElement = e.composedPath()[itemsIndex - 1];\n      });\n      this.$.items.addEventListener('focusout', () => (this._rowWithFocusedElement = undefined));\n\n      this.$.table.addEventListener('scroll', () => this._afterScroll());\n    }\n\n    /**\n     * Scroll to a specific row index in the virtual list. Note that the row index is\n     * not always the same for any particular item. For example, sorting/filtering/expanding\n     * or collapsing hierarchical items can affect the row index related to an item.\n     *\n     * @param {number} index Row index to scroll to\n     */\n    scrollToIndex(index) {\n      index = Math.min(this._effectiveSize - 1, Math.max(0, index));\n      this.__virtualizer.scrollToIndex(index);\n      this.__scrollIntoViewport(index);\n    }\n\n    /**\n     * Makes sure the row with the given index (if found in the DOM) is fully\n     * inside the visible viewport, taking header/footer into account.\n     * @private\n     */\n    __scrollIntoViewport(index) {\n      const rowElement = [...this.$.items.children].find((child) => child.index === index);\n      if (rowElement) {\n        const dstRect = rowElement.getBoundingClientRect();\n        const footerTop = this.$.footer.getBoundingClientRect().top;\n        const headerBottom = this.$.header.getBoundingClientRect().bottom;\n        if (dstRect.bottom > footerTop) {\n          this.$.table.scrollTop += dstRect.bottom - footerTop;\n        } else if (dstRect.top < headerBottom) {\n          this.$.table.scrollTop -= headerBottom - dstRect.top;\n        }\n      }\n    }\n\n    /** @private */\n    _scheduleScrolling() {\n      if (!this._scrollingFrame) {\n        // Defer setting state attributes to avoid Edge hiccups\n        this._scrollingFrame = requestAnimationFrame(() => this.$.scroller.toggleAttribute('scrolling', true));\n      }\n      this._debounceScrolling = Debouncer.debounce(this._debounceScrolling, timeOut.after(timeouts.SCROLLING), () => {\n        cancelAnimationFrame(this._scrollingFrame);\n        delete this._scrollingFrame;\n        this.$.scroller.toggleAttribute('scrolling', false);\n      });\n    }\n\n    /** @private */\n    _afterScroll() {\n      this.__updateHorizontalScrollPosition();\n\n      if (!this.hasAttribute('reordering')) {\n        this._scheduleScrolling();\n      }\n\n      this._updateOverflow();\n    }\n\n    /** @private */\n    _updateOverflow() {\n      // Set overflow styling attributes\n      let overflow = '';\n      const table = this.$.table;\n      if (table.scrollTop < table.scrollHeight - table.clientHeight) {\n        overflow += ' bottom';\n      }\n\n      if (table.scrollTop > 0) {\n        overflow += ' top';\n      }\n\n      if (table.scrollLeft < table.scrollWidth - table.clientWidth) {\n        overflow += ' right';\n      }\n\n      if (table.scrollLeft > 0) {\n        overflow += ' left';\n      }\n\n      this._debounceOverflow = Debouncer.debounce(this._debounceOverflow, animationFrame, () => {\n        const value = overflow.trim();\n        if (value.length > 0 && this.getAttribute('overflow') !== value) {\n          this.setAttribute('overflow', value);\n        } else if (value.length == 0 && this.hasAttribute('overflow')) {\n          this.removeAttribute('overflow');\n        }\n      });\n    }\n\n    /** @protected */\n    _frozenCellsChanged() {\n      this._debouncerCacheElements = Debouncer.debounce(this._debouncerCacheElements, microTask, () => {\n        Array.from(this.shadowRoot.querySelectorAll('[part~=\"cell\"]')).forEach(function (cell) {\n          cell.style.transform = '';\n        });\n        this._frozenCells = Array.prototype.slice.call(this.$.table.querySelectorAll('[frozen]'));\n        this.__updateHorizontalScrollPosition();\n      });\n      this._updateLastFrozen();\n    }\n\n    /** @protected */\n    _updateLastFrozen() {\n      if (!this._columnTree) {\n        return;\n      }\n\n      const columnsRow = this._columnTree[this._columnTree.length - 1].slice(0);\n      columnsRow.sort((a, b) => {\n        return a._order - b._order;\n      });\n      const lastFrozen = columnsRow.reduce((prev, col, index) => {\n        col._lastFrozen = false;\n        return col.frozen && !col.hidden ? index : prev;\n      }, undefined);\n      if (lastFrozen !== undefined) {\n        columnsRow[lastFrozen]._lastFrozen = true;\n      }\n    }\n\n    /** @private */\n    __updateHorizontalScrollPosition() {\n      this.$.table.style.setProperty('--_grid-horizontal-scroll-position', -this._scrollLeft + 'px');\n\n      if (this.__isRTL) {\n        // Translating the sticky sections using a CSS variable works nicely on LTR.\n        // On RTL, it causes jumpy behavior (on Desktop Safari) so we need to translate manually.\n        const x = this.__getNormalizedScrollLeft(this.$.table) + this.$.table.clientWidth - this.$.table.scrollWidth;\n        const transform = `translate(${x}px, 0)`;\n        for (let i = 0; i < this._frozenCells.length; i++) {\n          this._frozenCells[i].style.transform = transform;\n        }\n      }\n    }\n  };\n","/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nexport const SelectionMixin = (superClass) =>\n  class SelectionMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * An array that contains the selected items.\n         * @type {!Array<!GridItem>}\n         */\n        selectedItems: {\n          type: Object,\n          notify: true,\n          value: () => [],\n        },\n\n        /**\n         * Set of selected item ids\n         * @private\n         */\n        __selectedKeys: {\n          type: Object,\n          computed: '__computeSelectedKeys(itemIdPath, selectedItems.*)',\n        },\n      };\n    }\n\n    static get observers() {\n      return ['__selectedItemsChanged(itemIdPath, selectedItems.*)'];\n    }\n\n    /**\n     * @param {!GridItem} item\n     * @return {boolean}\n     * @protected\n     */\n    _isSelected(item) {\n      return this.__selectedKeys.has(this.getItemId(item));\n    }\n\n    /**\n     * Selects the given item.\n     *\n     * @method selectItem\n     * @param {!GridItem} item The item object\n     */\n    selectItem(item) {\n      if (!this._isSelected(item)) {\n        this.selectedItems = [...this.selectedItems, item];\n      }\n    }\n\n    /**\n     * Deselects the given item if it is already selected.\n     *\n     * @method deselect\n     * @param {!GridItem} item The item object\n     */\n    deselectItem(item) {\n      if (this._isSelected(item)) {\n        this.selectedItems = this.selectedItems.filter((i) => !this._itemsEqual(i, item));\n      }\n    }\n\n    /**\n     * Toggles the selected state of the given item.\n     *\n     * @method toggle\n     * @param {!GridItem} item The item object\n     * @protected\n     */\n    _toggleItem(item) {\n      if (!this._isSelected(item)) {\n        this.selectItem(item);\n      } else {\n        this.deselectItem(item);\n      }\n    }\n\n    /** @private */\n    __selectedItemsChanged() {\n      this.requestContentUpdate();\n    }\n\n    /** @private */\n    __computeSelectedKeys(itemIdPath, selectedItems) {\n      const selected = selectedItems.base || [];\n      const selectedKeys = new Set();\n      selected.forEach((item) => {\n        selectedKeys.add(this.getItemId(item));\n      });\n\n      return selectedKeys;\n    }\n\n    /**\n     * Fired when the `selectedItems` property changes.\n     *\n     * @event selected-items-changed\n     */\n  };\n","/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nexport const SortMixin = (superClass) =>\n  class SortMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * When `true`, all `<vaadin-grid-sorter>` are applied for sorting.\n         * @attr {boolean} multi-sort\n         * @type {boolean}\n         */\n        multiSort: {\n          type: Boolean,\n          value: false,\n        },\n\n        /**\n         * @type {!Array<!GridSorterDefinition>}\n         * @protected\n         */\n        _sorters: {\n          type: Array,\n          value: function () {\n            return [];\n          },\n        },\n\n        /** @private */\n        _previousSorters: {\n          type: Array,\n          value: function () {\n            return [];\n          },\n        },\n      };\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n      this.addEventListener('sorter-changed', this._onSorterChanged);\n    }\n\n    /** @private */\n    _onSorterChanged(e) {\n      const sorter = e.target;\n      e.stopPropagation();\n      this.__updateSorter(sorter);\n      this.__applySorters();\n    }\n\n    /** @private */\n    __removeSorters(sortersToRemove) {\n      if (sortersToRemove.length == 0) {\n        return;\n      }\n\n      this._sorters = this._sorters.filter((sorter) => sortersToRemove.indexOf(sorter) < 0);\n      if (this.multiSort) {\n        this.__updateSortOrders();\n      }\n      this.__applySorters();\n    }\n\n    /** @private */\n    __updateSortOrders() {\n      this._sorters.forEach((sorter, index) => (sorter._order = this._sorters.length > 1 ? index : null), this);\n    }\n\n    /** @private */\n    __updateSorter(sorter) {\n      if (!sorter.direction && this._sorters.indexOf(sorter) === -1) {\n        return;\n      }\n\n      sorter._order = null;\n\n      if (this.multiSort) {\n        this._removeArrayItem(this._sorters, sorter);\n        if (sorter.direction) {\n          this._sorters.unshift(sorter);\n        }\n        this.__updateSortOrders();\n      } else if (sorter.direction) {\n        const otherSorters = this._sorters.filter((s) => s != sorter);\n        this._sorters = [sorter];\n        otherSorters.forEach((sorter) => {\n          sorter._order = null;\n          sorter.direction = null;\n        });\n      }\n    }\n\n    /** @private */\n    __applySorters() {\n      if (\n        this.dataProvider &&\n        // No need to clear cache if sorters didn't change and grid is attached\n        this.isAttached &&\n        JSON.stringify(this._previousSorters) !== JSON.stringify(this._mapSorters())\n      ) {\n        this.clearCache();\n      }\n\n      this._a11yUpdateSorters();\n\n      this._previousSorters = this._mapSorters();\n    }\n\n    /**\n     * @return {!Array<!GridSorterDefinition>}\n     * @protected\n     */\n    _mapSorters() {\n      return this._sorters.map((sorter) => {\n        return {\n          path: sorter.path,\n          direction: sorter.direction,\n        };\n      });\n    }\n\n    /** @private */\n    _removeArrayItem(array, item) {\n      const index = array.indexOf(item);\n      if (index > -1) {\n        array.splice(index, 1);\n      }\n    }\n  };\n","/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @polymerMixin\n */\nexport const StylingMixin = (superClass) =>\n  class StylingMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * A function that allows generating CSS class names for grid cells\n         * based on their row and column. The return value should be the generated\n         * class name as a string, or multiple class names separated by whitespace\n         * characters.\n         *\n         * Receives two arguments:\n         * - `column` The `<vaadin-grid-column>` element (`undefined` for details-cell).\n         * - `model` The object with the properties related with\n         *   the rendered item, contains:\n         *   - `model.index` The index of the item.\n         *   - `model.item` The item.\n         *   - `model.expanded` Sublevel toggle state.\n         *   - `model.level` Level of the tree represented with a horizontal offset of the toggle button.\n         *   - `model.selected` Selected state.\n         *\n         * @type {GridCellClassNameGenerator | null | undefined}\n         */\n        cellClassNameGenerator: Function,\n      };\n    }\n\n    static get observers() {\n      return ['__cellClassNameGeneratorChanged(cellClassNameGenerator)'];\n    }\n\n    __cellClassNameGeneratorChanged() {\n      this.generateCellClassNames();\n    }\n\n    /**\n     * Runs the `cellClassNameGenerator` for the visible cells.\n     * If the generator depends on varying conditions, you need to\n     * call this function manually in order to update the styles when\n     * the conditions change.\n     */\n    generateCellClassNames() {\n      Array.from(this.$.items.children)\n        .filter((row) => !row.hidden && !row.hasAttribute('loading'))\n        .forEach((row) => this._generateCellClassNames(row, this.__getRowModel(row)));\n    }\n\n    /** @private */\n    _generateCellClassNames(row, model) {\n      Array.from(row.children).forEach((cell) => {\n        if (cell.__generatedClasses) {\n          cell.__generatedClasses.forEach((className) => cell.classList.remove(className));\n        }\n        if (this.cellClassNameGenerator) {\n          const result = this.cellClassNameGenerator(cell._column, model);\n          cell.__generatedClasses = result && result.split(' ').filter((className) => className.length > 0);\n          if (cell.__generatedClasses) {\n            cell.__generatedClasses.forEach((className) => cell.classList.add(className));\n          }\n        }\n      });\n    }\n  };\n","import './theme/lumo/vaadin-grid-sort-column.js';\n\nexport * from './src/vaadin-grid-sort-column.js';\n","import './vaadin-grid-sorter.js';\nimport '../../src/vaadin-grid-sort-column.js';\n","import './vaadin-grid-sorter-styles.js';\nimport '../../src/vaadin-grid-sorter.js';\n","import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles(\n  'vaadin-grid-sorter',\n  css`\n    :host {\n      justify-content: flex-start;\n      align-items: baseline;\n      -webkit-user-select: none;\n      -moz-user-select: none;\n      user-select: none;\n      cursor: var(--lumo-clickable-cursor);\n    }\n\n    [part='content'] {\n      display: inline-block;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n\n    [part='indicators'] {\n      margin-left: var(--lumo-space-s);\n    }\n\n    [part='indicators']::before {\n      transform: scale(0.8);\n    }\n\n    :host(:not([direction]):not(:hover)) [part='indicators'] {\n      color: var(--lumo-tertiary-text-color);\n    }\n\n    :host([direction]) {\n      color: var(--lumo-primary-text-color);\n    }\n\n    [part='order'] {\n      font-size: var(--lumo-font-size-xxs);\n      line-height: 1;\n    }\n\n    /* RTL specific styles */\n\n    :host([dir='rtl']) [part='indicators'] {\n      margin-right: var(--lumo-space-s);\n      margin-left: 0;\n    }\n  `,\n  { moduleId: 'lumo-grid-sorter' },\n);\n","/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { DirMixin } from '@vaadin/component-base/src/dir-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `\n  <style>\n    @font-face {\n      font-family: 'vaadin-grid-sorter-icons';\n      src: url(data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAQwAA0AAAAABuwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAAEFAAAABkAAAAcfep+mUdERUYAAAP4AAAAHAAAAB4AJwAOT1MvMgAAAZgAAAA/AAAAYA8TBPpjbWFwAAAB7AAAAFUAAAFeF1fZ4mdhc3AAAAPwAAAACAAAAAgAAAAQZ2x5ZgAAAlgAAABcAAAAnMvguMloZWFkAAABMAAAAC8AAAA2C5Ap72hoZWEAAAFgAAAAHQAAACQGbQPHaG10eAAAAdgAAAAUAAAAHAoAAABsb2NhAAACRAAAABIAAAASAIwAYG1heHAAAAGAAAAAFgAAACAACwAKbmFtZQAAArQAAAECAAACZxWCgKhwb3N0AAADuAAAADUAAABZCrApUXicY2BkYGAA4rDECVrx/DZfGbhZGEDgyqNPOxH0/wNMq5kPALkcDEwgUQBWRA0dAHicY2BkYGA+8P8AAwMLAwgwrWZgZEAFbABY4QM8AAAAeJxjYGRgYOAAQiYGEICQSAAAAi8AFgAAeJxjYGY6yziBgZWBgWkm0xkGBoZ+CM34msGYkZMBFTAKoAkwODAwvmRiPvD/AIMDMxCD1CDJKjAwAgBktQsXAHicY2GAAMZQCM0EwqshbAALxAEKeJxjYGBgZoBgGQZGBhCIAPIYwXwWBhsgzcXAwcAEhIwMCi+Z/v/9/x+sSuElA4T9/4k4K1gHFwMMMILMY2QDYmaoABOQYGJABUA7WBiGNwAAJd4NIQAAAAAAAAAACAAIABAAGAAmAEAATgAAeJyNjLENgDAMBP9tIURJwQCMQccSZgk2i5fIYBDAidJjycXr7x5EPwE2wY8si7jmyBNXGo/bNBerxJNrpxhbO3/fEFpx8ZICpV+ghxJ74fAMe+h7Ox14AbrsHB14nK2QQWrDMBRER4mTkhQK3ZRQKOgCNk7oGQqhhEIX2WSlWEI1BAlkJ5CDdNsj5Ey9Rncdi38ES+jzNJo/HwTgATcoDEthhY3wBHc4CE+pfwsX5F/hGe7Vo/AcK/UhvMSz+mGXKhZU6pww8ISz3oWn1BvhgnwTnuEJf8Jz1OpFeIlX9YULDLdFi4ASHolkSR0iuYdjLak1vAequBhj21D61Nqyi6l3qWybGPjySbPHGScGJl6dP58MYcQRI0bts7mjebBqrFENH7t3qWtj0OuqHnXcW7b0HOTZFnKryRGW2hFX1m0O2vEM3opNMfTau+CS6Z3Vx6veNnEXY6jwDxhsc2gAAHicY2BiwA84GBgYmRiYGJkZmBlZGFkZ2djScyoLMgzZS/MyDQwMwLSrpYEBlIbxjQDrzgsuAAAAAAEAAf//AA94nGNgZGBg4AFiMSBmYmAEQnYgZgHzGAAD6wA2eJxjYGBgZACCKyoz1cD0o087YTQATOcIewAAAA==) format('woff');\n      font-weight: normal;\n      font-style: normal;\n    }\n  </style>\n`;\n\ndocument.head.appendChild($_documentContainer.content);\n\n/**\n * `<vaadin-grid-sorter>` is a helper element for the `<vaadin-grid>` that provides out-of-the-box UI controls,\n * visual feedback, and handlers for sorting the grid data.\n *\n * #### Example:\n * ```html\n * <vaadin-grid-column id=\"column\"></vaadin-grid-column>\n * ```\n * ```js\n * const column = document.querySelector('#column');\n * column.renderer = (root, column, model) => {\n *   let sorter = root.firstElementChild;\n *   if (!sorter) {\n *     sorter = document.createElement('vaadin-grid-sorter');\n *     root.appendChild(sorter);\n *   }\n *   sorter.path = 'name.first';\n * };\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ----------------|----------------\n * `content` | The slotted content wrapper\n * `indicators` | The internal sorter indicators.\n * `order` | The internal sorter order\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description | Part name\n * -------------|-------------|------------\n * `direction` | Sort direction of a sorter | :host\n *\n * @fires {CustomEvent} direction-changed - Fired when the `direction` property changes.\n * @fires {CustomEvent} sorter-changed - Fired when the `path` or `direction` property changes.\n *\n * @extends HTMLElement\n */\nclass GridSorter extends ThemableMixin(DirMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: inline-flex;\n          cursor: pointer;\n          max-width: 100%;\n        }\n\n        [part='content'] {\n          flex: 1 1 auto;\n        }\n\n        [part='indicators'] {\n          position: relative;\n          align-self: center;\n          flex: none;\n        }\n\n        [part='order'] {\n          display: inline;\n          vertical-align: super;\n        }\n\n        [part='indicators']::before {\n          font-family: 'vaadin-grid-sorter-icons';\n          display: inline-block;\n        }\n\n        :host(:not([direction])) [part='indicators']::before {\n          content: '\\\\e901';\n        }\n\n        :host([direction='asc']) [part='indicators']::before {\n          content: '\\\\e900';\n        }\n\n        :host([direction='desc']) [part='indicators']::before {\n          content: '\\\\e902';\n        }\n      </style>\n\n      <div part=\"content\">\n        <slot></slot>\n      </div>\n      <div part=\"indicators\">\n        <span part=\"order\">[[_getDisplayOrder(_order)]]</span>\n      </div>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-grid-sorter';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * JS Path of the property in the item used for sorting the data.\n       */\n      path: String,\n\n      /**\n       * How to sort the data.\n       * Possible values are `asc` to use an ascending algorithm, `desc` to sort the data in\n       * descending direction, or `null` for not sorting the data.\n       * @type {GridSorterDirection | undefined}\n       */\n      direction: {\n        type: String,\n        reflectToAttribute: true,\n        notify: true,\n        value: null,\n      },\n\n      /**\n       * @type {number | null}\n       * @protected\n       */\n      _order: {\n        type: Number,\n        value: null,\n      },\n\n      /** @private */\n      _isConnected: {\n        type: Boolean,\n        observer: '__isConnectedChanged',\n      },\n    };\n  }\n\n  static get observers() {\n    return ['_pathOrDirectionChanged(path, direction)'];\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this.addEventListener('click', this._onClick.bind(this));\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n    this._isConnected = true;\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this._isConnected = false;\n  }\n\n  /** @private */\n  _pathOrDirectionChanged() {\n    this.__dispatchSorterChangedEvenIfPossible();\n  }\n\n  /** @private */\n  __isConnectedChanged(newValue, oldValue) {\n    if (oldValue === false) {\n      return;\n    }\n\n    this.__dispatchSorterChangedEvenIfPossible();\n  }\n\n  /** @private */\n  __dispatchSorterChangedEvenIfPossible() {\n    if (this.path === undefined || this.direction === undefined || !this._isConnected) {\n      return;\n    }\n\n    this.dispatchEvent(new CustomEvent('sorter-changed', { bubbles: true, composed: true }));\n  }\n\n  /** @private */\n  _getDisplayOrder(order) {\n    return order === null ? '' : order + 1;\n  }\n\n  /** @private */\n  _onClick(e) {\n    const activeElement = this.getRootNode().activeElement;\n    if (this !== activeElement && this.contains(activeElement)) {\n      // Some focusable content inside the sorter was clicked, do nothing.\n      return;\n    }\n\n    e.preventDefault();\n    if (this.direction === 'asc') {\n      this.direction = 'desc';\n    } else if (this.direction === 'desc') {\n      this.direction = null;\n    } else {\n      this.direction = 'asc';\n    }\n  }\n}\n\ncustomElements.define(GridSorter.is, GridSorter);\n\nexport { GridSorter };\n","/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport './vaadin-grid-sorter.js';\nimport { GridColumn } from './vaadin-grid-column.js';\n\n/**\n * `<vaadin-grid-sort-column>` is a helper element for the `<vaadin-grid>`\n * that provides default header renderer and functionality for sorting.\n *\n * #### Example:\n * ```html\n * <vaadin-grid items=\"[[items]]\">\n *  <vaadin-grid-sort-column path=\"name.first\" direction=\"asc\"></vaadin-grid-sort-column>\n *\n *  <vaadin-grid-column>\n *    ...\n * ```\n *\n * @fires {CustomEvent} direction-changed - Fired when the `direction` property changes.\n */\nclass GridSortColumn extends GridColumn {\n  static get is() {\n    return 'vaadin-grid-sort-column';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * JS Path of the property in the item used for sorting the data.\n       */\n      path: String,\n\n      /**\n       * How to sort the data.\n       * Possible values are `asc` to use an ascending algorithm, `desc` to sort the data in\n       * descending direction, or `null` for not sorting the data.\n       * @type {GridSorterDirection | undefined}\n       */\n      direction: {\n        type: String,\n        notify: true,\n      },\n    };\n  }\n\n  static get observers() {\n    return ['_onHeaderRendererOrBindingChanged(_headerRenderer, _headerCell, path, header, direction)'];\n  }\n\n  constructor() {\n    super();\n\n    this.__boundOnDirectionChanged = this.__onDirectionChanged.bind(this);\n  }\n\n  /**\n   * Renders the grid sorter to the header cell.\n   *\n   * @override\n   */\n  _defaultHeaderRenderer(root, _column) {\n    let sorter = root.firstElementChild;\n    if (!sorter) {\n      sorter = document.createElement('vaadin-grid-sorter');\n      sorter.addEventListener('direction-changed', this.__boundOnDirectionChanged);\n      root.appendChild(sorter);\n    }\n\n    sorter.path = this.path;\n    sorter.__rendererDirection = this.direction;\n    sorter.direction = this.direction;\n    sorter.textContent = this.__getHeader(this.header, this.path);\n  }\n\n  /**\n   * The sort column doesn't allow to use a custom header renderer\n   * to override the header cell content.\n   * It always renders the grid sorter to the header cell.\n   *\n   * @override\n   */\n  _computeHeaderRenderer() {\n    return this._defaultHeaderRenderer;\n  }\n\n  /**\n   * Updates the sorting direction once the grid sorter's direction is changed.\n   * The listener handles only user-fired events.\n   *\n   * @private\n   */\n  __onDirectionChanged(e) {\n    // Skip if the direction is changed by the renderer.\n    if (e.detail.value === e.target.__rendererDirection) {\n      return;\n    }\n\n    this.direction = e.detail.value;\n  }\n\n  /** @private */\n  __getHeader(header, path) {\n    if (header) {\n      return header;\n    }\n\n    if (path) {\n      return this._generateHeader(path);\n    }\n  }\n}\n\ncustomElements.define(GridSortColumn.is, GridSortColumn);\n\nexport { GridSortColumn };\n","import './theme/lumo/vaadin-grid-column.js';\n\nexport * from './src/vaadin-grid-column.js';\n","import '../../src/vaadin-grid-column.js';\n","import './theme/lumo/vaadin-vertical-layout.js';\nexport * from './src/vaadin-vertical-layout.js';\n","import './vaadin-vertical-layout-styles.js';\nimport '../../src/vaadin-vertical-layout.js';\n","import '@vaadin/vaadin-lumo-styles/spacing.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst verticalLayout = css`\n  :host([theme~='margin']) {\n    margin: var(--lumo-space-m);\n  }\n\n  :host([theme~='padding']) {\n    padding: var(--lumo-space-m);\n  }\n\n  :host([theme~='spacing-xs']) {\n    gap: var(--lumo-space-xs);\n  }\n\n  :host([theme~='spacing-s']) {\n    gap: var(--lumo-space-s);\n  }\n\n  :host([theme~='spacing']) {\n    gap: var(--lumo-space-m);\n  }\n\n  :host([theme~='spacing-l']) {\n    gap: var(--lumo-space-l);\n  }\n\n  :host([theme~='spacing-xl']) {\n    gap: var(--lumo-space-xl);\n  }\n`;\n\nregisterStyles('vaadin-vertical-layout', verticalLayout, { moduleId: 'lumo-vertical-layout' });\n","/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\n/**\n * `<vaadin-vertical-layout>` provides a simple way to vertically align your HTML elements.\n *\n * ```\n * <vaadin-vertical-layout>\n *   <div>Item 1</div>\n *   <div>Item 2</div>\n * </vaadin-vertical-layout>\n * ```\n *\n * ### Built-in Theme Variations\n *\n * `<vaadin-vertical-layout>` supports the following theme variations:\n *\n * Theme variation | Description\n * ---|---\n * `theme=\"margin\"` | Applies the default amount of CSS margin for the host element (specified by the theme)\n * `theme=\"padding\"` | Applies the default amount of CSS padding for the host element (specified by the theme)\n * `theme=\"spacing\"` | Applies the default amount of CSS margin between items (specified by the theme)\n *\n * @extends HTMLElement\n * @mixes ThemableMixin\n * @mixes ElementMixin\n */\nclass VerticalLayout extends ElementMixin(ThemableMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: flex;\n          flex-direction: column;\n          align-items: flex-start;\n          box-sizing: border-box;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        /* Theme variations */\n        :host([theme~='margin']) {\n          margin: 1em;\n        }\n\n        :host([theme~='padding']) {\n          padding: 1em;\n        }\n\n        :host([theme~='spacing']) {\n          gap: 1em;\n        }\n      </style>\n\n      <slot></slot>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-vertical-layout';\n  }\n}\n\ncustomElements.define(VerticalLayout.is, VerticalLayout);\n\nexport { VerticalLayout };\n","import './theme/lumo/vaadin-text-field.js';\n\nexport * from './src/vaadin-text-field.js';\n","/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '@vaadin/input-container/theme/lumo/vaadin-input-container.js';\nimport './vaadin-text-field-styles.js';\nimport '../../src/vaadin-text-field.js';\n","import './vaadin-input-container-styles.js';\nimport '../../src/vaadin-input-container.js';\n","import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles(\n  'vaadin-input-container',\n  css`\n    :host {\n      border-radius: var(--lumo-border-radius-m);\n      background-color: var(--lumo-contrast-10pct);\n      padding: 0 calc(0.375em + var(--lumo-border-radius-m) / 4 - 1px);\n      font-weight: 500;\n      line-height: 1;\n      position: relative;\n      cursor: text;\n      box-sizing: border-box;\n    }\n\n    /* Used for hover and activation effects */\n    :host::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      border-radius: inherit;\n      pointer-events: none;\n      background-color: var(--lumo-contrast-50pct);\n      opacity: 0;\n      transition: transform 0.15s, opacity 0.2s;\n      transform-origin: 100% 0;\n    }\n\n    ::slotted(:not([slot$='fix'])) {\n      cursor: inherit;\n      min-height: var(--lumo-text-field-size, var(--lumo-size-m));\n      padding: 0 0.25em;\n      --_lumo-text-field-overflow-mask-image: linear-gradient(to left, transparent, #000 1.25em);\n      -webkit-mask-image: var(--_lumo-text-field-overflow-mask-image);\n      mask-image: var(--_lumo-text-field-overflow-mask-image);\n    }\n\n    /* Read-only */\n    :host([readonly]) {\n      color: var(--lumo-secondary-text-color);\n      background-color: transparent;\n      cursor: default;\n    }\n\n    :host([readonly])::after {\n      background-color: transparent;\n      opacity: 1;\n      border: 1px dashed var(--lumo-contrast-30pct);\n    }\n\n    /* Disabled */\n    :host([disabled]) {\n      background-color: var(--lumo-contrast-5pct);\n    }\n\n    :host([disabled]) ::slotted(*) {\n      color: var(--lumo-disabled-text-color);\n      -webkit-text-fill-color: var(--lumo-disabled-text-color);\n    }\n\n    /* Invalid */\n    :host([invalid]) {\n      background-color: var(--lumo-error-color-10pct);\n    }\n\n    :host([invalid])::after {\n      background-color: var(--lumo-error-color-50pct);\n    }\n\n    /* Slotted icons */\n    ::slotted(iron-icon),\n    ::slotted(vaadin-icon) {\n      color: var(--lumo-contrast-60pct);\n      width: var(--lumo-icon-size-m);\n      height: var(--lumo-icon-size-m);\n    }\n\n    /* Vaadin icons are based on a 16x16 grid (unlike Lumo and Material icons with 24x24), so they look too big by default */\n    ::slotted(iron-icon[icon^='vaadin:']),\n    ::slotted(vaadin-icon[icon^='vaadin:']) {\n      padding: 0.25em;\n      box-sizing: border-box !important;\n    }\n\n    /* Text align */\n    :host([dir='rtl']) ::slotted(:not([slot$='fix'])) {\n      --_lumo-text-field-overflow-mask-image: linear-gradient(to right, transparent, #000 1.25em);\n    }\n\n    @-moz-document url-prefix() {\n      :host([dir='rtl']) ::slotted(:not([slot$='fix'])) {\n        mask-image: var(--_lumo-text-field-overflow-mask-image);\n      }\n    }\n\n    :host([theme~='align-left']) ::slotted(:not([slot$='fix'])) {\n      text-align: start;\n      --_lumo-text-field-overflow-mask-image: none;\n    }\n\n    :host([theme~='align-center']) ::slotted(:not([slot$='fix'])) {\n      text-align: center;\n      --_lumo-text-field-overflow-mask-image: none;\n    }\n\n    :host([theme~='align-right']) ::slotted(:not([slot$='fix'])) {\n      text-align: end;\n      --_lumo-text-field-overflow-mask-image: none;\n    }\n\n    @-moz-document url-prefix() {\n      /* Firefox is smart enough to align overflowing text to right */\n      :host([theme~='align-right']) ::slotted(:not([slot$='fix'])) {\n        --_lumo-text-field-overflow-mask-image: linear-gradient(to right, transparent 0.25em, #000 1.5em);\n      }\n    }\n\n    @-moz-document url-prefix() {\n      /* Firefox is smart enough to align overflowing text to right */\n      :host([theme~='align-left']) ::slotted(:not([slot$='fix'])) {\n        --_lumo-text-field-overflow-mask-image: linear-gradient(to left, transparent 0.25em, #000 1.5em);\n      }\n    }\n\n    /* RTL specific styles */\n    :host([dir='rtl'])::after {\n      transform-origin: 0% 0;\n    }\n\n    :host([theme~='align-left'][dir='rtl']) ::slotted(:not([slot$='fix'])) {\n      --_lumo-text-field-overflow-mask-image: none;\n    }\n\n    :host([theme~='align-center'][dir='rtl']) ::slotted(:not([slot$='fix'])) {\n      --_lumo-text-field-overflow-mask-image: none;\n    }\n\n    :host([theme~='align-right'][dir='rtl']) ::slotted(:not([slot$='fix'])) {\n      --_lumo-text-field-overflow-mask-image: none;\n    }\n\n    @-moz-document url-prefix() {\n      /* Firefox is smart enough to align overflowing text to right */\n      :host([theme~='align-right'][dir='rtl']) ::slotted(:not([slot$='fix'])) {\n        --_lumo-text-field-overflow-mask-image: linear-gradient(to right, transparent 0.25em, #000 1.5em);\n      }\n    }\n\n    @-moz-document url-prefix() {\n      /* Firefox is smart enough to align overflowing text to right */\n      :host([theme~='align-left'][dir='rtl']) ::slotted(:not([slot$='fix'])) {\n        --_lumo-text-field-overflow-mask-image: linear-gradient(to left, transparent 0.25em, #000 1.5em);\n      }\n    }\n  `,\n  { moduleId: 'lumo-input-container' },\n);\n","/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, PolymerElement } from '@polymer/polymer';\nimport { DirMixin } from '@vaadin/component-base/src/dir-mixin.js';\nimport { css } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nexport class InputContainer extends ThemableMixin(DirMixin(PolymerElement)) {\n  static get is() {\n    return 'vaadin-input-container';\n  }\n\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: flex;\n          align-items: center;\n          flex: 0 1 auto;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        /* Reset the native input styles */\n        ::slotted(input) {\n          -webkit-appearance: none;\n          -moz-appearance: none;\n          flex: auto;\n          white-space: nowrap;\n          overflow: hidden;\n          width: 100%;\n          height: 100%;\n          outline: none;\n          margin: 0;\n          padding: 0;\n          border: 0;\n          border-radius: 0;\n          min-width: 0;\n          font: inherit;\n          line-height: normal;\n          color: inherit;\n          background-color: transparent;\n          /* Disable default invalid style in Firefox */\n          box-shadow: none;\n        }\n\n        ::slotted(*) {\n          flex: none;\n        }\n\n        ::slotted(:is(input, textarea))::placeholder {\n          /* Use ::slotted(input:placeholder-shown) in themes to style the placeholder. */\n          /* because ::slotted(...)::placeholder does not work in Safari. */\n          /* See the workaround at the end of this file. */\n          font: inherit;\n          color: inherit;\n          /* Override default opacity in Firefox */\n          opacity: 1;\n        }\n      </style>\n      <slot name=\"prefix\"></slot>\n      <slot></slot>\n      <slot name=\"suffix\"></slot>\n    `;\n  }\n\n  static get properties() {\n    return {\n      /**\n       * If true, the user cannot interact with this element.\n       */\n      disabled: {\n        type: Boolean,\n        reflectToAttribute: true,\n      },\n\n      /**\n       * Set to true to make this element read-only.\n       */\n      readonly: {\n        type: Boolean,\n        reflectToAttribute: true,\n      },\n\n      /**\n       * Set to true when the element is invalid.\n       */\n      invalid: {\n        type: Boolean,\n        reflectToAttribute: true,\n      },\n    };\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this.addEventListener('pointerdown', (event) => {\n      if (event.target === this) {\n        // Prevent direct clicks to the input container from blurring the input\n        event.preventDefault();\n      }\n    });\n\n    this.addEventListener('click', (event) => {\n      if (event.target === this) {\n        // The vaadin-input-container element was directly clicked,\n        // focus any focusable child element from the default slot\n        this.shadowRoot\n          .querySelector('slot:not([name])')\n          .assignedNodes({ flatten: true })\n          .forEach((node) => node.focus && node.focus());\n      }\n    });\n  }\n}\n\ncustomElements.define(InputContainer.is, InputContainer);\n\nconst placeholderStyleWorkaround = css`\n  /* Needed for Safari, where ::slotted(...)::placeholder does not work */\n  :is(input[slot='input'], textarea[slot='textarea'])::placeholder {\n    font: inherit;\n    color: inherit;\n  }\n`;\n\nconst $tpl = document.createElement('template');\n$tpl.innerHTML = `<style>${placeholderStyleWorkaround.toString()}</style>`;\ndocument.head.appendChild($tpl.content);\n","/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { inputFieldShared } from '@vaadin/vaadin-lumo-styles/mixins/input-field-shared.js';\nimport { registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles('vaadin-text-field', inputFieldShared, {\n  moduleId: 'lumo-text-field-styles',\n});\n","/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '../color.js';\nimport '../font-icons.js';\nimport '../sizing.js';\nimport '../spacing.js';\nimport '../style.js';\nimport '../typography.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { fieldButton } from './field-button.js';\nimport { helper } from './helper.js';\nimport { requiredField } from './required-field.js';\n\nconst inputField = css`\n  :host {\n    --lumo-text-field-size: var(--lumo-size-m);\n    color: var(--lumo-body-text-color);\n    font-size: var(--lumo-font-size-m);\n    font-family: var(--lumo-font-family);\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-tap-highlight-color: transparent;\n    padding: var(--lumo-space-xs) 0;\n  }\n\n  :host::before {\n    height: var(--lumo-text-field-size);\n    box-sizing: border-box;\n    display: inline-flex;\n    align-items: center;\n  }\n\n  :host([focused]:not([readonly])) [part='label'] {\n    color: var(--lumo-primary-text-color);\n  }\n\n  :host([focused]) [part='input-field'] ::slotted(:is(input, textarea)) {\n    -webkit-mask-image: none;\n    mask-image: none;\n  }\n\n  ::slotted(:is(input, textarea):placeholder-shown) {\n    color: var(--lumo-secondary-text-color);\n  }\n\n  /* Hover */\n  :host(:hover:not([readonly]):not([focused])) [part='label'] {\n    color: var(--lumo-body-text-color);\n  }\n\n  :host(:hover:not([readonly]):not([focused])) [part='input-field']::after {\n    opacity: 0.1;\n  }\n\n  /* Touch device adjustment */\n  @media (pointer: coarse) {\n    :host(:hover:not([readonly]):not([focused])) [part='label'] {\n      color: var(--lumo-secondary-text-color);\n    }\n\n    :host(:hover:not([readonly]):not([focused])) [part='input-field']::after {\n      opacity: 0;\n    }\n\n    :host(:active:not([readonly]):not([focused])) [part='input-field']::after {\n      opacity: 0.2;\n    }\n  }\n\n  /* Trigger when not focusing using the keyboard */\n  :host([focused]:not([focus-ring]):not([readonly])) [part='input-field']::after {\n    transform: scaleX(0);\n    transition-duration: 0.15s, 1s;\n  }\n\n  /* Focus-ring */\n  :host([focus-ring]) [part='input-field'] {\n    box-shadow: 0 0 0 2px var(--lumo-primary-color-50pct);\n  }\n\n  /* Read-only and disabled */\n  :host(:is([readonly], [disabled])) ::slotted(:is(input, textarea):placeholder-shown) {\n    opacity: 0;\n  }\n\n  /* Disabled style */\n  :host([disabled]) {\n    pointer-events: none;\n  }\n\n  :host([disabled]) [part='label'],\n  :host([disabled]) [part='input-field'] ::slotted(*) {\n    color: var(--lumo-disabled-text-color);\n    -webkit-text-fill-color: var(--lumo-disabled-text-color);\n  }\n\n  /* Invalid style */\n  :host([invalid][focus-ring]) [part='input-field'] {\n    box-shadow: 0 0 0 2px var(--lumo-error-color-50pct);\n  }\n\n  :host([input-prevented]) [part='input-field'] {\n    animation: shake 0.15s infinite;\n  }\n\n  @keyframes shake {\n    25% {\n      transform: translateX(4px);\n    }\n    75% {\n      transform: translateX(-4px);\n    }\n  }\n\n  /* Small theme */\n  :host([theme~='small']) {\n    font-size: var(--lumo-font-size-s);\n    --lumo-text-field-size: var(--lumo-size-s);\n  }\n\n  :host([theme~='small']) [part='label'] {\n    font-size: var(--lumo-font-size-xs);\n  }\n\n  :host([theme~='small']) [part='error-message'] {\n    font-size: var(--lumo-font-size-xxs);\n  }\n\n  /* Slotted content */\n  [part='input-field'] ::slotted(:not(iron-icon):not(vaadin-icon):not(input):not(textarea)) {\n    color: var(--lumo-secondary-text-color);\n    font-weight: 400;\n  }\n\n  [part='clear-button']::before {\n    content: var(--lumo-icons-cross);\n  }\n`;\n\nconst inputFieldShared = [requiredField, fieldButton, helper, inputField];\n\nregisterStyles('', inputFieldShared, {\n  moduleId: 'lumo-input-field-shared-styles',\n});\n\nexport { inputField, inputFieldShared };\n","/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '../color.js';\nimport '../font-icons.js';\nimport '../sizing.js';\nimport '../style.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst fieldButton = css`\n  [part$='button'] {\n    flex: none;\n    width: 1em;\n    height: 1em;\n    line-height: 1;\n    font-size: var(--lumo-icon-size-m);\n    text-align: center;\n    color: var(--lumo-contrast-60pct);\n    transition: 0.2s color;\n    cursor: var(--lumo-clickable-cursor);\n  }\n\n  [part$='button']:hover {\n    color: var(--lumo-contrast-90pct);\n  }\n\n  :host([disabled]) [part$='button'],\n  :host([readonly]) [part$='button'] {\n    color: var(--lumo-contrast-20pct);\n    cursor: default;\n  }\n\n  [part$='button']::before {\n    font-family: 'lumo-icons';\n    display: block;\n  }\n`;\nregisterStyles('', fieldButton, { moduleId: 'lumo-field-button' });\n\nexport { fieldButton };\n","/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '../color.js';\nimport '../sizing.js';\nimport '../style.js';\nimport '../typography.js';\nimport { css } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nexport const helper = css`\n  :host([has-helper]) [part='helper-text']::before {\n    content: '';\n    display: block;\n    height: 0.4em;\n  }\n\n  [part='helper-text'] {\n    display: block;\n    color: var(--lumo-secondary-text-color);\n    font-size: var(--lumo-font-size-xs);\n    line-height: var(--lumo-line-height-xs);\n    margin-left: calc(var(--lumo-border-radius-m) / 4);\n    transition: color 0.2s;\n  }\n\n  :host(:hover:not([readonly])) [part='helper-text'] {\n    color: var(--lumo-body-text-color);\n  }\n\n  :host([disabled]) [part='helper-text'] {\n    color: var(--lumo-disabled-text-color);\n    -webkit-text-fill-color: var(--lumo-disabled-text-color);\n  }\n\n  :host([has-helper][theme~='helper-above-field']) [part='helper-text']::before {\n    display: none;\n  }\n\n  :host([has-helper][theme~='helper-above-field']) [part='helper-text']::after {\n    content: '';\n    display: block;\n    height: 0.4em;\n  }\n\n  :host([has-helper][theme~='helper-above-field']) [part='label'] {\n    order: 0;\n    padding-bottom: 0.4em;\n  }\n\n  :host([has-helper][theme~='helper-above-field']) [part='helper-text'] {\n    order: 1;\n  }\n\n  :host([has-helper][theme~='helper-above-field']) [part='label'] + * {\n    order: 2;\n  }\n\n  :host([has-helper][theme~='helper-above-field']) [part='error-message'] {\n    order: 3;\n  }\n`;\n","/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '../color.js';\nimport '../spacing.js';\nimport '../style.js';\nimport '../typography.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst requiredField = css`\n  [part='label'] {\n    align-self: flex-start;\n    color: var(--lumo-secondary-text-color);\n    font-weight: 500;\n    font-size: var(--lumo-font-size-s);\n    margin-left: calc(var(--lumo-border-radius-m) / 4);\n    transition: color 0.2s;\n    line-height: 1;\n    padding-right: 1em;\n    padding-bottom: 0.5em;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    position: relative;\n    max-width: 100%;\n    box-sizing: border-box;\n  }\n\n  :host([has-label])::before {\n    margin-top: calc(var(--lumo-font-size-s) * 1.5);\n  }\n\n  :host([has-label][theme~='small'])::before {\n    margin-top: calc(var(--lumo-font-size-xs) * 1.5);\n  }\n\n  :host([has-label]) {\n    padding-top: var(--lumo-space-m);\n  }\n\n  [part='required-indicator']::after {\n    content: var(--lumo-required-field-indicator, '•');\n    transition: opacity 0.2s;\n    opacity: 0;\n    color: var(--lumo-required-field-indicator-color, var(--lumo-primary-text-color));\n    position: absolute;\n    right: 0;\n    width: 1em;\n    text-align: center;\n  }\n\n  :host([required]:not([has-value])) [part='required-indicator']::after {\n    opacity: 1;\n  }\n\n  :host([invalid]) [part='required-indicator']::after {\n    color: var(--lumo-required-field-indicator-color, var(--lumo-error-text-color));\n  }\n\n  [part='error-message'] {\n    margin-left: calc(var(--lumo-border-radius-m) / 4);\n    font-size: var(--lumo-font-size-xs);\n    line-height: var(--lumo-line-height-xs);\n    color: var(--lumo-error-text-color);\n    will-change: max-height;\n    transition: 0.4s max-height;\n    max-height: 5em;\n  }\n\n  :host([has-error-message]) [part='error-message']::before,\n  :host([has-error-message]) [part='error-message']::after {\n    content: '';\n    display: block;\n    height: 0.4em;\n  }\n\n  :host(:not([invalid])) [part='error-message'] {\n    max-height: 0;\n    overflow: hidden;\n  }\n\n  /* RTL specific styles */\n\n  :host([dir='rtl']) [part='label'] {\n    margin-left: 0;\n    margin-right: calc(var(--lumo-border-radius-m) / 4);\n  }\n\n  :host([dir='rtl']) [part='label'] {\n    padding-left: 1em;\n    padding-right: 0;\n  }\n\n  :host([dir='rtl']) [part='required-indicator']::after {\n    right: auto;\n    left: 0;\n  }\n\n  :host([dir='rtl']) [part='error-message'] {\n    margin-left: 0;\n    margin-right: calc(var(--lumo-border-radius-m) / 4);\n  }\n`;\n\nregisterStyles('', requiredField, { moduleId: 'lumo-required-field' });\n\nexport { requiredField };\n","/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '@vaadin/input-container/src/vaadin-input-container.js';\nimport { html, PolymerElement } from '@polymer/polymer';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { InputController } from '@vaadin/field-base/src/input-controller.js';\nimport { InputFieldMixin } from '@vaadin/field-base/src/input-field-mixin.js';\nimport { LabelledInputController } from '@vaadin/field-base/src/labelled-input-controller.js';\nimport { PatternMixin } from '@vaadin/field-base/src/pattern-mixin.js';\nimport { inputFieldShared } from '@vaadin/field-base/src/styles/input-field-shared-styles.js';\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles('vaadin-text-field', inputFieldShared, { moduleId: 'vaadin-text-field-styles' });\n\n/**\n * `<vaadin-text-field>` is a web component that allows the user to input and edit text.\n *\n * ```html\n * <vaadin-text-field label=\"First Name\"></vaadin-text-field>\n * ```\n *\n * ### Prefixes and suffixes\n *\n * These are child elements of a `<vaadin-text-field>` that are displayed\n * inline with the input, before or after.\n * In order for an element to be considered as a prefix, it must have the slot\n * attribute set to `prefix` (and similarly for `suffix`).\n *\n * ```html\n * <vaadin-text-field label=\"Email address\">\n *   <div slot=\"prefix\">Sent to:</div>\n *   <div slot=\"suffix\">@vaadin.com</div>\n * </vaadin-text-field>\n * ```\n *\n * ### Styling\n *\n * The following custom properties are available for styling:\n *\n * Custom property                | Description                | Default\n * -------------------------------|----------------------------|---------\n * `--vaadin-field-default-width` | Default width of the field | `12em`\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name            | Description\n * ---------------------|----------------\n * `label`              | The label element\n * `input-field`        | The element that wraps prefix, value and suffix\n * `clear-button`       | The clear button\n * `error-message`      | The error message element\n * `helper-text`        | The helper text element wrapper\n * `required-indicator` | The `required` state indicator element\n *\n * The following state attributes are available for styling:\n *\n * Attribute           | Description | Part name\n * --------------------|-------------|------------\n * `disabled`          | Set to a disabled text field | :host\n * `has-value`         | Set when the element has a value | :host\n * `has-label`         | Set when the element has a label | :host\n * `has-helper`        | Set when the element has helper text or slot | :host\n * `has-error-message` | Set when the element has an error message | :host\n * `invalid`           | Set when the element is invalid | :host\n * `input-prevented`   | Temporarily set when invalid input is prevented | :host\n * `focused`           | Set when the element is focused | :host\n * `focus-ring`        | Set when the element is keyboard focused | :host\n * `readonly`          | Set to a readonly text field | :host\n *\n * See [Styling Components](https://vaadin.com/docs/latest/ds/customization/styling-components) documentation.\n *\n * @fires {Event} input - Fired when the value is changed by the user: on every typing keystroke, and the value is cleared using the clear button.\n * @fires {Event} change - Fired when the user commits a value change.\n * @fires {CustomEvent} invalid-changed - Fired when the `invalid` property changes.\n * @fires {CustomEvent} value-changed - Fired when the `value` property changes.\n *\n * @extends HTMLElement\n * @mixes ElementMixin\n * @mixes ThemableMixin\n * @mixes PatternMixin\n * @mixes InputFieldMixin\n */\nexport class TextField extends PatternMixin(InputFieldMixin(ThemableMixin(ElementMixin(PolymerElement)))) {\n  static get is() {\n    return 'vaadin-text-field';\n  }\n\n  static get template() {\n    return html`\n      <style>\n        [part='input-field'] {\n          flex-grow: 0;\n        }\n      </style>\n\n      <div class=\"vaadin-field-container\">\n        <div part=\"label\">\n          <slot name=\"label\"></slot>\n          <span part=\"required-indicator\" aria-hidden=\"true\" on-click=\"focus\"></span>\n        </div>\n\n        <vaadin-input-container\n          part=\"input-field\"\n          readonly=\"[[readonly]]\"\n          disabled=\"[[disabled]]\"\n          invalid=\"[[invalid]]\"\n          theme$=\"[[theme]]\"\n        >\n          <slot name=\"prefix\" slot=\"prefix\"></slot>\n          <slot name=\"input\"></slot>\n          <slot name=\"suffix\" slot=\"suffix\"></slot>\n          <div id=\"clearButton\" part=\"clear-button\" slot=\"suffix\" aria-hidden=\"true\"></div>\n        </vaadin-input-container>\n\n        <div part=\"helper-text\">\n          <slot name=\"helper\"></slot>\n        </div>\n\n        <div part=\"error-message\">\n          <slot name=\"error-message\"></slot>\n        </div>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      /**\n       * Maximum number of characters (in Unicode code points) that the user can enter.\n       */\n      maxlength: {\n        type: Number,\n      },\n\n      /**\n       * Minimum number of characters (in Unicode code points) that the user can enter.\n       */\n      minlength: {\n        type: Number,\n      },\n    };\n  }\n\n  static get delegateAttrs() {\n    return [...super.delegateAttrs, 'maxlength', 'minlength'];\n  }\n\n  static get constraints() {\n    return [...super.constraints, 'maxlength', 'minlength'];\n  }\n\n  constructor() {\n    super();\n    this._setType('text');\n  }\n\n  /** @protected */\n  get clearElement() {\n    return this.$.clearButton;\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this.addController(\n      new InputController(this, (input) => {\n        this._setInputElement(input);\n        this._setFocusElement(input);\n        this.stateTarget = input;\n        this.ariaTarget = input;\n      }),\n    );\n    this.addController(new LabelledInputController(this.inputElement, this._labelController));\n  }\n}\n\ncustomElements.define(TextField.is, TextField);\n","/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { InputControlMixin } from './input-control-mixin.js';\n\n/**\n * A mixin to provide logic for vaadin-text-field and related components.\n *\n * @polymerMixin\n * @mixes InputControlMixin\n */\nexport const InputFieldMixin = (superclass) =>\n  class InputFieldMixinClass extends InputControlMixin(superclass) {\n    static get properties() {\n      return {\n        /**\n         * Whether the value of the control can be automatically completed by the browser.\n         * List of available options at:\n         * https://developer.mozilla.org/en/docs/Web/HTML/Element/input#attr-autocomplete\n         */\n        autocomplete: {\n          type: String,\n        },\n\n        /**\n         * This is a property supported by Safari that is used to control whether\n         * autocorrection should be enabled when the user is entering/editing the text.\n         * Possible values are:\n         * on: Enable autocorrection.\n         * off: Disable autocorrection.\n         */\n        autocorrect: {\n          type: String,\n        },\n\n        /**\n         * This is a property supported by Safari and Chrome that is used to control whether\n         * autocapitalization should be enabled when the user is entering/editing the text.\n         * Possible values are:\n         * characters: Characters capitalization.\n         * words: Words capitalization.\n         * sentences: Sentences capitalization.\n         * none: No capitalization.\n         */\n        autocapitalize: {\n          type: String,\n        },\n\n        /**\n         * A pattern matched against individual characters the user inputs.\n         * When set, the field will prevent:\n         * - `keyDown` events if the entered key doesn't match `/^_enabledCharPattern$/`\n         * - `paste` events if the pasted text doesn't match `/^_enabledCharPattern*$/`\n         * - `drop` events if the dropped text doesn't match `/^_enabledCharPattern*$/`\n         *\n         * For example, to enable entering only numbers and minus signs,\n         * `_enabledCharPattern = \"[\\\\d-]\"`\n         * @protected\n         */\n        _enabledCharPattern: {\n          type: String,\n          observer: '_enabledCharPatternChanged',\n        },\n      };\n    }\n\n    static get delegateAttrs() {\n      return [...super.delegateAttrs, 'autocapitalize', 'autocomplete', 'autocorrect'];\n    }\n\n    constructor() {\n      super();\n\n      this._boundOnPaste = this._onPaste.bind(this);\n      this._boundOnDrop = this._onDrop.bind(this);\n      this._boundOnBeforeInput = this._onBeforeInput.bind(this);\n    }\n\n    /**\n     * @param {HTMLElement} input\n     * @protected\n     * @override\n     */\n    _inputElementChanged(input) {\n      super._inputElementChanged(input);\n\n      if (input) {\n        // Discard value set on the custom slotted input.\n        if (input.value && input.value !== this.value) {\n          console.warn(`Please define value on the <${this.localName}> component!`);\n          input.value = '';\n        }\n\n        if (this.value) {\n          input.value = this.value;\n        }\n      }\n    }\n\n    // Workaround for https://github.com/Polymer/polymer/issues/5259\n    get __data() {\n      return this.__dataValue || {};\n    }\n\n    set __data(value) {\n      this.__dataValue = value;\n    }\n\n    /**\n     * Override an event listener from `DelegateFocusMixin`.\n     * @param {FocusEvent} event\n     * @protected\n     * @override\n     */\n    _onBlur(event) {\n      super._onBlur(event);\n\n      this.validate();\n    }\n\n    /**\n     * Override an event listener from `InputMixin`\n     * to mark as valid after user started typing.\n     * @param {Event} event\n     * @protected\n     * @override\n     */\n    _onInput(event) {\n      super._onInput(event);\n\n      if (this.invalid) {\n        this.validate();\n      }\n    }\n\n    /**\n     * Override a method from `InputMixin` to validate the field\n     * when a new value is set programmatically.\n     * @param {string} value\n     * @protected\n     * @override\n     */\n    _forwardInputValue(value) {\n      super._forwardInputValue(value);\n\n      if (this.invalid) {\n        this.validate();\n      }\n    }\n\n    /**\n     * Override a method from `InputMixin`.\n     * @param {!HTMLElement} input\n     * @protected\n     * @override\n     */\n    _addInputListeners(input) {\n      super._addInputListeners(input);\n\n      input.addEventListener('paste', this._boundOnPaste);\n      input.addEventListener('drop', this._boundOnDrop);\n      input.addEventListener('beforeinput', this._boundOnBeforeInput);\n    }\n\n    /**\n     * Override a method from `InputMixin`.\n     * @param {!HTMLElement} input\n     * @protected\n     * @override\n     */\n    _removeInputListeners(input) {\n      super._removeInputListeners(input);\n\n      input.removeEventListener('paste', this._boundOnPaste);\n      input.removeEventListener('drop', this._boundOnDrop);\n      input.removeEventListener('beforeinput', this._boundOnBeforeInput);\n    }\n\n    /**\n     * Override an event listener from `ClearButtonMixin`\n     * to avoid adding a separate listener.\n     * @param {!KeyboardEvent} event\n     * @protected\n     * @override\n     */\n    _onKeyDown(event) {\n      if (this._enabledCharPattern && !this.__shouldAcceptKey(event)) {\n        event.preventDefault();\n      }\n\n      super._onKeyDown(event);\n    }\n\n    /** @private */\n    __shouldAcceptKey(event) {\n      return (\n        event.metaKey ||\n        event.ctrlKey ||\n        !event.key || // allow typing anything if event.key is not supported\n        event.key.length !== 1 || // allow \"Backspace\", \"ArrowLeft\" etc.\n        this.__enabledCharRegExp.test(event.key)\n      );\n    }\n\n    /** @private */\n    _onPaste(e) {\n      if (this._enabledCharPattern) {\n        const pastedText = (e.clipboardData || window.clipboardData).getData('text');\n        if (!this.__enabledTextRegExp.test(pastedText)) {\n          e.preventDefault();\n        }\n      }\n    }\n\n    /** @private */\n    _onDrop(e) {\n      if (this._enabledCharPattern) {\n        const draggedText = e.dataTransfer.getData('text');\n        if (!this.__enabledTextRegExp.test(draggedText)) {\n          e.preventDefault();\n        }\n      }\n    }\n\n    /** @private */\n    _onBeforeInput(e) {\n      // The `beforeinput` event covers all the cases for `_enabledCharPattern`: keyboard, pasting and dropping,\n      // but it is still experimental technology so we can't rely on it. It's used here just as an additional check,\n      // because it seems to be the only way to detect and prevent specific keys on mobile devices.\n      // See https://github.com/vaadin/vaadin-text-field/issues/429\n      if (this._enabledCharPattern && e.data && !this.__enabledTextRegExp.test(e.data)) {\n        e.preventDefault();\n      }\n    }\n\n    /** @private */\n    _enabledCharPatternChanged(charPattern) {\n      if (charPattern) {\n        this.__enabledCharRegExp = new RegExp('^' + charPattern + '$');\n        this.__enabledTextRegExp = new RegExp('^' + charPattern + '*$');\n      }\n    }\n  };\n","/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { KeyboardMixin } from '@vaadin/component-base/src/keyboard-mixin.js';\nimport { DelegateFocusMixin } from './delegate-focus-mixin.js';\nimport { FieldMixin } from './field-mixin.js';\nimport { InputConstraintsMixin } from './input-constraints-mixin.js';\n\n/**\n * A mixin to provide shared logic for the editable form input controls.\n *\n * @polymerMixin\n * @mixes DelegateFocusMixin\n * @mixes FieldMixin\n * @mixes InputConstraintsMixin\n * @mixes KeyboardMixin\n */\nexport const InputControlMixin = (superclass) =>\n  class InputControlMixinClass extends DelegateFocusMixin(\n    InputConstraintsMixin(FieldMixin(KeyboardMixin(superclass))),\n  ) {\n    static get properties() {\n      return {\n        /**\n         * If true, the input text gets fully selected when the field is focused using click or touch / tap.\n         */\n        autoselect: {\n          type: Boolean,\n          value: false,\n        },\n\n        /**\n         * Set to true to display the clear icon which clears the input.\n         * @attr {boolean} clear-button-visible\n         */\n        clearButtonVisible: {\n          type: Boolean,\n          reflectToAttribute: true,\n          value: false,\n        },\n\n        /**\n         * The name of this field.\n         */\n        name: {\n          type: String,\n          reflectToAttribute: true,\n        },\n\n        /**\n         * A hint to the user of what can be entered in the field.\n         */\n        placeholder: {\n          type: String,\n          reflectToAttribute: true,\n        },\n\n        /**\n         * When present, it specifies that the field is read-only.\n         */\n        readonly: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n        },\n\n        /**\n         * The text usually displayed in a tooltip popup when the mouse is over the field.\n         */\n        title: {\n          type: String,\n          reflectToAttribute: true,\n        },\n      };\n    }\n\n    static get delegateAttrs() {\n      return [...super.delegateAttrs, 'name', 'type', 'placeholder', 'readonly', 'invalid', 'title'];\n    }\n\n    /**\n     * Any element extending this mixin is required to implement this getter.\n     * It returns the reference to the clear button element.\n     * @protected\n     * @return {Element | null | undefined}\n     */\n    get clearElement() {\n      console.warn(`Please implement the 'clearElement' property in <${this.localName}>`);\n      return null;\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      if (this.clearElement) {\n        this.clearElement.addEventListener('click', (e) => this._onClearButtonClick(e));\n      }\n    }\n\n    /**\n     * @param {Event} event\n     * @protected\n     */\n    _onClearButtonClick(event) {\n      event.preventDefault();\n      this.inputElement.focus();\n      this.__clear();\n    }\n\n    /**\n     * Override an event listener from `DelegateFocusMixin`.\n     * @param {FocusEvent} event\n     * @protected\n     * @override\n     */\n    _onFocus(event) {\n      super._onFocus(event);\n\n      if (this.autoselect && this.inputElement) {\n        this.inputElement.select();\n      }\n    }\n\n    /**\n     * Override an event listener inherited from `KeydownMixin` to clear on Esc.\n     * Components that extend this mixin can prevent this behavior by overriding\n     * this method without calling `super._onKeyDown` to provide custom logic.\n     * @param {KeyboardEvent} event\n     * @protected\n     * @override\n     */\n    _onKeyDown(event) {\n      super._onKeyDown(event);\n\n      if (event.key === 'Escape' && this.clearButtonVisible && !!this.value) {\n        event.stopPropagation();\n        this.__clear();\n      }\n    }\n\n    /**\n     * Override an event listener inherited from `InputMixin`\n     * to capture native `change` event and make sure that\n     * a new one is dispatched after validation runs.\n     * @param {Event} event\n     * @protected\n     * @override\n     */\n    _onChange(event) {\n      event.stopPropagation();\n\n      this.validate();\n\n      this.dispatchEvent(\n        new CustomEvent('change', {\n          detail: {\n            sourceEvent: event,\n          },\n          bubbles: event.bubbles,\n          cancelable: event.cancelable,\n        }),\n      );\n    }\n\n    /** @private */\n    __clear() {\n      this.clear();\n      this.inputElement.dispatchEvent(new Event('input', { bubbles: true, composed: true }));\n      this.inputElement.dispatchEvent(new Event('change', { bubbles: true }));\n    }\n\n    /**\n     * Fired when the user commits a value change.\n     *\n     * @event change\n     */\n\n    /**\n     * Fired when the value is changed by the user: on every typing keystroke,\n     * and the value is cleared using the clear button.\n     *\n     * @event input\n     */\n  };\n","/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { ErrorController } from './error-controller.js';\nimport { FieldAriaController } from './field-aria-controller.js';\nimport { HelperController } from './helper-controller.js';\nimport { LabelMixin } from './label-mixin.js';\nimport { ValidateMixin } from './validate-mixin.js';\n\n/**\n * A mixin to provide common field logic: label, error message and helper text.\n *\n * @polymerMixin\n * @mixes ControllerMixin\n * @mixes LabelMixin\n * @mixes ValidateMixin\n */\nexport const FieldMixin = (superclass) =>\n  class FieldMixinClass extends ValidateMixin(LabelMixin(ControllerMixin(superclass))) {\n    static get properties() {\n      return {\n        /**\n         * A target element to which ARIA attributes are set.\n         * @protected\n         */\n        ariaTarget: {\n          type: Object,\n          observer: '_ariaTargetChanged',\n        },\n\n        /**\n         * Error to show when the field is invalid.\n         *\n         * @attr {string} error-message\n         */\n        errorMessage: {\n          type: String,\n          observer: '_errorMessageChanged',\n        },\n\n        /**\n         * String used for the helper text.\n         * @attr {string} helper-text\n         */\n        helperText: {\n          type: String,\n          observer: '_helperTextChanged',\n        },\n\n        /** @protected */\n        _helperId: String,\n      };\n    }\n\n    static get observers() {\n      return ['_invalidChanged(invalid)', '_requiredChanged(required)'];\n    }\n\n    /** @protected */\n    get _errorId() {\n      return this._errorController.errorId;\n    }\n\n    /**\n     * @protected\n     * @return {HTMLElement}\n     */\n    get _errorNode() {\n      return this._errorController.node;\n    }\n\n    /** @protected */\n    get _helperId() {\n      return this._helperController.helperId;\n    }\n\n    /**\n     * @protected\n     * @return {HTMLElement}\n     */\n    get _helperNode() {\n      return this._helperController.node;\n    }\n\n    constructor() {\n      super();\n\n      this._fieldAriaController = new FieldAriaController(this);\n      this._helperController = new HelperController(this);\n      this._errorController = new ErrorController(this);\n\n      this.addController(this._fieldAriaController);\n      this.addController(this._helperController);\n      this.addController(this._errorController);\n\n      this._labelController.addEventListener('label-changed', (event) => {\n        const { hasLabel, node } = event.detail;\n        this.__labelChanged(hasLabel, node);\n      });\n\n      this._helperController.addEventListener('helper-changed', (event) => {\n        const { hasHelper, node } = event.detail;\n        this.__helperChanged(hasHelper, node);\n      });\n    }\n\n    /** @private */\n    __helperChanged(hasHelper, helperNode) {\n      if (hasHelper) {\n        this._fieldAriaController.setHelperId(helperNode.id);\n      } else {\n        this._fieldAriaController.setHelperId(null);\n      }\n    }\n\n    /** @private */\n    __labelChanged(hasLabel, labelNode) {\n      // Label ID should be only added when the label content is present.\n      // Otherwise, it may conflict with an `aria-label` attribute possibly added by the user.\n      if (hasLabel) {\n        this._fieldAriaController.setLabelId(labelNode.id);\n      } else {\n        this._fieldAriaController.setLabelId(null);\n      }\n    }\n\n    /**\n     * @param {string | null | undefined} errorMessage\n     * @protected\n     */\n    _errorMessageChanged(errorMessage) {\n      this._errorController.setErrorMessage(errorMessage);\n    }\n\n    /**\n     * @param {string} helperText\n     * @protected\n     */\n    _helperTextChanged(helperText) {\n      this._helperController.setHelperText(helperText);\n    }\n\n    /**\n     * @param {HTMLElement | null | undefined} target\n     * @protected\n     */\n    _ariaTargetChanged(target) {\n      if (target) {\n        this._fieldAriaController.setTarget(target);\n      }\n    }\n\n    /**\n     * @param {boolean} required\n     * @protected\n     */\n    _requiredChanged(required) {\n      this._fieldAriaController.setRequired(required);\n    }\n\n    /**\n     * @param {boolean} required\n     * @protected\n     */\n    _invalidChanged(invalid) {\n      this._errorController.setInvalid(invalid);\n\n      // This timeout is needed to prevent NVDA from announcing the error message twice:\n      // 1. Once adding the `[role=alert]` attribute by the `_updateErrorMessage` method (OK).\n      // 2. Once linking the error ID with the ARIA target here (unwanted).\n      // Related issue: https://github.com/vaadin/web-components/issues/3061.\n      setTimeout(() => {\n        // Error message ID needs to be dynamically added / removed based on the validity\n        // Otherwise assistive technologies would announce the error, even if we hide it.\n        if (invalid) {\n          this._fieldAriaController.setErrorId(this._errorController.errorId);\n        } else {\n          this._fieldAriaController.setErrorId(null);\n        }\n      });\n    }\n  };\n","/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { SlotController } from '@vaadin/component-base/src/slot-controller.js';\n\n/**\n * A controller that manages the error message node content.\n */\nexport class ErrorController extends SlotController {\n  constructor(host) {\n    super(\n      host,\n      'error-message',\n      () => document.createElement('div'),\n      (_host, node) => {\n        this.__updateErrorId(node);\n\n        this.__updateHasError();\n      },\n    );\n  }\n\n  /**\n   * ID attribute value set on the error message element.\n   *\n   * @return {string}\n   */\n  get errorId() {\n    return this.node && this.node.id;\n  }\n\n  /**\n   * Set the error message element text content.\n   *\n   * @param {string} errorMessage\n   */\n  setErrorMessage(errorMessage) {\n    this.errorMessage = errorMessage;\n\n    this.__updateHasError();\n  }\n\n  /**\n   * Set invalid state for detecting whether to show error message.\n   *\n   * @param {boolean} invalid\n   */\n  setInvalid(invalid) {\n    this.invalid = invalid;\n\n    this.__updateHasError();\n  }\n\n  /**\n   * Override to initialize the newly added custom label.\n   *\n   * @param {Node} errorNode\n   * @protected\n   * @override\n   */\n  initCustomNode(errorNode) {\n    this.__updateErrorId(errorNode);\n\n    // Save the custom error message content on the host.\n    if (errorNode.textContent && !this.errorMessage) {\n      this.errorMessage = errorNode.textContent.trim();\n    }\n\n    this.__updateHasError();\n  }\n\n  /**\n   * Override to cleanup label node when it's removed.\n   *\n   * @param {Node} node\n   * @protected\n   * @override\n   */\n  teardownNode(node) {\n    let errorNode = this.getSlotChild();\n\n    // If custom error was removed, restore the default one.\n    if (!errorNode && node !== this.defaultNode) {\n      errorNode = this.attachDefaultNode();\n\n      // Run initializer to update default label and ID.\n      this.initNode(errorNode);\n    }\n\n    this.__updateHasError();\n  }\n\n  /**\n   * @param {string} error\n   * @private\n   */\n  __isNotEmpty(error) {\n    return Boolean(error && error.trim() !== '');\n  }\n\n  /** @private */\n  __updateHasError() {\n    const errorNode = this.node;\n    const hasError = Boolean(this.invalid && this.__isNotEmpty(this.errorMessage));\n\n    // Update both default and custom error message node.\n    if (errorNode) {\n      errorNode.textContent = hasError ? this.errorMessage : '';\n      errorNode.hidden = !hasError;\n\n      // Role alert will make the error message announce immediately\n      // as the field becomes invalid\n      if (hasError) {\n        errorNode.setAttribute('role', 'alert');\n      } else {\n        errorNode.removeAttribute('role');\n      }\n    }\n\n    this.host.toggleAttribute('has-error-message', hasError);\n  }\n\n  /**\n   * @param {HTMLElement} errorNode\n   * @private\n   */\n  __updateErrorId(errorNode) {\n    if (!errorNode.id) {\n      errorNode.id = this.defaultId;\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { addValueToAttribute, removeValueFromAttribute } from './utils.js';\n\n/**\n * A controller for managing ARIA attributes for a field element:\n * either the component itself or slotted `<input>` element.\n */\nexport class FieldAriaController {\n  constructor(host) {\n    this.host = host;\n    this.__required = false;\n  }\n\n  /**\n   * Sets a target element to which ARIA attributes are added.\n   *\n   * @param {HTMLElement} target\n   */\n  setTarget(target) {\n    this.__target = target;\n    this.__setAriaRequiredAttribute(this.__required);\n    this.__setLabelIdToAriaAttribute(this.__labelId);\n    this.__setErrorIdToAriaAttribute(this.__errorId);\n    this.__setHelperIdToAriaAttribute(this.__helperId);\n  }\n\n  /**\n   * Toggles the `aria-required` attribute on the target element\n   * if the target is the host component (e.g. a field group).\n   * Otherwise, it does nothing.\n   *\n   * @param {boolean} required\n   */\n  setRequired(required) {\n    this.__setAriaRequiredAttribute(required);\n    this.__required = required;\n  }\n\n  /**\n   * Links the target element with a slotted label element\n   * via the target's attribute `aria-labelledby`.\n   *\n   * To unlink the previous slotted label element, pass `null` as `labelId`.\n   *\n   * @param {string | null} labelId\n   */\n  setLabelId(labelId) {\n    this.__setLabelIdToAriaAttribute(labelId, this.__labelId);\n    this.__labelId = labelId;\n  }\n\n  /**\n   * Links the target element with a slotted error element via the target's attribute:\n   * - `aria-labelledby` if the target is the host component (e.g a field group).\n   * - `aria-describedby` otherwise.\n   *\n   * To unlink the previous slotted error element, pass `null` as `errorId`.\n   *\n   * @param {string | null} errorId\n   */\n  setErrorId(errorId) {\n    this.__setErrorIdToAriaAttribute(errorId, this.__errorId);\n    this.__errorId = errorId;\n  }\n\n  /**\n   * Links the target element with a slotted helper element via the target's attribute:\n   * - `aria-labelledby` if the target is the host component (e.g a field group).\n   * - `aria-describedby` otherwise.\n   *\n   * To unlink the previous slotted helper element, pass `null` as `helperId`.\n   *\n   * @param {string | null} helperId\n   */\n  setHelperId(helperId) {\n    this.__setHelperIdToAriaAttribute(helperId, this.__helperId);\n    this.__helperId = helperId;\n  }\n\n  /**\n   * `true` if the target element is the host component itself, `false` otherwise.\n   *\n   * @return {boolean}\n   * @private\n   */\n  get __isGroupField() {\n    return this.__target === this.host;\n  }\n\n  /**\n   * @param {string | null | undefined} labelId\n   * @param {string | null | undefined} oldLabelId\n   * @private\n   */\n  __setLabelIdToAriaAttribute(labelId, oldLabelId) {\n    this.__setAriaAttributeId('aria-labelledby', labelId, oldLabelId);\n  }\n\n  /**\n   * @param {string | null | undefined} errorId\n   * @param {string | null | undefined} oldErrorId\n   * @private\n   */\n  __setErrorIdToAriaAttribute(errorId, oldErrorId) {\n    // For groups, add all IDs to aria-labelledby rather than aria-describedby -\n    // that should guarantee that it's announced when the group is entered.\n    if (this.__isGroupField) {\n      this.__setAriaAttributeId('aria-labelledby', errorId, oldErrorId);\n    } else {\n      this.__setAriaAttributeId('aria-describedby', errorId, oldErrorId);\n    }\n  }\n\n  /**\n   * @param {string | null | undefined} helperId\n   * @param {string | null | undefined} oldHelperId\n   * @private\n   */\n  __setHelperIdToAriaAttribute(helperId, oldHelperId) {\n    // For groups, add all IDs to aria-labelledby rather than aria-describedby -\n    // that should guarantee that it's announced when the group is entered.\n    if (this.__isGroupField) {\n      this.__setAriaAttributeId('aria-labelledby', helperId, oldHelperId);\n    } else {\n      this.__setAriaAttributeId('aria-describedby', helperId, oldHelperId);\n    }\n  }\n\n  /**\n   * @param {boolean} required\n   * @private\n   */\n  __setAriaRequiredAttribute(required) {\n    if (!this.__target) {\n      return;\n    }\n\n    if (!this.__isGroupField) {\n      // native <input> or <textarea>, required is enough\n      return;\n    }\n\n    if (required) {\n      this.__target.setAttribute('aria-required', 'true');\n    } else {\n      this.__target.removeAttribute('aria-required');\n    }\n  }\n\n  /**\n   * @param {string | null | undefined} newId\n   * @param {string | null | undefined} oldId\n   * @private\n   */\n  __setAriaAttributeId(attr, newId, oldId) {\n    if (!this.__target) {\n      return;\n    }\n\n    if (oldId) {\n      removeValueFromAttribute(this.__target, attr, oldId);\n    }\n\n    if (newId) {\n      addValueToAttribute(this.__target, attr, newId);\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * @param {string} value\n * @return {Set<string>}\n */\nfunction deserializeAttributeValue(value) {\n  if (!value) {\n    return new Set();\n  }\n\n  return new Set(value.split(' '));\n}\n\n/**\n * @param {Set<string>} values\n * @return {string}\n */\nfunction serializeAttributeValue(values) {\n  return [...values].join(' ');\n}\n\n/**\n * Adds a value to an attribute containing space-delimited values.\n *\n * @param {HTMLElement} element\n * @param {string} attr\n * @param {string} value\n */\nexport function addValueToAttribute(element, attr, value) {\n  const values = deserializeAttributeValue(element.getAttribute(attr));\n  values.add(value);\n  element.setAttribute(attr, serializeAttributeValue(values));\n}\n\n/**\n * Removes a value from an attribute containing space-delimited values.\n * If the value is the last one, the whole attribute is removed.\n *\n * @param {HTMLElement} element\n * @param {string} attr\n * @param {string} value\n */\nexport function removeValueFromAttribute(element, attr, value) {\n  const values = deserializeAttributeValue(element.getAttribute(attr));\n  values.delete(value);\n  if (values.size === 0) {\n    element.removeAttribute(attr);\n    return;\n  }\n  element.setAttribute(attr, serializeAttributeValue(values));\n}\n","/**\n * @license\n * Copyright (c) 2021 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { SlotController } from '@vaadin/component-base/src/slot-controller.js';\n\n/**\n * A controller that manages the helper node content.\n */\nexport class HelperController extends SlotController {\n  constructor(host) {\n    // Do not provide slot factory, as only create helper lazily.\n    super(host, 'helper');\n  }\n\n  get helperId() {\n    return this.node && this.node.id;\n  }\n\n  /**\n   * Override to initialize the newly added custom helper.\n   *\n   * @param {Node} helperNode\n   * @protected\n   * @override\n   */\n  initCustomNode(helperNode) {\n    this.__updateHelperId(helperNode);\n\n    this.__observeHelper(helperNode);\n\n    const hasHelper = this.__hasHelper(helperNode);\n    this.__toggleHasHelper(hasHelper);\n  }\n\n  /**\n   * Override to cleanup helper node when it's removed.\n   *\n   * @param {Node} _node\n   * @protected\n   * @override\n   */\n  teardownNode(_node) {\n    // The observer does not exist when the default helper is removed.\n    if (this.__helperIdObserver) {\n      this.__helperIdObserver.disconnect();\n    }\n\n    const helperNode = this.getSlotChild();\n\n    // Custom node is added to helper slot\n    if (helperNode && helperNode !== this.defaultNode) {\n      const hasHelper = this.__hasHelper(helperNode);\n      this.__toggleHasHelper(hasHelper);\n    } else {\n      // Restore default helper if needed\n      this.__applyDefaultHelper(this.helperText, helperNode);\n    }\n  }\n\n  /**\n   * Set helper text based on corresponding host property.\n   * @param {string} helperText\n   */\n  setHelperText(helperText) {\n    this.helperText = helperText;\n\n    const helperNode = this.getSlotChild();\n    if (!helperNode || helperNode === this.defaultNode) {\n      this.__applyDefaultHelper(helperText, helperNode);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} helperNode\n   * @return {boolean}\n   * @private\n   */\n  __hasHelper(helperNode) {\n    if (!helperNode) {\n      return false;\n    }\n\n    return helperNode.children.length > 0 || this.__isNotEmpty(helperNode.textContent);\n  }\n\n  /**\n   * @param {string} helperText\n   * @private\n   */\n  __isNotEmpty(helperText) {\n    return helperText && helperText.trim() !== '';\n  }\n\n  /**\n   * @param {string} helperText\n   * @param {Node} helperNode\n   * @private\n   */\n  __applyDefaultHelper(helperText, helperNode) {\n    const hasHelperText = this.__isNotEmpty(helperText);\n\n    if (hasHelperText && !helperNode) {\n      // Set slot factory lazily to only create helper node when needed.\n      this.slotFactory = () => document.createElement('div');\n\n      helperNode = this.attachDefaultNode();\n\n      this.__updateHelperId(helperNode);\n      this.__observeHelper(helperNode);\n    }\n\n    if (helperNode) {\n      helperNode.textContent = helperText;\n    }\n\n    this.__toggleHasHelper(hasHelperText);\n  }\n\n  /**\n   * @param {HTMLElement} helperNode\n   * @private\n   */\n  __observeHelper(helperNode) {\n    this.__helperObserver = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        const target = mutation.target;\n\n        // Ensure the mutation target is the currently connected helper\n        // to ignore async mutations dispatched for removed element.\n        const isHelperMutation = target === this.node;\n\n        if (mutation.type === 'attributes') {\n          // We use attributeFilter to only observe ID mutation,\n          // no need to check for attribute name separately.\n          if (isHelperMutation && target.id !== this.defaultId) {\n            this.__updateHelperId(target);\n          }\n        } else if (isHelperMutation || target.parentElement === this.node) {\n          // Update has-helper when textContent changes\n          const hasHelper = this.__hasHelper(this.node);\n          this.__toggleHasHelper(hasHelper);\n        }\n      });\n    });\n\n    // Observe changes to helper ID attribute, text content and children.\n    this.__helperObserver.observe(helperNode, {\n      attributes: true,\n      attributeFilter: ['id'],\n      childList: true,\n      subtree: true,\n      characterData: true,\n    });\n  }\n\n  /**\n   * @param {boolean} hasHelper\n   * @private\n   */\n  __toggleHasHelper(hasHelper) {\n    this.host.toggleAttribute('has-helper', hasHelper);\n\n    // Make it possible for other mixins to observe change\n    this.dispatchEvent(\n      new CustomEvent('helper-changed', {\n        detail: {\n          hasHelper,\n          node: this.node,\n        },\n      }),\n    );\n  }\n\n  /**\n   * @param {HTMLElement} helperNode\n   * @private\n   */\n  __updateHelperId(helperNode) {\n    if (!helperNode.id) {\n      helperNode.id = this.defaultId;\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\n\n/**\n * A mixin to provide required state and validation logic.\n *\n * @polymerMixin\n */\nexport const ValidateMixin = dedupingMixin(\n  (superclass) =>\n    class ValidateMixinClass extends superclass {\n      static get properties() {\n        return {\n          /**\n           * Set to true when the field is invalid.\n           */\n          invalid: {\n            type: Boolean,\n            reflectToAttribute: true,\n            notify: true,\n            value: false,\n          },\n\n          /**\n           * Specifies that the user must fill in a value.\n           */\n          required: {\n            type: Boolean,\n            reflectToAttribute: true,\n          },\n        };\n      }\n\n      /**\n       * Returns true if field is valid, and sets `invalid` based on the field validity.\n       *\n       * @return {boolean} True if the value is valid.\n       */\n      validate() {\n        return !(this.invalid = !this.checkValidity());\n      }\n\n      /**\n       * Returns true if the field value satisfies all constraints (if any).\n       *\n       * @return {boolean}\n       */\n      checkValidity() {\n        return !this.required || !!this.value;\n      }\n    },\n);\n","/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\nimport { DelegateStateMixin } from './delegate-state-mixin.js';\nimport { InputMixin } from './input-mixin.js';\nimport { ValidateMixin } from './validate-mixin.js';\n\n/**\n * A mixin to combine multiple input validation constraints.\n *\n * @polymerMixin\n * @mixes DelegateStateMixin\n * @mixes InputMixin\n * @mixes ValidateMixin\n */\nexport const InputConstraintsMixin = dedupingMixin(\n  (superclass) =>\n    class InputConstraintsMixinClass extends DelegateStateMixin(ValidateMixin(InputMixin(superclass))) {\n      /**\n       * An array of attributes which participate in the input validation.\n       * Changing these attributes will cause the input to re-validate.\n       *\n       * IMPORTANT: The attributes should be properly delegated to the input element\n       * from the host using `delegateAttrs` getter (see `DelegateStateMixin`).\n       * The `required` attribute is already delegated.\n       */\n      static get constraints() {\n        return ['required'];\n      }\n\n      static get delegateAttrs() {\n        return [...super.delegateAttrs, 'required'];\n      }\n\n      /** @protected */\n      ready() {\n        super.ready();\n\n        this._createConstraintsObserver();\n      }\n\n      /**\n       * Returns true if the current input value satisfies all constraints (if any).\n       * @return {boolean}\n       */\n      checkValidity() {\n        if (this.inputElement && this._hasValidConstraints(this.constructor.constraints.map((c) => this[c]))) {\n          return this.inputElement.checkValidity();\n        }\n        return !this.invalid;\n      }\n\n      /**\n       * Returns true if some of the provided set of constraints are valid.\n       * @param {Array} constraints\n       * @return {boolean}\n       * @protected\n       */\n      _hasValidConstraints(constraints) {\n        return constraints.some((c) => this.__isValidConstraint(c));\n      }\n\n      /**\n       * Override this method to customize setting up constraints observer.\n       * @protected\n       */\n      _createConstraintsObserver() {\n        // This complex observer needs to be added dynamically instead of using `static get observers()`\n        // to make it possible to tweak this behavior in classes that apply this mixin.\n        this._createMethodObserver(`_constraintsChanged(${this.constructor.constraints.join(', ')})`);\n      }\n\n      /**\n       * Override this method to implement custom validation constraints.\n       * @param {unknown[]} constraints\n       * @protected\n       */\n      _constraintsChanged(...constraints) {\n        // Prevent marking field as invalid when setting required state\n        // or any other constraint before a user has entered the value.\n        if (!this.invalid) {\n          return;\n        }\n\n        if (this._hasValidConstraints(constraints)) {\n          this.validate();\n        } else {\n          this.invalid = false;\n        }\n      }\n\n      /**\n       * Override an event listener inherited from `InputMixin`\n       * to capture native `change` event and make sure that\n       * a new one is dispatched after validation runs.\n       * @param {Event} event\n       * @protected\n       * @override\n       */\n      _onChange(event) {\n        event.stopPropagation();\n\n        this.validate();\n\n        this.dispatchEvent(\n          new CustomEvent('change', {\n            detail: {\n              sourceEvent: event,\n            },\n            bubbles: event.bubbles,\n            cancelable: event.cancelable,\n          }),\n        );\n      }\n\n      /** @private */\n      __isValidConstraint(constraint) {\n        // 0 is valid for `minlength` and `maxlength`\n        return Boolean(constraint) || constraint === 0;\n      }\n    },\n);\n","/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { timeOut } from '@vaadin/component-base/src/async.js';\nimport { Debouncer } from '@vaadin/component-base/src/debounce.js';\nimport { InputConstraintsMixin } from './input-constraints-mixin.js';\n\n/**\n * A mixin to provide `pattern` and `preventInvalidInput` properties.\n *\n * @polymerMixin\n * @mixes InputConstraintsMixin\n */\nexport const PatternMixin = (superclass) =>\n  class PatternMixinClass extends InputConstraintsMixin(superclass) {\n    static get properties() {\n      return {\n        /**\n         * A regular expression that the value is checked against.\n         * The pattern must match the entire value, not just some subset.\n         */\n        pattern: {\n          type: String,\n        },\n\n        /**\n         * When set to true, user is prevented from typing a value that\n         * conflicts with the given `pattern`.\n         * @attr {boolean} prevent-invalid-input\n         */\n        preventInvalidInput: {\n          type: Boolean,\n        },\n      };\n    }\n\n    static get delegateAttrs() {\n      return [...super.delegateAttrs, 'pattern'];\n    }\n\n    static get constraints() {\n      return [...super.constraints, 'pattern'];\n    }\n\n    /** @private */\n    _checkInputValue() {\n      if (this.preventInvalidInput) {\n        const input = this.inputElement;\n        if (input && input.value.length > 0 && !this.checkValidity()) {\n          input.value = this.value || '';\n          // add input-prevented attribute for 200ms\n          this.setAttribute('input-prevented', '');\n          this._inputDebouncer = Debouncer.debounce(this._inputDebouncer, timeOut.after(200), () => {\n            this.removeAttribute('input-prevented');\n          });\n        }\n      }\n    }\n\n    /**\n     * @param {Event} event\n     * @protected\n     */\n    _onInput(event) {\n      this._checkInputValue();\n\n      super._onInput(event);\n    }\n  };\n","/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd..\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { clearButton } from './clear-button-styles.js';\nimport { fieldShared } from './field-shared-styles.js';\nimport { inputFieldContainer } from './input-field-container-styles.js';\n\nexport const inputFieldShared = [fieldShared, inputFieldContainer, clearButton];\n","/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd..\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { css } from 'lit';\n\nexport const clearButton = css`\n  [part='clear-button'] {\n    display: none;\n    cursor: default;\n  }\n\n  [part='clear-button']::before {\n    content: '✕';\n  }\n\n  :host([clear-button-visible][has-value]:not([disabled]):not([readonly])) [part='clear-button'] {\n    display: block;\n  }\n`;\n","/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd..\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { css } from 'lit';\n\nexport const fieldShared = css`\n  :host {\n    display: inline-flex;\n    outline: none;\n  }\n\n  :host::before {\n    content: '\\\\2003';\n    width: 0;\n    display: inline-block;\n    /* Size and position this element on the same vertical position as the input-field element\n          to make vertical align for the host element work as expected */\n  }\n\n  :host([hidden]) {\n    display: none !important;\n  }\n\n  :host(:not([has-label])) [part='label'] {\n    display: none;\n  }\n`;\n","/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd..\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { css } from 'lit';\n\nexport const inputFieldContainer = css`\n  [class$='container'] {\n    display: flex;\n    flex-direction: column;\n    min-width: 100%;\n    max-width: 100%;\n    width: var(--vaadin-field-default-width, 12em);\n  }\n`;\n","import './theme/lumo/vaadin-select.js';\nexport * from './src/vaadin-select.js';\n","/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '@vaadin/button/theme/lumo/vaadin-button.js';\nimport '@vaadin/input-container/theme/lumo/vaadin-input-container.js';\nimport '@vaadin/item/theme/lumo/vaadin-item.js';\nimport '@vaadin/list-box/theme/lumo/vaadin-list-box.js';\nimport '@vaadin/vaadin-overlay/theme/lumo/vaadin-overlay.js';\nimport './vaadin-select-styles.js';\nimport '../../src/vaadin-select.js';\n","import './vaadin-item-styles.js';\nimport '../../src/vaadin-item.js';\n","import '@vaadin/vaadin-lumo-styles/font-icons.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst item = css`\n  :host {\n    display: flex;\n    align-items: center;\n    box-sizing: border-box;\n    font-family: var(--lumo-font-family);\n    font-size: var(--lumo-font-size-m);\n    line-height: var(--lumo-line-height-xs);\n    padding: 0.5em calc(var(--lumo-space-l) + var(--lumo-border-radius-m) / 4) 0.5em\n      var(--_lumo-list-box-item-padding-left, calc(var(--lumo-border-radius-m) / 4));\n    min-height: var(--lumo-size-m);\n    outline: none;\n    border-radius: var(--lumo-border-radius-m);\n    cursor: var(--lumo-clickable-cursor);\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-tap-highlight-color: var(--lumo-primary-color-10pct);\n  }\n\n  /* Checkmark */\n  [part='checkmark']::before {\n    display: var(--_lumo-item-selected-icon-display, none);\n    content: var(--lumo-icons-checkmark);\n    font-family: lumo-icons;\n    font-size: var(--lumo-icon-size-m);\n    line-height: 1;\n    font-weight: normal;\n    width: 1em;\n    height: 1em;\n    margin: calc((1 - var(--lumo-line-height-xs)) * var(--lumo-font-size-m) / 2) 0;\n    color: var(--lumo-primary-text-color);\n    flex: none;\n    opacity: 0;\n    transition: transform 0.2s cubic-bezier(0.12, 0.32, 0.54, 2), opacity 0.1s;\n  }\n\n  :host([selected]) [part='checkmark']::before {\n    opacity: 1;\n  }\n\n  :host([active]:not([selected])) [part='checkmark']::before {\n    transform: scale(0.8);\n    opacity: 0;\n    transition-duration: 0s;\n  }\n\n  [part='content'] {\n    flex: auto;\n  }\n\n  /* Disabled */\n  :host([disabled]) {\n    color: var(--lumo-disabled-text-color);\n    cursor: default;\n    pointer-events: none;\n  }\n\n  /* TODO a workaround until we have \"focus-follows-mouse\". After that, use the hover style for focus-ring as well */\n  @media (any-hover: hover) {\n    :host(:hover:not([disabled])) {\n      background-color: var(--lumo-primary-color-10pct);\n    }\n\n    :host([focus-ring]:not([disabled])) {\n      box-shadow: inset 0 0 0 2px var(--lumo-primary-color-50pct);\n    }\n  }\n\n  /* RTL specific styles */\n  :host([dir='rtl']) {\n    padding-left: calc(var(--lumo-space-l) + var(--lumo-border-radius-m) / 4);\n    padding-right: var(--_lumo-list-box-item-padding-left, calc(var(--lumo-border-radius-m) / 4));\n  }\n\n  /* Slotted icons */\n  :host ::slotted(vaadin-icon),\n  :host ::slotted(iron-icon) {\n    width: var(--lumo-icon-size-m);\n    height: var(--lumo-icon-size-m);\n  }\n`;\n\nregisterStyles('vaadin-item', item, { moduleId: 'lumo-item' });\n\nexport { item };\n","/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { DirMixin } from '@vaadin/component-base/src/dir-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ItemMixin } from './vaadin-item-mixin.js';\n\n/**\n * `<vaadin-item>` is a Web Component providing layout for items in tabs and menus.\n *\n * ```\n *   <vaadin-item>\n *     Item content\n *   </vaadin-item>\n * ```\n *\n * ### Selectable\n *\n * `<vaadin-item>` has the `selected` property and the corresponding state attribute.\n * Currently, the component sets the `selected` to false, when `disabled` property is set to true.\n * But other than that, the `<vaadin-item>` does not switch selection by itself.\n * In general, it is the wrapper component, like `<vaadin-list-box>`, which should update\n * the `selected` property on the items, e. g. on mousedown or when Enter / Spacebar is pressed.\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name    | Description\n * -------------|----------------\n * `checkmark`  | The graphical checkmark shown for a selected item\n * `content`    | The element that wraps the slot\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description\n * -------------|-------------\n * `active`     | Set when the item is pressed down, either with mouse, touch or the keyboard.\n * `disabled`   | Set when the item is disabled.\n * `focus-ring` | Set when the item is focused using the keyboard.\n * `focused`    | Set when the item is focused.\n * `selected`   | Set when the item is selected\n *\n * See [Styling Components](https://vaadin.com/docs/latest/ds/customization/styling-components) documentation.\n *\n * @extends HTMLElement\n * @mixes ItemMixin\n * @mixes ThemableMixin\n * @mixes DirMixin\n */\nclass Item extends ItemMixin(ThemableMixin(DirMixin(PolymerElement))) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: inline-block;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n      </style>\n      <span part=\"checkmark\" aria-hidden=\"true\"></span>\n      <div part=\"content\">\n        <slot></slot>\n      </div>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-item';\n  }\n\n  constructor() {\n    super();\n\n    /**\n     * Submittable string value. The default value is the trimmed text content of the element.\n     * @type {string}\n     */\n    this.value;\n  }\n}\n\ncustomElements.define(Item.is, Item);\n\nexport { Item };\n","import './vaadin-list-box-styles.js';\nimport '../../src/vaadin-list-box.js';\n","import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles(\n  'vaadin-list-box',\n  css`\n    :host {\n      -webkit-tap-highlight-color: transparent;\n      --_lumo-item-selected-icon-display: var(--_lumo-list-box-item-selected-icon-display, block);\n    }\n\n    /* Dividers */\n    [part='items'] ::slotted(hr) {\n      height: 1px;\n      border: 0;\n      padding: 0;\n      margin: var(--lumo-space-s) var(--lumo-border-radius-m);\n      background-color: var(--lumo-contrast-10pct);\n    }\n  `,\n  { moduleId: 'lumo-list-box' },\n);\n","/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { MultiSelectListMixin } from '@vaadin/vaadin-list-mixin/vaadin-multi-select-list-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\n/**\n * `<vaadin-list-box>` is a Web Component for creating menus.\n *\n * ```\n *   <vaadin-list-box selected=\"2\">\n *     <vaadin-item>Item 1</vaadin-item>\n *     <vaadin-item>Item 2</vaadin-item>\n *     <vaadin-item>Item 3</vaadin-item>\n *     <vaadin-item>Item 4</vaadin-item>\n *   </vaadin-list-box>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name         | Description\n * ------------------|------------------------\n * `items`           | The items container\n *\n * See [Styling Components](https://vaadin.com/docs/latest/ds/customization/styling-components) documentation.\n *\n * @fires {CustomEvent} items-changed - Fired when the `items` property changes.\n * @fires {CustomEvent} selected-changed - Fired when the `selected` property changes.\n * @fires {CustomEvent} selected-values-changed - Fired when the `selectedValues` property changes.\n *\n * @extends HTMLElement\n * @mixes MultiSelectListMixin\n * @mixes ThemableMixin\n * @mixes ElementMixin\n * @mixes ControllerMixin\n */\nclass ListBox extends ElementMixin(MultiSelectListMixin(ThemableMixin(ControllerMixin(PolymerElement)))) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: flex;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        [part='items'] {\n          height: 100%;\n          width: 100%;\n          overflow-y: auto;\n          -webkit-overflow-scrolling: touch;\n        }\n      </style>\n      <div part=\"items\">\n        <slot></slot>\n      </div>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-list-box';\n  }\n\n  static get properties() {\n    return {\n      // We don't need to define this property since super default is vertical,\n      // but we don't want it to be modified, or be shown in the API docs.\n      /** @private */\n      orientation: {\n        readOnly: true,\n      },\n    };\n  }\n\n  constructor() {\n    super();\n\n    /**\n     * @type {Element | null}\n     * @protected\n     */\n    this.focused;\n  }\n\n  ready() {\n    super.ready();\n    this.setAttribute('role', 'list');\n\n    setTimeout(this._checkImport.bind(this), 2000);\n  }\n\n  /**\n   * @return {!HTMLElement}\n   * @protected\n   */\n  get _scrollerElement() {\n    return this.shadowRoot.querySelector('[part=\"items\"]');\n  }\n\n  /** @private */\n  _checkImport() {\n    var item = this.querySelector('vaadin-item');\n    if (item && !(item instanceof PolymerElement)) {\n      console.warn(`Make sure you have imported the vaadin-item element.`);\n    }\n  }\n}\n\ncustomElements.define(ListBox.is, ListBox);\n\nexport { ListBox };\n","/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { ListMixin } from './vaadin-list-mixin.js';\n\n/**\n * A mixin for `nav` elements, facilitating multiple selection of childNodes.\n *\n * @polymerMixin\n * @mixes ListMixin\n */\nexport const MultiSelectListMixin = (superClass) =>\n  class VaadinMultiSelectListMixin extends ListMixin(superClass) {\n    static get properties() {\n      return {\n        /**\n         * Specifies that multiple options can be selected at once.\n         */\n        multiple: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n          observer: '_multipleChanged',\n        },\n\n        /**\n         * Array of indexes of the items selected in the items array\n         * Note: Not updated when used in single selection mode.\n         * @type {number[] | null | undefined}\n         */\n        selectedValues: {\n          type: Array,\n          notify: true,\n          value: function () {\n            return [];\n          },\n        },\n      };\n    }\n\n    static get observers() {\n      return [`_enhanceMultipleItems(items, multiple, selected, selectedValues, selectedValues.*)`];\n    }\n\n    /** @protected */\n    ready() {\n      // Should be attached before click listener in list-mixin\n      this.addEventListener('click', (e) => this._onMultipleClick(e));\n\n      super.ready();\n    }\n\n    /** @private */\n    _enhanceMultipleItems(items, multiple, selected, selectedValues) {\n      if (!items || !multiple) {\n        return;\n      }\n\n      if (selectedValues) {\n        const selectedItems = selectedValues.map((selectedId) => items[selectedId]);\n        items.forEach((item) => (item.selected = selectedItems.indexOf(item) !== -1));\n      }\n\n      this._scrollToLastSelectedItem();\n    }\n\n    /** @private */\n    _scrollToLastSelectedItem() {\n      const lastSelectedItem = this.selectedValues.slice(-1)[0];\n      if (lastSelectedItem && !lastSelectedItem.disabled) {\n        this._scrollToItem(lastSelectedItem);\n      }\n    }\n\n    /**\n     * @param {!MouseEvent} event\n     * @protected\n     */\n    _onMultipleClick(event) {\n      const item = this._filterItems(event.composedPath())[0];\n      const idx = item && !item.disabled ? this.items.indexOf(item) : -1;\n      if (idx < 0 || !this.multiple) {\n        return;\n      }\n\n      event.preventDefault();\n      if (this.selectedValues.indexOf(idx) !== -1) {\n        this.selectedValues = this.selectedValues.filter((v) => v !== idx);\n      } else {\n        this.selectedValues = this.selectedValues.concat(idx);\n      }\n    }\n\n    /** @private */\n    _multipleChanged(value, oldValue) {\n      // Changing from multiple to single selection, clear selection.\n      if (!value && oldValue) {\n        this.selectedValues = [];\n        this.items.forEach((item) => (item.selected = false));\n      }\n\n      // Changing from single to multiple selection, add selected to selectedValues.\n      if (value && !oldValue && this.selected !== undefined) {\n        this.selectedValues = [...this.selectedValues, this.selected];\n        this.selected = undefined;\n      }\n    }\n\n    /**\n     * Fired when the selection is changed.\n     * Not fired in single selection mode.\n     *\n     * @event selected-values-changed\n     * @param {Object} detail\n     * @param {Object} detail.value the array of indexes of the items selected in the items array.\n     */\n  };\n","import './vaadin-overlay-styles.js';\nimport '../../src/vaadin-overlay.js';\n","import { overlay } from '@vaadin/vaadin-lumo-styles/mixins/overlay.js';\nimport { registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles('vaadin-overlay', overlay, { moduleId: 'lumo-vaadin-overlay' });\n","/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '../color.js';\nimport '../spacing.js';\nimport '../style.js';\nimport '../typography.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst overlay = css`\n  :host {\n    top: var(--lumo-space-m);\n    right: var(--lumo-space-m);\n    bottom: var(--lumo-space-m);\n    left: var(--lumo-space-m);\n    /* Workaround for Edge issue (only on Surface), where an overflowing vaadin-list-box inside vaadin-select-overlay makes the overlay transparent */\n    /* stylelint-disable-next-line */\n    outline: 0px solid transparent;\n  }\n\n  [part='overlay'] {\n    background-color: var(--lumo-base-color);\n    background-image: linear-gradient(var(--lumo-tint-5pct), var(--lumo-tint-5pct));\n    border-radius: var(--lumo-border-radius-m);\n    box-shadow: 0 0 0 1px var(--lumo-shade-5pct), var(--lumo-box-shadow-m);\n    color: var(--lumo-body-text-color);\n    font-family: var(--lumo-font-family);\n    font-size: var(--lumo-font-size-m);\n    font-weight: 400;\n    line-height: var(--lumo-line-height-m);\n    letter-spacing: 0;\n    text-transform: none;\n    -webkit-text-size-adjust: 100%;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  [part='content'] {\n    padding: var(--lumo-space-xs);\n  }\n\n  [part='backdrop'] {\n    background-color: var(--lumo-shade-20pct);\n    animation: 0.2s lumo-overlay-backdrop-enter both;\n    will-change: opacity;\n  }\n\n  @keyframes lumo-overlay-backdrop-enter {\n    0% {\n      opacity: 0;\n    }\n  }\n\n  :host([closing]) [part='backdrop'] {\n    animation: 0.2s lumo-overlay-backdrop-exit both;\n  }\n\n  @keyframes lumo-overlay-backdrop-exit {\n    100% {\n      opacity: 0;\n    }\n  }\n\n  @keyframes lumo-overlay-dummy-animation {\n    0% {\n      opacity: 1;\n    }\n\n    100% {\n      opacity: 1;\n    }\n  }\n`;\n\nregisterStyles('', overlay, { moduleId: 'lumo-overlay' });\n\nexport { overlay };\n","/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\nimport { afterNextRender } from '@polymer/polymer/lib/utils/render-status.js';\nimport { templatize } from '@polymer/polymer/lib/utils/templatize.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { isIOS } from '@vaadin/component-base/src/browser-utils.js';\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { DirMixin } from '@vaadin/component-base/src/dir-mixin.js';\nimport { FocusTrapController } from '@vaadin/component-base/src/focus-trap-controller.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\n/**\n *\n * `<vaadin-overlay>` is a Web Component for creating overlays. The content of the overlay\n * can be populated in two ways: imperatively by using renderer callback function and\n * declaratively by using Polymer's Templates.\n *\n * ### Rendering\n *\n * By default, the overlay uses the content provided by using the renderer callback function.\n *\n * The renderer function provides `root`, `owner`, `model` arguments when applicable.\n * Generate DOM content by using `model` object properties if needed, append it to the `root`\n * element and control the state of the host element by accessing `owner`. Before generating new\n * content, users are able to check if there is already content in `root` for reusing it.\n *\n * ```html\n * <vaadin-overlay id=\"overlay\"></vaadin-overlay>\n * ```\n * ```js\n * const overlay = document.querySelector('#overlay');\n * overlay.renderer = function(root) {\n *  root.textContent = \"Overlay content\";\n * };\n * ```\n *\n * Renderer is called on the opening of the overlay and each time the related model is updated.\n * DOM generated during the renderer call can be reused\n * in the next renderer call and will be provided with the `root` argument.\n * On first call it will be empty.\n *\n * **NOTE:** when the renderer property is defined, the `<template>` content is not used.\n *\n * ### Templating\n *\n * Alternatively, the content can be provided with Polymer Template.\n * Overlay finds the first child template and uses that in case renderer callback function\n * is not provided. You can also set a custom template using the `template` property.\n *\n * After the content from the template is stamped, the `content` property\n * points to the content container.\n *\n * The overlay provides `forwardHostProp` when calling\n * `Polymer.Templatize.templatize` for the template, so that the bindings\n * from the parent scope propagate to the content.\n *\n * ### Styling\n *\n * To style the overlay content, use styles in the parent scope:\n *\n * - If the overlay is used in a component, then the component styles\n *   apply the overlay content.\n * - If the overlay is used in the global DOM scope, then global styles\n *   apply to the overlay content.\n *\n * See examples for styling the overlay content in the live demos.\n *\n * The following Shadow DOM parts are available for styling the overlay component itself:\n *\n * Part name  | Description\n * -----------|---------------------------------------------------------|\n * `backdrop` | Backdrop of the overlay\n * `overlay`  | Container for position/sizing/alignment of the content\n * `content`  | Content of the overlay\n *\n * The following state attributes are available for styling:\n *\n * Attribute | Description | Part\n * ---|---|---\n * `opening` | Applied just after the overlay is attached to the DOM. You can apply a CSS @keyframe animation for this state. | `:host`\n * `closing` | Applied just before the overlay is detached from the DOM. You can apply a CSS @keyframe animation for this state. | `:host`\n *\n * The following custom CSS properties are available for styling:\n *\n * Custom CSS property | Description | Default value\n * ---|---|---\n * `--vaadin-overlay-viewport-bottom` | Bottom offset of the visible viewport area | `0` or detected offset\n *\n * See [Styling Components](https://vaadin.com/docs/latest/ds/customization/styling-components) documentation.\n *\n * @fires {CustomEvent} opened-changed - Fired when the `opened` property changes.\n * @fires {CustomEvent} vaadin-overlay-open - Fired after the overlay is opened.\n * @fires {CustomEvent} vaadin-overlay-close - Fired before the overlay will be closed. If canceled the closing of the overlay is canceled as well.\n * @fires {CustomEvent} vaadin-overlay-closing - Fired when the overlay will be closed.\n * @fires {CustomEvent} vaadin-overlay-outside-click - Fired before the overlay will be closed on outside click. If canceled the closing of the overlay is canceled as well.\n * @fires {CustomEvent} vaadin-overlay-escape-press - Fired before the overlay will be closed on ESC button press. If canceled the closing of the overlay is canceled as well.\n *\n * @extends HTMLElement\n * @mixes ThemableMixin\n * @mixes DirMixin\n * @mixes ControllerMixin\n */\nclass OverlayElement extends ThemableMixin(DirMixin(ControllerMixin(PolymerElement))) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          z-index: 200;\n          position: fixed;\n\n          /* Despite of what the names say, <vaadin-overlay> is just a container\n          for position/sizing/alignment. The actual overlay is the overlay part. */\n\n          /* Default position constraints: the entire viewport. Note: themes can\n          override this to introduce gaps between the overlay and the viewport. */\n          top: 0;\n          right: 0;\n          bottom: var(--vaadin-overlay-viewport-bottom);\n          left: 0;\n\n          /* Use flexbox alignment for the overlay part. */\n          display: flex;\n          flex-direction: column; /* makes dropdowns sizing easier */\n          /* Align to center by default. */\n          align-items: center;\n          justify-content: center;\n\n          /* Allow centering when max-width/max-height applies. */\n          margin: auto;\n\n          /* The host is not clickable, only the overlay part is. */\n          pointer-events: none;\n\n          /* Remove tap highlight on touch devices. */\n          -webkit-tap-highlight-color: transparent;\n\n          /* CSS API for host */\n          --vaadin-overlay-viewport-bottom: 0;\n        }\n\n        :host([hidden]),\n        :host(:not([opened]):not([closing])) {\n          display: none !important;\n        }\n\n        [part='overlay'] {\n          -webkit-overflow-scrolling: touch;\n          overflow: auto;\n          pointer-events: auto;\n\n          /* Prevent overflowing the host in MSIE 11 */\n          max-width: 100%;\n          box-sizing: border-box;\n\n          -webkit-tap-highlight-color: initial; /* reenable tap highlight inside */\n        }\n\n        [part='backdrop'] {\n          z-index: -1;\n          content: '';\n          background: rgba(0, 0, 0, 0.5);\n          position: fixed;\n          top: 0;\n          left: 0;\n          bottom: 0;\n          right: 0;\n          pointer-events: auto;\n        }\n      </style>\n\n      <div id=\"backdrop\" part=\"backdrop\" hidden$=\"[[!withBackdrop]]\"></div>\n      <div part=\"overlay\" id=\"overlay\" tabindex=\"0\">\n        <div part=\"content\" id=\"content\">\n          <slot></slot>\n        </div>\n      </div>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-overlay';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * When true, the overlay is visible and attached to body.\n       */\n      opened: {\n        type: Boolean,\n        notify: true,\n        observer: '_openedChanged',\n        reflectToAttribute: true,\n      },\n\n      /**\n       * Owner element passed with renderer function\n       * @type {HTMLElement}\n       */\n      owner: Element,\n\n      /**\n       * Custom function for rendering the content of the overlay.\n       * Receives three arguments:\n       *\n       * - `root` The root container DOM element. Append your content to it.\n       * - `owner` The host element of the renderer function.\n       * - `model` The object with the properties related with rendering.\n       * @type {OverlayRenderer | null | undefined}\n       */\n      renderer: Function,\n\n      /**\n       * The template of the overlay content.\n       * @type {HTMLTemplateElement | null | undefined}\n       */\n      template: {\n        type: Object,\n        notify: true,\n      },\n\n      /**\n       * References the content container after the template is stamped.\n       * @type {!HTMLElement | undefined}\n       */\n      content: {\n        type: Object,\n        notify: true,\n      },\n\n      /**\n       * When true the overlay has backdrop on top of content when opened.\n       * @type {boolean}\n       */\n      withBackdrop: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n      },\n\n      /**\n       * Object with properties that is passed to `renderer` function\n       */\n      model: Object,\n\n      /**\n       * When true the overlay won't disable the main content, showing\n       * it doesn’t change the functionality of the user interface.\n       * @type {boolean}\n       */\n      modeless: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n        observer: '_modelessChanged',\n      },\n\n      /**\n       * When set to true, the overlay is hidden. This also closes the overlay\n       * immediately in case there is a closing animation in progress.\n       * @type {boolean}\n       */\n      hidden: {\n        type: Boolean,\n        reflectToAttribute: true,\n        observer: '_hiddenChanged',\n      },\n\n      /**\n       * When true move focus to the first focusable element in the overlay,\n       * or to the overlay if there are no focusable elements.\n       * @type {boolean}\n       */\n      focusTrap: {\n        type: Boolean,\n        value: false,\n      },\n\n      /**\n       * Set to true to enable restoring of focus when overlay is closed.\n       * @type {boolean}\n       */\n      restoreFocusOnClose: {\n        type: Boolean,\n        value: false,\n      },\n\n      /**\n       * Set to specify the element which should be focused on overlay close,\n       * if `restoreFocusOnClose` is set to true.\n       * @type {HTMLElement}\n       */\n      restoreFocusNode: {\n        type: HTMLElement,\n      },\n\n      /** @private */\n      _mouseDownInside: {\n        type: Boolean,\n      },\n\n      /** @private */\n      _mouseUpInside: {\n        type: Boolean,\n      },\n\n      /** @private */\n      _instance: {\n        type: Object,\n      },\n\n      /** @private */\n      _originalContentPart: Object,\n\n      /** @private */\n      _contentNodes: Array,\n\n      /** @private */\n      _oldOwner: Element,\n\n      /** @private */\n      _oldModel: Object,\n\n      /** @private */\n      _oldTemplate: Object,\n\n      /** @private */\n      _oldRenderer: Object,\n\n      /** @private */\n      _oldOpened: Boolean,\n    };\n  }\n\n  static get observers() {\n    return ['_templateOrRendererChanged(template, renderer, owner, model, opened)'];\n  }\n\n  constructor() {\n    super();\n    this._boundMouseDownListener = this._mouseDownListener.bind(this);\n    this._boundMouseUpListener = this._mouseUpListener.bind(this);\n    this._boundOutsideClickListener = this._outsideClickListener.bind(this);\n    this._boundKeydownListener = this._keydownListener.bind(this);\n\n    this._observer = new FlattenedNodesObserver(this, (info) => {\n      this._setTemplateFromNodes(info.addedNodes);\n    });\n\n    // Listener for preventing closing of the paper-dialog and all components extending `iron-overlay-behavior`.\n    this._boundIronOverlayCanceledListener = this._ironOverlayCanceled.bind(this);\n\n    /* c8 ignore next 3 */\n    if (isIOS) {\n      this._boundIosResizeListener = () => this._detectIosNavbar();\n    }\n\n    this.__focusTrapController = new FocusTrapController(this);\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this._observer.flush();\n\n    // Need to add dummy click listeners to this and the backdrop or else\n    // the document click event listener (_outsideClickListener) may never\n    // get invoked on iOS Safari (reproducible in <vaadin-dialog>\n    // and <vaadin-context-menu>).\n    this.addEventListener('click', () => {});\n    this.$.backdrop.addEventListener('click', () => {});\n\n    this.addController(this.__focusTrapController);\n  }\n\n  /** @private */\n  _detectIosNavbar() {\n    /* c8 ignore next 15 */\n    if (!this.opened) {\n      return;\n    }\n\n    const innerHeight = window.innerHeight;\n    const innerWidth = window.innerWidth;\n\n    const landscape = innerWidth > innerHeight;\n\n    const clientHeight = document.documentElement.clientHeight;\n\n    if (landscape && clientHeight > innerHeight) {\n      this.style.setProperty('--vaadin-overlay-viewport-bottom', clientHeight - innerHeight + 'px');\n    } else {\n      this.style.setProperty('--vaadin-overlay-viewport-bottom', '0');\n    }\n  }\n\n  /**\n   * @param {!Array<!Element>} nodes\n   * @protected\n   */\n  _setTemplateFromNodes(nodes) {\n    this.template = nodes.filter((node) => node.localName && node.localName === 'template')[0] || this.template;\n  }\n\n  /**\n   * @param {Event=} sourceEvent\n   * @event vaadin-overlay-close\n   * fired before the `vaadin-overlay` will be closed. If canceled the closing of the overlay is canceled as well.\n   */\n  close(sourceEvent) {\n    var evt = new CustomEvent('vaadin-overlay-close', {\n      bubbles: true,\n      cancelable: true,\n      detail: { sourceEvent: sourceEvent },\n    });\n    this.dispatchEvent(evt);\n    if (!evt.defaultPrevented) {\n      this.opened = false;\n    }\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n\n    /* c8 ignore next 3 */\n    if (this._boundIosResizeListener) {\n      this._detectIosNavbar();\n      window.addEventListener('resize', this._boundIosResizeListener);\n    }\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    /* c8 ignore next 3 */\n    if (this._boundIosResizeListener) {\n      window.removeEventListener('resize', this._boundIosResizeListener);\n    }\n  }\n\n  /**\n   * Requests an update for the content of the overlay.\n   * While performing the update, it invokes the renderer passed in the `renderer` property.\n   *\n   * It is not guaranteed that the update happens immediately (synchronously) after it is requested.\n   */\n  requestContentUpdate() {\n    if (this.renderer) {\n      this.renderer.call(this.owner, this.content, this.owner, this.model);\n    }\n  }\n\n  /** @private */\n  _ironOverlayCanceled(event) {\n    event.preventDefault();\n  }\n\n  /** @private */\n  _mouseDownListener(event) {\n    this._mouseDownInside = event.composedPath().indexOf(this.$.overlay) >= 0;\n  }\n\n  /** @private */\n  _mouseUpListener(event) {\n    this._mouseUpInside = event.composedPath().indexOf(this.$.overlay) >= 0;\n  }\n\n  /**\n   * We need to listen on 'click' / 'tap' event and capture it and close the overlay before\n   * propagating the event to the listener in the button. Otherwise, if the clicked button would call\n   * open(), this would happen: https://www.youtube.com/watch?v=Z86V_ICUCD4\n   *\n   * @event vaadin-overlay-outside-click\n   * fired before the `vaadin-overlay` will be closed on outside click. If canceled the closing of the overlay is canceled as well.\n   *\n   * @private\n   */\n  _outsideClickListener(event) {\n    if (event.composedPath().indexOf(this.$.overlay) !== -1 || this._mouseDownInside || this._mouseUpInside) {\n      this._mouseDownInside = false;\n      this._mouseUpInside = false;\n      return;\n    }\n    if (!this._last) {\n      return;\n    }\n\n    const evt = new CustomEvent('vaadin-overlay-outside-click', {\n      bubbles: true,\n      cancelable: true,\n      detail: { sourceEvent: event },\n    });\n    this.dispatchEvent(evt);\n\n    if (this.opened && !evt.defaultPrevented) {\n      this.close(event);\n    }\n  }\n\n  /**\n   * @event vaadin-overlay-escape-press\n   * fired before the `vaadin-overlay` will be closed on ESC button press. If canceled the closing of the overlay is canceled as well.\n   *\n   * @private\n   */\n  _keydownListener(event) {\n    if (!this._last) {\n      return;\n    }\n\n    // Only close modeless overlay on Esc press when it contains focus\n    if (this.modeless && !event.composedPath().includes(this.$.overlay)) {\n      return;\n    }\n\n    if (event.key === 'Escape') {\n      const evt = new CustomEvent('vaadin-overlay-escape-press', {\n        bubbles: true,\n        cancelable: true,\n        detail: { sourceEvent: event },\n      });\n      this.dispatchEvent(evt);\n\n      if (this.opened && !evt.defaultPrevented) {\n        this.close(event);\n      }\n    }\n  }\n\n  /** @protected */\n  _ensureTemplatized() {\n    this._setTemplateFromNodes(Array.from(this.children));\n  }\n\n  /**\n   * @event vaadin-overlay-open\n   * fired after the `vaadin-overlay` is opened.\n   *\n   * @private\n   */\n  _openedChanged(opened, wasOpened) {\n    if (!this._instance) {\n      this._ensureTemplatized();\n    }\n\n    if (opened) {\n      // Store focused node.\n      this.__restoreFocusNode = this._getActiveElement();\n      this._animatedOpening();\n\n      afterNextRender(this, () => {\n        if (this.focusTrap) {\n          this.__focusTrapController.trapFocus(this.$.overlay);\n        }\n\n        const evt = new CustomEvent('vaadin-overlay-open', { bubbles: true });\n        this.dispatchEvent(evt);\n      });\n\n      document.addEventListener('keydown', this._boundKeydownListener);\n\n      if (!this.modeless) {\n        this._addGlobalListeners();\n      }\n    } else if (wasOpened) {\n      if (this.focusTrap) {\n        this.__focusTrapController.releaseFocus();\n      }\n\n      this._animatedClosing();\n\n      document.removeEventListener('keydown', this._boundKeydownListener);\n\n      if (!this.modeless) {\n        this._removeGlobalListeners();\n      }\n    }\n  }\n\n  /** @private */\n  _hiddenChanged(hidden) {\n    if (hidden && this.hasAttribute('closing')) {\n      this._flushAnimation('closing');\n    }\n  }\n\n  /**\n   * @return {boolean}\n   * @protected\n   */\n  _shouldAnimate() {\n    const name = getComputedStyle(this).getPropertyValue('animation-name');\n    const hidden = getComputedStyle(this).getPropertyValue('display') === 'none';\n    return !hidden && name && name != 'none';\n  }\n\n  /**\n   * @param {string} type\n   * @param {Function} callback\n   * @protected\n   */\n  _enqueueAnimation(type, callback) {\n    const handler = `__${type}Handler`;\n    const listener = (event) => {\n      if (event && event.target !== this) {\n        return;\n      }\n      callback();\n      this.removeEventListener('animationend', listener);\n      delete this[handler];\n    };\n    this[handler] = listener;\n    this.addEventListener('animationend', listener);\n  }\n\n  /**\n   * @param {string} type\n   * @protected\n   */\n  _flushAnimation(type) {\n    const handler = `__${type}Handler`;\n    if (typeof this[handler] === 'function') {\n      this[handler]();\n    }\n  }\n\n  /** @protected */\n  _animatedOpening() {\n    if (this.parentNode === document.body && this.hasAttribute('closing')) {\n      this._flushAnimation('closing');\n    }\n    this._attachOverlay();\n    if (!this.modeless) {\n      this._enterModalState();\n    }\n    this.setAttribute('opening', '');\n\n    if (this._shouldAnimate()) {\n      this._enqueueAnimation('opening', () => {\n        this._finishOpening();\n      });\n    } else {\n      this._finishOpening();\n    }\n  }\n\n  /** @protected */\n  _attachOverlay() {\n    this._placeholder = document.createComment('vaadin-overlay-placeholder');\n    this.parentNode.insertBefore(this._placeholder, this);\n    document.body.appendChild(this);\n    this.bringToFront();\n  }\n\n  /** @protected */\n  _finishOpening() {\n    document.addEventListener('iron-overlay-canceled', this._boundIronOverlayCanceledListener);\n    this.removeAttribute('opening');\n  }\n\n  /** @protected */\n  _finishClosing() {\n    document.removeEventListener('iron-overlay-canceled', this._boundIronOverlayCanceledListener);\n    this._detachOverlay();\n    this.$.overlay.style.removeProperty('pointer-events');\n    this.removeAttribute('closing');\n  }\n\n  /**\n   * @event vaadin-overlay-closing\n   * Fired when the overlay will be closed.\n   *\n   * @protected\n   */\n  _animatedClosing() {\n    if (this.hasAttribute('opening')) {\n      this._flushAnimation('opening');\n    }\n    if (this._placeholder) {\n      this._exitModalState();\n\n      // Use this.restoreFocusNode if specified, otherwise fallback to the node\n      // which was focused before opening the overlay.\n      const restoreFocusNode = this.restoreFocusNode || this.__restoreFocusNode;\n\n      if (this.restoreFocusOnClose && restoreFocusNode) {\n        // If the activeElement is `<body>` or inside the overlay,\n        // we are allowed to restore the focus. In all the other\n        // cases focus might have been moved elsewhere by another\n        // component or by the user interaction (e.g. click on a\n        // button outside the overlay).\n        const activeElement = this._getActiveElement();\n\n        if (activeElement === document.body || this._deepContains(activeElement)) {\n          // Focusing the restoreFocusNode doesn't always work synchronously on Firefox and Safari\n          // (e.g. combo-box overlay close on outside click).\n          setTimeout(() => restoreFocusNode.focus());\n        }\n        this.__restoreFocusNode = null;\n      }\n\n      this.setAttribute('closing', '');\n      this.dispatchEvent(new CustomEvent('vaadin-overlay-closing'));\n\n      if (this._shouldAnimate()) {\n        this._enqueueAnimation('closing', () => {\n          this._finishClosing();\n        });\n      } else {\n        this._finishClosing();\n      }\n    }\n  }\n\n  /** @protected */\n  _detachOverlay() {\n    this._placeholder.parentNode.insertBefore(this, this._placeholder);\n    this._placeholder.parentNode.removeChild(this._placeholder);\n  }\n\n  /**\n   * Returns all attached overlays in visual stacking order.\n   * @private\n   */\n  static get __attachedInstances() {\n    return Array.from(document.body.children)\n      .filter((el) => el instanceof OverlayElement && !el.hasAttribute('closing'))\n      .sort((a, b) => a.__zIndex - b.__zIndex || 0);\n  }\n\n  /**\n   * returns true if this is the last one in the opened overlays stack\n   * @return {boolean}\n   * @protected\n   */\n  get _last() {\n    return this === OverlayElement.__attachedInstances.pop();\n  }\n\n  /** @private */\n  _modelessChanged(modeless) {\n    if (!modeless) {\n      if (this.opened) {\n        this._addGlobalListeners();\n        this._enterModalState();\n      }\n    } else {\n      this._removeGlobalListeners();\n      this._exitModalState();\n    }\n  }\n\n  /** @protected */\n  _addGlobalListeners() {\n    document.addEventListener('mousedown', this._boundMouseDownListener);\n    document.addEventListener('mouseup', this._boundMouseUpListener);\n    // Firefox leaks click to document on contextmenu even if prevented\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=990614\n    document.documentElement.addEventListener('click', this._boundOutsideClickListener, true);\n  }\n\n  /** @protected */\n  _enterModalState() {\n    if (document.body.style.pointerEvents !== 'none') {\n      // Set body pointer-events to 'none' to disable mouse interactions with\n      // other document nodes.\n      this._previousDocumentPointerEvents = document.body.style.pointerEvents;\n      document.body.style.pointerEvents = 'none';\n    }\n\n    // Disable pointer events in other attached overlays\n    OverlayElement.__attachedInstances.forEach((el) => {\n      if (el !== this) {\n        el.shadowRoot.querySelector('[part=\"overlay\"]').style.pointerEvents = 'none';\n      }\n    });\n  }\n\n  /** @protected */\n  _removeGlobalListeners() {\n    document.removeEventListener('mousedown', this._boundMouseDownListener);\n    document.removeEventListener('mouseup', this._boundMouseUpListener);\n    document.documentElement.removeEventListener('click', this._boundOutsideClickListener, true);\n  }\n\n  /** @protected */\n  _exitModalState() {\n    if (this._previousDocumentPointerEvents !== undefined) {\n      // Restore body pointer-events\n      document.body.style.pointerEvents = this._previousDocumentPointerEvents;\n      delete this._previousDocumentPointerEvents;\n    }\n\n    // Restore pointer events in the previous overlay(s)\n    const instances = OverlayElement.__attachedInstances;\n    let el;\n    // Use instances.pop() to ensure the reverse order\n    while ((el = instances.pop())) {\n      if (el === this) {\n        // Skip the current instance\n        continue;\n      }\n      el.shadowRoot.querySelector('[part=\"overlay\"]').style.removeProperty('pointer-events');\n      if (!el.modeless) {\n        // Stop after the last modal\n        break;\n      }\n    }\n  }\n\n  /** @protected */\n  _removeOldContent() {\n    if (!this.content || !this._contentNodes) {\n      return;\n    }\n\n    this._observer.disconnect();\n\n    this._contentNodes.forEach((node) => {\n      if (node.parentNode === this.content) {\n        this.content.removeChild(node);\n      }\n    });\n\n    if (this._originalContentPart) {\n      // Restore the original <div part=\"content\">\n      this.$.content.parentNode.replaceChild(this._originalContentPart, this.$.content);\n      this.$.content = this._originalContentPart;\n      this._originalContentPart = undefined;\n    }\n\n    this._observer.connect();\n\n    this._contentNodes = undefined;\n    this.content = undefined;\n  }\n\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @protected\n   */\n  _stampOverlayTemplate(template) {\n    this._removeOldContent();\n\n    if (!template._Templatizer) {\n      template._Templatizer = templatize(template, this, {\n        forwardHostProp: function (prop, value) {\n          if (this._instance) {\n            this._instance.forwardHostProp(prop, value);\n          }\n        },\n      });\n    }\n\n    this._instance = new template._Templatizer({});\n    this._contentNodes = Array.from(this._instance.root.childNodes);\n\n    const templateRoot = template._templateRoot || (template._templateRoot = template.getRootNode());\n\n    if (templateRoot !== document) {\n      if (!this.$.content.shadowRoot) {\n        this.$.content.attachShadow({ mode: 'open' });\n      }\n\n      let scopeCssText = Array.from(templateRoot.querySelectorAll('style')).reduce(\n        (result, style) => result + style.textContent,\n        '',\n      );\n\n      // The overlay root’s :host styles should not apply inside the overlay\n      scopeCssText = scopeCssText.replace(/:host/g, ':host-nomatch');\n\n      if (scopeCssText) {\n        // Append a style to the content shadowRoot\n        const style = document.createElement('style');\n        style.textContent = scopeCssText;\n        this.$.content.shadowRoot.appendChild(style);\n        this._contentNodes.unshift(style);\n      }\n\n      this.$.content.shadowRoot.appendChild(this._instance.root);\n      this.content = this.$.content.shadowRoot;\n    } else {\n      this.appendChild(this._instance.root);\n      this.content = this;\n    }\n  }\n\n  /** @private */\n  _removeNewRendererOrTemplate(template, oldTemplate, renderer, oldRenderer) {\n    if (template !== oldTemplate) {\n      this.template = undefined;\n    } else if (renderer !== oldRenderer) {\n      this.renderer = undefined;\n    }\n  }\n\n  /** @private */\n  // eslint-disable-next-line max-params\n  _templateOrRendererChanged(template, renderer, owner, model, opened) {\n    if (template && renderer) {\n      this._removeNewRendererOrTemplate(template, this._oldTemplate, renderer, this._oldRenderer);\n      throw new Error('You should only use either a renderer or a template for overlay content');\n    }\n\n    const ownerOrModelChanged = this._oldOwner !== owner || this._oldModel !== model;\n    this._oldModel = model;\n    this._oldOwner = owner;\n\n    const templateChanged = this._oldTemplate !== template;\n    this._oldTemplate = template;\n\n    const rendererChanged = this._oldRenderer !== renderer;\n    this._oldRenderer = renderer;\n\n    const openedChanged = this._oldOpened !== opened;\n    this._oldOpened = opened;\n\n    if (rendererChanged) {\n      this.content = this;\n      this.content.innerHTML = '';\n      // Whenever a Lit-based renderer is used, it assigns a Lit part to the node it was rendered into.\n      // When clearing the rendered content, this part needs to be manually disposed of.\n      // Otherwise, using a Lit-based renderer on the same node will throw an exception or render nothing afterward.\n      delete this.content._$litPart$;\n    }\n\n    if (template && templateChanged) {\n      this._stampOverlayTemplate(template);\n    } else if (renderer && (rendererChanged || openedChanged || ownerOrModelChanged)) {\n      if (opened) {\n        this.requestContentUpdate();\n      }\n    }\n  }\n\n  /**\n   * @return {!Element}\n   * @protected\n   */\n  _getActiveElement() {\n    // document.activeElement can be null\n    // https://developer.mozilla.org/en-US/docs/Web/API/Document/activeElement\n    let active = document.activeElement || document.body;\n    while (active.shadowRoot && active.shadowRoot.activeElement) {\n      active = active.shadowRoot.activeElement;\n    }\n    return active;\n  }\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   * @protected\n   */\n  _deepContains(node) {\n    if (this.contains(node)) {\n      return true;\n    }\n    let n = node;\n    const doc = node.ownerDocument;\n    // walk from node to `this` or `document`\n    while (n && n !== doc && n !== this) {\n      n = n.parentNode || n.host;\n    }\n    return n === this;\n  }\n\n  /**\n   * Brings the overlay as visually the frontmost one\n   */\n  bringToFront() {\n    let zIndex = '';\n    const frontmost = OverlayElement.__attachedInstances.filter((o) => o !== this).pop();\n    if (frontmost) {\n      const frontmostZIndex = frontmost.__zIndex;\n      zIndex = frontmostZIndex + 1;\n    }\n    this.style.zIndex = zIndex;\n    this.__zIndex = zIndex || parseFloat(getComputedStyle(this).zIndex);\n  }\n}\n\ncustomElements.define(OverlayElement.is, OverlayElement);\nexport { OverlayElement };\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Module for preparing and stamping instances of templates that utilize\n * Polymer's data-binding and declarative event listener features.\n *\n * Example:\n *\n *     // Get a template from somewhere, e.g. light DOM\n *     let template = this.querySelector('template');\n *     // Prepare the template\n *     let TemplateClass = Templatize.templatize(template);\n *     // Instance the template with an initial data model\n *     let instance = new TemplateClass({myProp: 'initial'});\n *     // Insert the instance's DOM somewhere, e.g. element's shadow DOM\n *     this.shadowRoot.appendChild(instance.root);\n *     // Changing a property on the instance will propagate to bindings\n *     // in the template\n *     instance.myProp = 'new value';\n *\n * The `options` dictionary passed to `templatize` allows for customizing\n * features of the generated template class, including how outer-scope host\n * properties should be forwarded into template instances, how any instance\n * properties added into the template's scope should be notified out to\n * the host, and whether the instance should be decorated as a \"parent model\"\n * of any event handlers.\n *\n *     // Customize property forwarding and event model decoration\n *     let TemplateClass = Templatize.templatize(template, this, {\n *       parentModel: true,\n *       forwardHostProp(property, value) {...},\n *       instanceProps: {...},\n *       notifyInstanceProp(instance, property, value) {...},\n *     });\n *\n * @summary Module for preparing and stamping instances of templates\n *   utilizing Polymer templating features.\n */\n\nimport './boot.js';\n\nimport { PropertyEffects } from '../mixins/property-effects.js';\nimport { MutableData } from '../mixins/mutable-data.js';\nimport { strictTemplatePolicy, legacyWarnings } from './settings.js';\nimport { wrap } from './wrap.js';\n\n// Base class for HTMLTemplateElement extension that has property effects\n// machinery for propagating host properties to children. This is an ES5\n// class only because Babel (incorrectly) requires super() in the class\n// constructor even though no `this` is used and it returns an instance.\nlet newInstance = null;\n\n/**\n * @constructor\n * @extends {HTMLTemplateElement}\n * @private\n */\nfunction HTMLTemplateElementExtension() { return newInstance; }\nHTMLTemplateElementExtension.prototype = Object.create(HTMLTemplateElement.prototype, {\n  constructor: {\n    value: HTMLTemplateElementExtension,\n    writable: true\n  }\n});\n\n/**\n * @constructor\n * @implements {Polymer_PropertyEffects}\n * @extends {HTMLTemplateElementExtension}\n * @private\n */\nconst DataTemplate = PropertyEffects(HTMLTemplateElementExtension);\n\n/**\n * @constructor\n * @implements {Polymer_MutableData}\n * @extends {DataTemplate}\n * @private\n */\nconst MutableDataTemplate = MutableData(DataTemplate);\n\n// Applies a DataTemplate subclass to a <template> instance\nfunction upgradeTemplate(template, constructor) {\n  newInstance = template;\n  Object.setPrototypeOf(template, constructor.prototype);\n  new constructor();\n  newInstance = null;\n}\n\n/**\n * Base class for TemplateInstance.\n * @constructor\n * @extends {HTMLElement}\n * @implements {Polymer_PropertyEffects}\n * @private\n */\nconst templateInstanceBase = PropertyEffects(class {});\n\nexport function showHideChildren(hide, children) {\n  for (let i=0; i<children.length; i++) {\n    let n = children[i];\n    // Ignore non-changes\n    if (Boolean(hide) != Boolean(n.__hideTemplateChildren__)) {\n      // clear and restore text\n      if (n.nodeType === Node.TEXT_NODE) {\n        if (hide) {\n          n.__polymerTextContent__ = n.textContent;\n          n.textContent = '';\n        } else {\n          n.textContent = n.__polymerTextContent__;\n        }\n      // remove and replace slot\n      } else if (n.localName === 'slot') {\n        if (hide) {\n          n.__polymerReplaced__ = document.createComment('hidden-slot');\n          wrap(wrap(n).parentNode).replaceChild(n.__polymerReplaced__, n);\n        } else {\n          const replace = n.__polymerReplaced__;\n          if (replace) {\n            wrap(wrap(replace).parentNode).replaceChild(n, replace);\n          }\n        }\n      }\n      // hide and show nodes\n      else if (n.style) {\n        if (hide) {\n          n.__polymerDisplay__ = n.style.display;\n          n.style.display = 'none';\n        } else {\n          n.style.display = n.__polymerDisplay__;\n        }\n      }\n    }\n    n.__hideTemplateChildren__ = hide;\n    if (n._showHideChildren) {\n      n._showHideChildren(hide);\n    }\n  }\n}\n\n/**\n * @polymer\n * @customElement\n * @appliesMixin PropertyEffects\n * @unrestricted\n */\nclass TemplateInstanceBase extends templateInstanceBase {\n  constructor(props) {\n    super();\n    this._configureProperties(props);\n    /** @type {!StampedTemplate} */\n    this.root = this._stampTemplate(this.__dataHost);\n    // Save list of stamped children\n    let children = [];\n    /** @suppress {invalidCasts} */\n    this.children = /** @type {!NodeList} */ (children);\n    // Polymer 1.x did not use `Polymer.dom` here so not bothering.\n    for (let n = this.root.firstChild; n; n=n.nextSibling) {\n      children.push(n);\n      n.__templatizeInstance = this;\n    }\n    if (this.__templatizeOwner &&\n      this.__templatizeOwner.__hideTemplateChildren__) {\n      this._showHideChildren(true);\n    }\n    // Flush props only when props are passed if instance props exist\n    // or when there isn't instance props.\n    let options = this.__templatizeOptions;\n    if ((props && options.instanceProps) || !options.instanceProps) {\n      this._enableProperties();\n    }\n  }\n  /**\n   * Configure the given `props` by calling `_setPendingProperty`. Also\n   * sets any properties stored in `__hostProps`.\n   * @private\n   * @param {Object} props Object of property name-value pairs to set.\n   * @return {void}\n   */\n  _configureProperties(props) {\n    let options = this.__templatizeOptions;\n    if (options.forwardHostProp) {\n      for (let hprop in this.__hostProps) {\n        this._setPendingProperty(hprop, this.__dataHost['_host_' + hprop]);\n      }\n    }\n    // Any instance props passed in the constructor will overwrite host props;\n    // normally this would be a user error but we don't specifically filter them\n    for (let iprop in props) {\n      this._setPendingProperty(iprop, props[iprop]);\n    }\n  }\n  /**\n   * Forwards a host property to this instance.  This method should be\n   * called on instances from the `options.forwardHostProp` callback\n   * to propagate changes of host properties to each instance.\n   *\n   * Note this method enqueues the change, which are flushed as a batch.\n   *\n   * @param {string} prop Property or path name\n   * @param {*} value Value of the property to forward\n   * @return {void}\n   */\n  forwardHostProp(prop, value) {\n    if (this._setPendingPropertyOrPath(prop, value, false, true)) {\n      this.__dataHost._enqueueClient(this);\n    }\n  }\n\n  /**\n   * Override point for adding custom or simulated event handling.\n   *\n   * @override\n   * @param {!Node} node Node to add event listener to\n   * @param {string} eventName Name of event\n   * @param {function(!Event):void} handler Listener function to add\n   * @return {void}\n   */\n  _addEventListenerToNode(node, eventName, handler) {\n    if (this._methodHost && this.__templatizeOptions.parentModel) {\n      // If this instance should be considered a parent model, decorate\n      // events this template instance as `model`\n      this._methodHost._addEventListenerToNode(node, eventName, (e) => {\n        e.model = this;\n        handler(e);\n      });\n    } else {\n      // Otherwise delegate to the template's host (which could be)\n      // another template instance\n      let templateHost = this.__dataHost.__dataHost;\n      if (templateHost) {\n        templateHost._addEventListenerToNode(node, eventName, handler);\n      }\n    }\n  }\n  /**\n   * Shows or hides the template instance top level child elements. For\n   * text nodes, `textContent` is removed while \"hidden\" and replaced when\n   * \"shown.\"\n   * @param {boolean} hide Set to true to hide the children;\n   * set to false to show them.\n   * @return {void}\n   * @protected\n   */\n  _showHideChildren(hide) {\n    showHideChildren(hide, this.children);\n  }\n  /**\n   * Overrides default property-effects implementation to intercept\n   * textContent bindings while children are \"hidden\" and cache in\n   * private storage for later retrieval.\n   *\n   * @override\n   * @param {!Node} node The node to set a property on\n   * @param {string} prop The property to set\n   * @param {*} value The value to set\n   * @return {void}\n   * @protected\n   */\n  _setUnmanagedPropertyToNode(node, prop, value) {\n    if (node.__hideTemplateChildren__ &&\n        node.nodeType == Node.TEXT_NODE && prop == 'textContent') {\n      node.__polymerTextContent__ = value;\n    } else {\n      super._setUnmanagedPropertyToNode(node, prop, value);\n    }\n  }\n  /**\n   * Find the parent model of this template instance.  The parent model\n   * is either another templatize instance that had option `parentModel: true`,\n   * or else the host element.\n   *\n   * @return {!Polymer_PropertyEffects} The parent model of this instance\n   */\n  get parentModel() {\n    let model = this.__parentModel;\n    if (!model) {\n      let options;\n      model = this;\n      do {\n        // A template instance's `__dataHost` is a <template>\n        // `model.__dataHost.__dataHost` is the template's host\n        model = model.__dataHost.__dataHost;\n      } while ((options = model.__templatizeOptions) && !options.parentModel);\n      this.__parentModel = model;\n    }\n    return model;\n  }\n\n  /**\n   * Stub of HTMLElement's `dispatchEvent`, so that effects that may\n   * dispatch events safely no-op.\n   *\n   * @param {Event} event Event to dispatch\n   * @return {boolean} Always true.\n   * @override\n   */\n   dispatchEvent(event) { // eslint-disable-line no-unused-vars\n     return true;\n  }\n}\n\n/** @type {!DataTemplate} */\nTemplateInstanceBase.prototype.__dataHost;\n/** @type {!TemplatizeOptions} */\nTemplateInstanceBase.prototype.__templatizeOptions;\n/** @type {!Polymer_PropertyEffects} */\nTemplateInstanceBase.prototype._methodHost;\n/** @type {!Object} */\nTemplateInstanceBase.prototype.__templatizeOwner;\n/** @type {!Object} */\nTemplateInstanceBase.prototype.__hostProps;\n\n/**\n * @constructor\n * @extends {TemplateInstanceBase}\n * @implements {Polymer_MutableData}\n * @private\n */\nconst MutableTemplateInstanceBase = MutableData(\n    // This cast shouldn't be neccessary, but Closure doesn't understand that\n    // TemplateInstanceBase is a constructor function.\n    /** @type {function(new:TemplateInstanceBase)} */ (TemplateInstanceBase));\n\nfunction findMethodHost(template) {\n  // Technically this should be the owner of the outermost template.\n  // In shadow dom, this is always getRootNode().host, but we can\n  // approximate this via cooperation with our dataHost always setting\n  // `_methodHost` as long as there were bindings (or id's) on this\n  // instance causing it to get a dataHost.\n  let templateHost = template.__dataHost;\n  return templateHost && templateHost._methodHost || templateHost;\n}\n\n/* eslint-disable valid-jsdoc */\n/**\n * @suppress {missingProperties} class.prototype is not defined for some reason\n */\nfunction createTemplatizerClass(template, templateInfo, options) {\n  /**\n   * @constructor\n   * @extends {TemplateInstanceBase}\n   */\n  let templatizerBase = options.mutableData ?\n    MutableTemplateInstanceBase : TemplateInstanceBase;\n\n  // Affordance for global mixins onto TemplatizeInstance\n  if (templatize.mixin) {\n    templatizerBase = templatize.mixin(templatizerBase);\n  }\n\n  /**\n   * Anonymous class created by the templatize\n   * @constructor\n   * @private\n   */\n  let klass = class extends templatizerBase { };\n  /** @override */\n  klass.prototype.__templatizeOptions = options;\n  klass.prototype._bindTemplate(template);\n  addNotifyEffects(klass, template, templateInfo, options);\n  return klass;\n}\n\n/**\n * Adds propagate effects from the template to the template instance for\n * properties that the host binds to the template using the `_host_` prefix.\n *\n * @suppress {missingProperties} class.prototype is not defined for some reason\n */\nfunction addPropagateEffects(target, templateInfo, options, methodHost) {\n  let userForwardHostProp = options.forwardHostProp;\n  if (userForwardHostProp && templateInfo.hasHostProps) {\n    // Under the `removeNestedTemplates` optimization, a custom element like\n    // `dom-if` or `dom-repeat` can itself be treated as the \"template\"; this\n    // flag is used to switch between upgrading a `<template>` to be a property\n    // effects client vs. adding the effects directly to the custom element\n    const isTemplate = target.localName == 'template';\n    // Provide data API and property effects on memoized template class\n    let klass = templateInfo.templatizeTemplateClass;\n    if (!klass) {\n      if (isTemplate) {\n        /**\n         * @constructor\n         * @extends {DataTemplate}\n         */\n        let templatizedBase =\n            options.mutableData ? MutableDataTemplate : DataTemplate;\n\n        // NOTE: due to https://github.com/google/closure-compiler/issues/2928,\n        // combining the next two lines into one assignment causes a spurious\n        // type error.\n        /** @private */\n        class TemplatizedTemplate extends templatizedBase {}\n        klass = templateInfo.templatizeTemplateClass = TemplatizedTemplate;\n      } else {\n        /**\n         * @constructor\n         * @extends {PolymerElement}\n         */\n        const templatizedBase = target.constructor;\n\n        // Create a cached subclass of the base custom element class onto which\n        // to put the template-specific propagate effects\n        // NOTE: due to https://github.com/google/closure-compiler/issues/2928,\n        // combining the next two lines into one assignment causes a spurious\n        // type error.\n        /** @private */\n        class TemplatizedTemplateExtension extends templatizedBase {}\n        klass = templateInfo.templatizeTemplateClass =\n            TemplatizedTemplateExtension;\n      }\n      // Add template - >instances effects\n      // and host <- template effects\n      let hostProps = templateInfo.hostProps;\n      for (let prop in hostProps) {\n        klass.prototype._addPropertyEffect('_host_' + prop,\n          klass.prototype.PROPERTY_EFFECT_TYPES.PROPAGATE,\n          {fn: createForwardHostPropEffect(prop, userForwardHostProp)});\n        klass.prototype._createNotifyingProperty('_host_' + prop);\n      }\n      if (legacyWarnings && methodHost) {\n        warnOnUndeclaredProperties(templateInfo, options, methodHost);\n      }\n    }\n    // Mix any pre-bound data into __data; no need to flush this to\n    // instances since they pull from the template at instance-time\n    if (target.__dataProto) {\n      // Note, generally `__dataProto` could be chained, but it's guaranteed\n      // to not be since this is a vanilla template we just added effects to\n      Object.assign(target.__data, target.__dataProto);\n    }\n    if (isTemplate) {\n      upgradeTemplate(target, klass);\n      // Clear any pending data for performance\n      target.__dataTemp = {};\n      target.__dataPending = null;\n      target.__dataOld = null;\n      target._enableProperties();\n    } else {\n      // Swizzle the cached subclass prototype onto the custom element\n      Object.setPrototypeOf(target, klass.prototype);\n      // Check for any pre-bound instance host properties, and do the\n      // instance property delete/assign dance for those (directly into data;\n      // not need to go through accessor since they are pulled at instance time)\n      const hostProps = templateInfo.hostProps;\n      for (let prop in hostProps) {\n        prop = '_host_' + prop;\n        if (prop in target) {\n          const val = target[prop];\n          delete target[prop];\n          target.__data[prop] = val;\n        }\n      }\n    }\n  }\n}\n/* eslint-enable valid-jsdoc */\n\nfunction createForwardHostPropEffect(hostProp, userForwardHostProp) {\n  return function forwardHostProp(template, prop, props) {\n    userForwardHostProp.call(template.__templatizeOwner,\n      prop.substring('_host_'.length), props[prop]);\n  };\n}\n\nfunction addNotifyEffects(klass, template, templateInfo, options) {\n  let hostProps = templateInfo.hostProps || {};\n  for (let iprop in options.instanceProps) {\n    delete hostProps[iprop];\n    let userNotifyInstanceProp = options.notifyInstanceProp;\n    if (userNotifyInstanceProp) {\n      klass.prototype._addPropertyEffect(iprop,\n        klass.prototype.PROPERTY_EFFECT_TYPES.NOTIFY,\n        {fn: createNotifyInstancePropEffect(iprop, userNotifyInstanceProp)});\n    }\n  }\n  if (options.forwardHostProp && template.__dataHost) {\n    for (let hprop in hostProps) {\n      // As we're iterating hostProps in this function, note whether\n      // there were any, for an optimization in addPropagateEffects\n      if (!templateInfo.hasHostProps) {\n        templateInfo.hasHostProps = true;\n      }\n      klass.prototype._addPropertyEffect(hprop,\n        klass.prototype.PROPERTY_EFFECT_TYPES.NOTIFY,\n        {fn: createNotifyHostPropEffect()});\n    }\n  }\n}\n\nfunction createNotifyInstancePropEffect(instProp, userNotifyInstanceProp) {\n  return function notifyInstanceProp(inst, prop, props) {\n    userNotifyInstanceProp.call(inst.__templatizeOwner,\n      inst, prop, props[prop]);\n  };\n}\n\nfunction createNotifyHostPropEffect() {\n  return function notifyHostProp(inst, prop, props) {\n    inst.__dataHost._setPendingPropertyOrPath('_host_' + prop, props[prop], true, true);\n  };\n}\n\n\n/**\n * Returns an anonymous `PropertyEffects` class bound to the\n * `<template>` provided.  Instancing the class will result in the\n * template being stamped into a document fragment stored as the instance's\n * `root` property, after which it can be appended to the DOM.\n *\n * Templates may utilize all Polymer data-binding features as well as\n * declarative event listeners.  Event listeners and inline computing\n * functions in the template will be called on the host of the template.\n *\n * The constructor returned takes a single argument dictionary of initial\n * property values to propagate into template bindings.  Additionally\n * host properties can be forwarded in, and instance properties can be\n * notified out by providing optional callbacks in the `options` dictionary.\n *\n * Valid configuration in `options` are as follows:\n *\n * - `forwardHostProp(property, value)`: Called when a property referenced\n *   in the template changed on the template's host. As this library does\n *   not retain references to templates instanced by the user, it is the\n *   templatize owner's responsibility to forward host property changes into\n *   user-stamped instances.  The `instance.forwardHostProp(property, value)`\n *    method on the generated class should be called to forward host\n *   properties into the template to prevent unnecessary property-changed\n *   notifications. Any properties referenced in the template that are not\n *   defined in `instanceProps` will be notified up to the template's host\n *   automatically.\n * - `instanceProps`: Dictionary of property names that will be added\n *   to the instance by the templatize owner.  These properties shadow any\n *   host properties, and changes within the template to these properties\n *   will result in `notifyInstanceProp` being called.\n * - `mutableData`: When `true`, the generated class will skip strict\n *   dirty-checking for objects and arrays (always consider them to be\n *   \"dirty\").\n * - `notifyInstanceProp(instance, property, value)`: Called when\n *   an instance property changes.  Users may choose to call `notifyPath`\n *   on e.g. the owner to notify the change.\n * - `parentModel`: When `true`, events handled by declarative event listeners\n *   (`on-event=\"handler\"`) will be decorated with a `model` property pointing\n *   to the template instance that stamped it.  It will also be returned\n *   from `instance.parentModel` in cases where template instance nesting\n *   causes an inner model to shadow an outer model.\n *\n * All callbacks are called bound to the `owner`. Any context\n * needed for the callbacks (such as references to `instances` stamped)\n * should be stored on the `owner` such that they can be retrieved via\n * `this`.\n *\n * When `options.forwardHostProp` is declared as an option, any properties\n * referenced in the template will be automatically forwarded from the host of\n * the `<template>` to instances, with the exception of any properties listed in\n * the `options.instanceProps` object.  `instanceProps` are assumed to be\n * managed by the owner of the instances, either passed into the constructor\n * or set after the fact.  Note, any properties passed into the constructor will\n * always be set to the instance (regardless of whether they would normally\n * be forwarded from the host).\n *\n * Note that `templatize()` can be run only once for a given `<template>`.\n * Further calls will result in an error. Also, there is a special\n * behavior if the template was duplicated through a mechanism such as\n * `<dom-repeat>` or `<test-fixture>`. In this case, all calls to\n * `templatize()` return the same class for all duplicates of a template.\n * The class returned from `templatize()` is generated only once using\n * the `options` from the first call. This means that any `options`\n * provided to subsequent calls will be ignored. Therefore, it is very\n * important not to close over any variables inside the callbacks. Also,\n * arrow functions must be avoided because they bind the outer `this`.\n * Inside the callbacks, any contextual information can be accessed\n * through `this`, which points to the `owner`.\n *\n * @param {!HTMLTemplateElement} template Template to templatize\n * @param {Polymer_PropertyEffects=} owner Owner of the template instances;\n *   any optional callbacks will be bound to this owner.\n * @param {Object=} options Options dictionary (see summary for details)\n * @return {function(new:TemplateInstanceBase, Object=)} Generated class bound\n *   to the template provided\n * @suppress {invalidCasts}\n */\nexport function templatize(template, owner, options) {\n  // Under strictTemplatePolicy, the templatized element must be owned\n  // by a (trusted) Polymer element, indicated by existence of _methodHost;\n  // e.g. for dom-if & dom-repeat in main document, _methodHost is null\n  if (strictTemplatePolicy && !findMethodHost(template)) {\n    throw new Error('strictTemplatePolicy: template owner not trusted');\n  }\n  options = /** @type {!TemplatizeOptions} */(options || {});\n  if (template.__templatizeOwner) {\n    throw new Error('A <template> can only be templatized once');\n  }\n  template.__templatizeOwner = owner;\n  const ctor = owner ? owner.constructor : TemplateInstanceBase;\n  let templateInfo = ctor._parseTemplate(template);\n  // Get memoized base class for the prototypical template, which\n  // includes property effects for binding template & forwarding\n  /**\n   * @constructor\n   * @extends {TemplateInstanceBase}\n   */\n  let baseClass = templateInfo.templatizeInstanceClass;\n  if (!baseClass) {\n    baseClass = createTemplatizerClass(template, templateInfo, options);\n    templateInfo.templatizeInstanceClass = baseClass;\n  }\n  const methodHost = findMethodHost(template);\n  // Host property forwarding must be installed onto template instance\n  addPropagateEffects(template, templateInfo, options, methodHost);\n  // Subclass base class and add reference for this specific template\n  /** @private */\n  let klass = class TemplateInstance extends baseClass {};\n  /** @override */\n  klass.prototype._methodHost = methodHost;\n  /** @override */\n  klass.prototype.__dataHost = /** @type {!DataTemplate} */ (template);\n  /** @override */\n  klass.prototype.__templatizeOwner = /** @type {!Object} */ (owner);\n  /** @override */\n  klass.prototype.__hostProps = templateInfo.hostProps;\n  klass = /** @type {function(new:TemplateInstanceBase)} */(klass); //eslint-disable-line no-self-assign\n  return klass;\n}\n\nfunction warnOnUndeclaredProperties(templateInfo, options, methodHost) {\n  const declaredProps = methodHost.constructor._properties;\n  const {propertyEffects} = templateInfo;\n  const {instanceProps} = options;\n  for (let prop in propertyEffects) {\n    // Ensure properties with template effects are declared on the outermost\n    // host (`methodHost`), unless they are instance props or static functions\n    if (!declaredProps[prop] && !(instanceProps && instanceProps[prop])) {\n      const effects = propertyEffects[prop];\n      for (let i=0; i<effects.length; i++) {\n        const {part} = effects[i].info;\n        if (!(part.signature && part.signature.static)) {\n          console.warn(`Property '${prop}' used in template but not ` +\n            `declared in 'properties'; attribute will not be observed.`);\n          break;\n        }\n      }\n    }\n  }\n}\n\n/**\n * Returns the template \"model\" associated with a given element, which\n * serves as the binding scope for the template instance the element is\n * contained in. A template model is an instance of\n * `TemplateInstanceBase`, and should be used to manipulate data\n * associated with this template instance.\n *\n * Example:\n *\n *   let model = modelForElement(el);\n *   if (model.index < 10) {\n *     model.set('item.checked', true);\n *   }\n *\n * @param {HTMLElement} template The model will be returned for\n *   elements stamped from this template (accepts either an HTMLTemplateElement)\n *   or a `<dom-if>`/`<dom-repeat>` element when using `removeNestedTemplates`\n *   optimization.\n * @param {Node=} node Node for which to return a template model.\n * @return {TemplateInstanceBase} Template instance representing the\n *   binding scope for the element\n */\nexport function modelForElement(template, node) {\n  let model;\n  while (node) {\n    // An element with a __templatizeInstance marks the top boundary\n    // of a scope; walk up until we find one, and then ensure that\n    // its __dataHost matches `this`, meaning this dom-repeat stamped it\n    if ((model = node.__dataHost ? node : node.__templatizeInstance)) {\n      // Found an element stamped by another template; keep walking up\n      // from its __dataHost\n      if (model.__dataHost != template) {\n        node = model.__dataHost;\n      } else {\n        return model;\n      }\n    } else {\n      // Still in a template scope, keep going up until\n      // a __templatizeInstance is found\n      node = wrap(node).parentNode;\n    }\n  }\n  return null;\n}\n\nexport { TemplateInstanceBase };\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport { dedupingMixin } from '../utils/mixin.js';\n\n// Common implementation for mixin & behavior\nfunction mutablePropertyChange(inst, property, value, old, mutableData) {\n  let isObject;\n  if (mutableData) {\n    isObject = (typeof value === 'object' && value !== null);\n    // Pull `old` for Objects from temp cache, but treat `null` as a primitive\n    if (isObject) {\n      old = inst.__dataTemp[property];\n    }\n  }\n  // Strict equality check, but return false for NaN===NaN\n  let shouldChange = (old !== value && (old === old || value === value));\n  // Objects are stored in temporary cache (cleared at end of\n  // turn), which is used for dirty-checking\n  if (isObject && shouldChange) {\n    inst.__dataTemp[property] = value;\n  }\n  return shouldChange;\n}\n\n/**\n * Element class mixin to skip strict dirty-checking for objects and arrays\n * (always consider them to be \"dirty\"), for use on elements utilizing\n * `PropertyEffects`\n *\n * By default, `PropertyEffects` performs strict dirty checking on\n * objects, which means that any deep modifications to an object or array will\n * not be propagated unless \"immutable\" data patterns are used (i.e. all object\n * references from the root to the mutation were changed).\n *\n * Polymer also provides a proprietary data mutation and path notification API\n * (e.g. `notifyPath`, `set`, and array mutation API's) that allow efficient\n * mutation and notification of deep changes in an object graph to all elements\n * bound to the same object graph.\n *\n * In cases where neither immutable patterns nor the data mutation API can be\n * used, applying this mixin will cause Polymer to skip dirty checking for\n * objects and arrays (always consider them to be \"dirty\").  This allows a\n * user to make a deep modification to a bound object graph, and then either\n * simply re-set the object (e.g. `this.items = this.items`) or call `notifyPath`\n * (e.g. `this.notifyPath('items')`) to update the tree.  Note that all\n * elements that wish to be updated based on deep mutations must apply this\n * mixin or otherwise skip strict dirty checking for objects/arrays.\n * Specifically, any elements in the binding tree between the source of a\n * mutation and the consumption of it must apply this mixin or enable the\n * `OptionalMutableData` mixin.\n *\n * In order to make the dirty check strategy configurable, see\n * `OptionalMutableData`.\n *\n * Note, the performance characteristics of propagating large object graphs\n * will be worse as opposed to using strict dirty checking with immutable\n * patterns or Polymer's path notification API.\n *\n * @mixinFunction\n * @polymer\n * @summary Element class mixin to skip strict dirty-checking for objects\n *   and arrays\n * @template T\n * @param {function(new:T)} superClass Class to apply mixin to.\n * @return {function(new:T)} superClass with mixin applied.\n */\nexport const MutableData = dedupingMixin(superClass => {\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_MutableData}\n   */\n  class MutableData extends superClass {\n    /**\n     * Overrides `PropertyEffects` to provide option for skipping\n     * strict equality checking for Objects and Arrays.\n     *\n     * This method pulls the value to dirty check against from the `__dataTemp`\n     * cache (rather than the normal `__data` cache) for Objects.  Since the temp\n     * cache is cleared at the end of a turn, this implementation allows\n     * side-effects of deep object changes to be processed by re-setting the\n     * same object (using the temp cache as an in-turn backstop to prevent\n     * cycles due to 2-way notification).\n     *\n     * @param {string} property Property name\n     * @param {*} value New property value\n     * @param {*} old Previous property value\n     * @return {boolean} Whether the property should be considered a change\n     * @protected\n     */\n    _shouldPropertyChange(property, value, old) {\n      return mutablePropertyChange(this, property, value, old, true);\n    }\n\n  }\n\n  return MutableData;\n\n});\n\n/**\n * Element class mixin to add the optional ability to skip strict\n * dirty-checking for objects and arrays (always consider them to be\n * \"dirty\") by setting a `mutable-data` attribute on an element instance.\n *\n * By default, `PropertyEffects` performs strict dirty checking on\n * objects, which means that any deep modifications to an object or array will\n * not be propagated unless \"immutable\" data patterns are used (i.e. all object\n * references from the root to the mutation were changed).\n *\n * Polymer also provides a proprietary data mutation and path notification API\n * (e.g. `notifyPath`, `set`, and array mutation API's) that allow efficient\n * mutation and notification of deep changes in an object graph to all elements\n * bound to the same object graph.\n *\n * In cases where neither immutable patterns nor the data mutation API can be\n * used, applying this mixin will allow Polymer to skip dirty checking for\n * objects and arrays (always consider them to be \"dirty\").  This allows a\n * user to make a deep modification to a bound object graph, and then either\n * simply re-set the object (e.g. `this.items = this.items`) or call `notifyPath`\n * (e.g. `this.notifyPath('items')`) to update the tree.  Note that all\n * elements that wish to be updated based on deep mutations must apply this\n * mixin or otherwise skip strict dirty checking for objects/arrays.\n * Specifically, any elements in the binding tree between the source of a\n * mutation and the consumption of it must enable this mixin or apply the\n * `MutableData` mixin.\n *\n * While this mixin adds the ability to forgo Object/Array dirty checking,\n * the `mutableData` flag defaults to false and must be set on the instance.\n *\n * Note, the performance characteristics of propagating large object graphs\n * will be worse by relying on `mutableData: true` as opposed to using\n * strict dirty checking with immutable patterns or Polymer's path notification\n * API.\n *\n * @mixinFunction\n * @polymer\n * @summary Element class mixin to optionally skip strict dirty-checking\n *   for objects and arrays\n */\nexport const OptionalMutableData = dedupingMixin(superClass => {\n\n  /**\n   * @mixinClass\n   * @polymer\n   * @implements {Polymer_OptionalMutableData}\n   */\n  class OptionalMutableData extends superClass {\n\n    /** @nocollapse */\n    static get properties() {\n      return {\n        /**\n         * Instance-level flag for configuring the dirty-checking strategy\n         * for this element.  When true, Objects and Arrays will skip dirty\n         * checking, otherwise strict equality checking will be used.\n         */\n        mutableData: Boolean\n      };\n    }\n\n    /**\n     * Overrides `PropertyEffects` to provide option for skipping\n     * strict equality checking for Objects and Arrays.\n     *\n     * When `this.mutableData` is true on this instance, this method\n     * pulls the value to dirty check against from the `__dataTemp` cache\n     * (rather than the normal `__data` cache) for Objects.  Since the temp\n     * cache is cleared at the end of a turn, this implementation allows\n     * side-effects of deep object changes to be processed by re-setting the\n     * same object (using the temp cache as an in-turn backstop to prevent\n     * cycles due to 2-way notification).\n     *\n     * @param {string} property Property name\n     * @param {*} value New property value\n     * @param {*} old Previous property value\n     * @return {boolean} Whether the property should be considered a change\n     * @protected\n     */\n    _shouldPropertyChange(property, value, old) {\n      return mutablePropertyChange(this, property, value, old, this.mutableData);\n    }\n  }\n\n  return OptionalMutableData;\n\n});\n\n// Export for use by legacy behavior\nMutableData._mutablePropertyChange = mutablePropertyChange;\n","/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/font-icons.js';\nimport { inputFieldShared } from '@vaadin/vaadin-lumo-styles/mixins/input-field-shared.js';\nimport { menuOverlay } from '@vaadin/vaadin-lumo-styles/mixins/menu-overlay.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst select = css`\n  :host(:not([theme*='align'])) ::slotted([slot='value']) {\n    text-align: start;\n  }\n\n  [part='input-field'] {\n    cursor: var(--lumo-clickable-cursor);\n  }\n\n  [part='input-field'] ::slotted([slot='value']) {\n    font-weight: 500;\n  }\n\n  [part='input-field'] ::slotted([slot='value']:not([placeholder])) {\n    color: var(--lumo-body-text-color);\n  }\n\n  :host([readonly]) [part='input-field'] ::slotted([slot='value']:not([placeholder])) {\n    color: var(--lumo-secondary-text-color);\n  }\n\n  /* placeholder styles */\n  [part='input-field'] ::slotted([slot='value'][placeholder]) {\n    color: inherit;\n    transition: opacity 0.175s 0.1s;\n    opacity: 0.5;\n  }\n\n  [part='toggle-button']::before {\n    content: var(--lumo-icons-dropdown);\n  }\n\n  /* Highlight the toggle button when hovering over the entire component */\n  :host(:hover:not([readonly]):not([disabled])) [part='toggle-button'] {\n    color: var(--lumo-contrast-80pct);\n  }\n\n  :host([theme~='small']) [part='input-field'] ::slotted([slot='value']) {\n    --lumo-button-size: var(--lumo-size-s);\n    --_lumo-selected-item-padding: 0;\n  }\n`;\n\nregisterStyles('vaadin-select', [inputFieldShared, select], { moduleId: 'lumo-select' });\n\nregisterStyles(\n  'vaadin-select-value-button',\n  css`\n    :host {\n      padding: 0 0.25em;\n      --_lumo-selected-item-padding: 0.5em;\n    }\n\n    :host::before,\n    :host::after {\n      display: none;\n    }\n\n    :host([focus-ring]) {\n      box-shadow: none;\n    }\n\n    ::slotted(:not([slot])) {\n      min-height: var(--lumo-button-size);\n      padding-top: var(--_lumo-selected-item-padding);\n      padding-bottom: var(--_lumo-selected-item-padding);\n    }\n\n    ::slotted(:not([slot]):hover) {\n      background-color: transparent;\n    }\n  `,\n  { moduleId: 'lumo-select-value-button' },\n);\n\nconst selectOverlay = css`\n  :host {\n    --_lumo-item-selected-icon-display: block;\n  }\n\n  [part~='overlay'] {\n    min-width: var(--vaadin-select-text-field-width);\n  }\n\n  /* Small viewport adjustment */\n  :host([phone]) {\n    top: 0 !important;\n    right: 0 !important;\n    bottom: var(--vaadin-overlay-viewport-bottom, 0) !important;\n    left: 0 !important;\n    align-items: stretch;\n    justify-content: flex-end;\n  }\n\n  :host([theme~='align-left']) {\n    text-align: left;\n  }\n\n  :host([theme~='align-right']) {\n    text-align: right;\n  }\n\n  :host([theme~='align-center']) {\n    text-align: center;\n  }\n`;\n\nregisterStyles('vaadin-select-overlay', [menuOverlay, selectOverlay], { moduleId: 'lumo-select-overlay' });\n","/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '../spacing.js';\nimport '../style.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { overlay } from './overlay.js';\n\nconst menuOverlayCore = css`\n  :host([opening]),\n  :host([closing]) {\n    animation: 0.14s lumo-overlay-dummy-animation;\n  }\n\n  [part='overlay'] {\n    will-change: opacity, transform;\n  }\n\n  :host([opening]) [part='overlay'] {\n    animation: 0.1s lumo-menu-overlay-enter ease-out both;\n  }\n\n  @keyframes lumo-menu-overlay-enter {\n    0% {\n      opacity: 0;\n      transform: translateY(-4px);\n    }\n  }\n\n  :host([closing]) [part='overlay'] {\n    animation: 0.1s lumo-menu-overlay-exit both;\n  }\n\n  @keyframes lumo-menu-overlay-exit {\n    100% {\n      opacity: 0;\n    }\n  }\n`;\n\nregisterStyles('', menuOverlayCore, { moduleId: 'lumo-menu-overlay-core' });\n\nconst menuOverlayExt = css`\n  /* Small viewport (bottom sheet) styles */\n  /* Use direct media queries instead of the state attributes ([phone] and [fullscreen]) provided by the elements */\n  @media (max-width: 420px), (max-height: 420px) {\n    :host {\n      top: 0 !important;\n      right: 0 !important;\n      bottom: var(--vaadin-overlay-viewport-bottom, 0) !important;\n      left: 0 !important;\n      align-items: stretch !important;\n      justify-content: flex-end !important;\n    }\n\n    [part='overlay'] {\n      max-height: 50vh;\n      width: 100vw;\n      border-radius: 0;\n      box-shadow: var(--lumo-box-shadow-xl);\n    }\n\n    /* The content part scrolls instead of the overlay part, because of the gradient fade-out */\n    [part='content'] {\n      padding: 30px var(--lumo-space-m);\n      max-height: inherit;\n      box-sizing: border-box;\n      -webkit-overflow-scrolling: touch;\n      overflow: auto;\n      -webkit-mask-image: linear-gradient(transparent, #000 40px, #000 calc(100% - 40px), transparent);\n      mask-image: linear-gradient(transparent, #000 40px, #000 calc(100% - 40px), transparent);\n    }\n\n    [part='backdrop'] {\n      display: block;\n    }\n\n    /* Animations */\n\n    :host([opening]) [part='overlay'] {\n      animation: 0.2s lumo-mobile-menu-overlay-enter cubic-bezier(0.215, 0.61, 0.355, 1) both;\n    }\n\n    :host([closing]),\n    :host([closing]) [part='backdrop'] {\n      animation-delay: 0.14s;\n    }\n\n    :host([closing]) [part='overlay'] {\n      animation: 0.14s 0.14s lumo-mobile-menu-overlay-exit cubic-bezier(0.55, 0.055, 0.675, 0.19) both;\n    }\n  }\n\n  @keyframes lumo-mobile-menu-overlay-enter {\n    0% {\n      transform: translateY(150%);\n    }\n  }\n\n  @keyframes lumo-mobile-menu-overlay-exit {\n    100% {\n      transform: translateY(150%);\n    }\n  }\n`;\n\nconst menuOverlay = [overlay, menuOverlayCore, menuOverlayExt];\n\nregisterStyles('', menuOverlay, { moduleId: 'lumo-menu-overlay' });\n\nexport { menuOverlayCore, menuOverlay };\n","/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '@vaadin/input-container/src/vaadin-input-container.js';\nimport './vaadin-select-item.js';\nimport './vaadin-select-list-box.js';\nimport './vaadin-select-overlay.js';\nimport './vaadin-select-value-button.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { MediaQueryController } from '@vaadin/component-base/src/media-query-controller.js';\nimport { SlotMixin } from '@vaadin/component-base/src/slot-mixin.js';\nimport { processTemplates } from '@vaadin/component-base/src/templates.js';\nimport { DelegateFocusMixin } from '@vaadin/field-base/src/delegate-focus-mixin.js';\nimport { FieldMixin } from '@vaadin/field-base/src/field-mixin.js';\nimport { fieldShared } from '@vaadin/field-base/src/styles/field-shared-styles.js';\nimport { inputFieldContainer } from '@vaadin/field-base/src/styles/input-field-container-styles.js';\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles('vaadin-select', [fieldShared, inputFieldContainer], { moduleId: 'vaadin-select-styles' });\n\n/**\n * `<vaadin-select>` is a Web Component for selecting values from a list of items.\n *\n * ### Items\n *\n * Use the `items` property to define possible options for the select:\n *\n * ```html\n * <vaadin-select id=\"select\"></vaadin-select>\n * ```\n * ```js\n * const select = document.querySelector('#select');\n * select.items = [\n *   { label: 'Most recent first', value: 'recent' },\n *   { component: 'hr' },\n *   { label: 'Rating: low to high', value: 'rating-asc' },\n *   { label: 'Rating: high to low', value: 'rating-desc' },\n *   { component: 'hr' },\n *   { label: 'Price: low to high', value: 'price-asc', disabled: true },\n *   { label: 'Price: high to low', value: 'price-desc', disabled: true }\n * ];\n * ```\n *\n * ### Rendering\n *\n * Alternatively, the content of the select can be populated by using the renderer callback function.\n *\n * The renderer function provides `root`, `select` arguments.\n * Generate DOM content, append it to the `root` element and control the state\n * of the host element by accessing `select`.\n *\n * ```js\n * const select = document.querySelector('#select');\n * select.renderer = function(root, select) {\n *   const listBox = document.createElement('vaadin-list-box');\n *   // append 3 <vaadin-item> elements\n *   ['Jose', 'Manolo', 'Pedro'].forEach(function(name) {\n *     const item = document.createElement('vaadin-item');\n *     item.textContent = name;\n *     item.setAttribute('label', name)\n *     listBox.appendChild(item);\n *   });\n *\n *   // update the content\n *   root.appendChild(listBox);\n * };\n * ```\n *\n * Renderer is called on initialization of new select and on its opening.\n * DOM generated during the renderer call can be reused\n * in the next renderer call and will be provided with the `root` argument.\n * On first call it will be empty.\n *\n * * Hint: By setting the `label` property of inner vaadin-items you will\n * be able to change the visual representation of the selected value in the input part.\n *\n * ### Styling\n *\n * The following custom properties are available for styling:\n *\n * Custom property                    | Description                  | Target element          | Default\n * -----------------------------------|------------------------------|----------------------------------\n * `--vaadin-field-default-width`     | Default width of the field   | :host                   | `12em`\n * `--vaadin-select-text-field-width` | Effective width of the field | `vaadin-select-overlay` |\n *\n * `<vaadin-select>` provides mostly the same set of shadow DOM parts and state attributes as `<vaadin-text-field>`.\n * See [`<vaadin-text-field>`](#/elements/vaadin-text-field) for the styling documentation.\n *\n *\n * In addition to `<vaadin-text-field>` parts, the following parts are available for theming:\n *\n * Part name       | Description\n * ----------------|----------------\n * `toggle-button` | The toggle button\n *\n * In addition to `<vaadin-text-field>` state attributes, the following state attributes are available for theming:\n *\n * Attribute | Description                 | Part name\n * ----------|-----------------------------|-----------\n * `opened`  | Set when the select is open | :host\n *\n * There are two exceptions in terms of styling compared to `<vaadin-text-field>`:\n * - the `clear-button` shadow DOM part does not exist in `<vaadin-select>`.\n * - the `input-prevented` state attribute is not supported by `<vaadin-select>`.\n *\n * ### Internal components\n *\n * In addition to `<vaadin-select>` itself, the following internal\n * components are themable:\n *\n * - `<vaadin-select-overlay>` - has the same API as [`<vaadin-overlay>`](#/elements/vaadin-overlay).\n * - `<vaadin-select-value-button>` - has the same API as [`<vaadin-button>`](#/elements/vaadin-button).\n * - [`<vaadin-input-container>`](#/elements/vaadin-input-container) - an internal element wrapping the button.\n *\n * Note: the `theme` attribute value set on `<vaadin-select>` is\n * propagated to the internal components listed above.\n *\n * See [Styling Components](https://vaadin.com/docs/latest/ds/customization/styling-components) documentation.\n *\n * @fires {Event} change - Fired when the user commits a value change.\n * @fires {CustomEvent} invalid-changed - Fired when the `invalid` property changes.\n * @fires {CustomEvent} opened-changed - Fired when the `opened` property changes.\n * @fires {CustomEvent} value-changed - Fired when the `value` property changes.\n *\n * @extends HTMLElement\n * @mixes ElementMixin\n * @mixes ThemableMixin\n * @mixes SlotMixin\n * @mixes FieldMixin\n * @mixes DelegateFocusMixin\n */\nclass Select extends DelegateFocusMixin(FieldMixin(SlotMixin(ElementMixin(ThemableMixin(PolymerElement))))) {\n  static get is() {\n    return 'vaadin-select';\n  }\n\n  static get template() {\n    return html`\n      <style>\n        ::slotted([slot='value']) {\n          flex-grow: 1;\n          background-color: transparent;\n        }\n      </style>\n\n      <div class=\"vaadin-select-container\">\n        <div part=\"label\" on-click=\"_onClick\">\n          <slot name=\"label\"></slot>\n          <span part=\"required-indicator\" aria-hidden=\"true\" on-click=\"focus\"></span>\n        </div>\n\n        <vaadin-input-container\n          part=\"input-field\"\n          readonly=\"[[readonly]]\"\n          disabled=\"[[disabled]]\"\n          invalid=\"[[invalid]]\"\n          theme$=\"[[theme]]\"\n          on-click=\"_onClick\"\n        >\n          <slot name=\"prefix\" slot=\"prefix\"></slot>\n          <slot name=\"value\"></slot>\n          <div part=\"toggle-button\" slot=\"suffix\" aria-hidden=\"true\"></div>\n        </vaadin-input-container>\n\n        <div part=\"helper-text\">\n          <slot name=\"helper\"></slot>\n        </div>\n\n        <div part=\"error-message\">\n          <slot name=\"error-message\"></slot>\n        </div>\n      </div>\n\n      <vaadin-select-overlay\n        position-target=\"[[_inputContainer]]\"\n        opened=\"{{opened}}\"\n        with-backdrop=\"[[_phone]]\"\n        phone$=\"[[_phone]]\"\n        theme$=\"[[theme]]\"\n      ></vaadin-select-overlay>\n    `;\n  }\n\n  static get properties() {\n    return {\n      /**\n       * An array containing items that will be rendered as the options of the select.\n       *\n       * #### Example\n       * ```js\n       * select.items = [\n       *   { label: 'Most recent first', value: 'recent' },\n       *   { component: 'hr' },\n       *   { label: 'Rating: low to high', value: 'rating-asc' },\n       *   { label: 'Rating: high to low', value: 'rating-desc' },\n       *   { component: 'hr' },\n       *   { label: 'Price: low to high', value: 'price-asc', disabled: true },\n       *   { label: 'Price: high to low', value: 'price-desc', disabled: true }\n       * ];\n       * ```\n       *\n       * Note: each item is rendered by default as the internal `<vaadin-select-item>` that is an extension of `<vaadin-item>`.\n       * To render the item with a custom component, provide a tag name by the `component` property.\n       *\n       * @type {!Array<!SelectItem>}\n       */\n      items: {\n        type: Array,\n        observer: '__itemsChanged',\n      },\n\n      /**\n       * Set when the select is open\n       * @type {boolean}\n       */\n      opened: {\n        type: Boolean,\n        value: false,\n        notify: true,\n        reflectToAttribute: true,\n        observer: '_openedChanged',\n      },\n\n      /**\n       * Custom function for rendering the content of the `<vaadin-select>`.\n       * Receives two arguments:\n       *\n       * - `root` The `<vaadin-select-overlay>` internal container\n       *   DOM element. Append your content to it.\n       * - `select` The reference to the `<vaadin-select>` element.\n       * @type {!SelectRenderer | undefined}\n       */\n      renderer: Function,\n\n      /**\n       * It stores the the `value` property of the selected item, providing the\n       * value for iron-form.\n       * When there’s an item selected, it's the value of that item, otherwise\n       * it's an empty string.\n       * On change or initialization, the component finds the item which matches the\n       * value and displays it.\n       * If no value is provided to the component, it selects the first item without\n       * value or empty value.\n       * Hint: If you do not want to select any item by default, you can either set all\n       * the values of inner vaadin-items, or set the vaadin-select value to\n       * an inexistent value in the items list.\n       * @type {string}\n       */\n      value: {\n        type: String,\n        value: '',\n        notify: true,\n        observer: '_valueChanged',\n      },\n\n      /**\n       * The name of this element.\n       */\n      name: {\n        type: String,\n      },\n\n      /**\n       * A hint to the user of what can be entered in the control.\n       * The placeholder will be displayed in the case that there\n       * is no item selected, or the selected item has an empty\n       * string label, or the selected item has no label and it's\n       * DOM content is empty.\n       */\n      placeholder: {\n        type: String,\n      },\n\n      /**\n       * When present, it specifies that the element is read-only.\n       * @type {boolean}\n       */\n      readonly: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n      },\n\n      /** @private */\n      _phone: Boolean,\n\n      /** @private */\n      _phoneMediaQuery: {\n        value: '(max-width: 420px), (max-height: 420px)',\n      },\n\n      /** @private */\n      _overlayElement: Object,\n\n      /** @private */\n      _inputContainer: Object,\n\n      /** @private */\n      _items: Object,\n    };\n  }\n\n  static get observers() {\n    return [\n      '_updateAriaExpanded(opened)',\n      '_updateAriaRequired(required)',\n      '_updateSelectedItem(value, _items, placeholder)',\n      '_rendererChanged(renderer, _overlayElement)',\n    ];\n  }\n\n  /** @protected */\n  get slots() {\n    return {\n      ...super.slots,\n      value: () => {\n        const button = document.createElement('vaadin-select-value-button');\n        button.setAttribute('aria-haspopup', 'listbox');\n        return button;\n      },\n    };\n  }\n\n  /** @protected */\n  get _valueButton() {\n    return this._getDirectSlotChild('value');\n  }\n\n  constructor() {\n    super();\n\n    // Ensure every instance has unique ID\n    const uniqueId = (Select._uniqueSelectId = 1 + Select._uniqueSelectId || 0);\n    this._fieldId = `${this.localName}-${uniqueId}`;\n\n    this._boundOnKeyDown = this._onKeyDown.bind(this);\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n\n    if (this._valueButton) {\n      this._valueButton.setAttribute('aria-labelledby', `${this._labelId} ${this._fieldId}`);\n\n      this._updateAriaRequired(this.required);\n      this._updateAriaExpanded(this.opened);\n\n      this._setFocusElement(this._valueButton);\n      this.ariaTarget = this._valueButton;\n\n      this._valueButton.addEventListener('keydown', this._boundOnKeyDown);\n    }\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    if (this._valueButton) {\n      this._valueButton.removeEventListener('keydown', this._boundOnKeyDown);\n    }\n    // Making sure the select is closed and removed from DOM after detaching the select.\n    this.opened = false;\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this._overlayElement = this.shadowRoot.querySelector('vaadin-select-overlay');\n    this._inputContainer = this.shadowRoot.querySelector('[part~=\"input-field\"]');\n\n    this.addController(\n      new MediaQueryController(this._phoneMediaQuery, (matches) => {\n        this._phone = matches;\n      }),\n    );\n\n    processTemplates(this);\n  }\n\n  /**\n   * Requests an update for the content of the select.\n   * While performing the update, it invokes the renderer passed in the `renderer` property.\n   *\n   * It is not guaranteed that the update happens immediately (synchronously) after it is requested.\n   */\n  requestContentUpdate() {\n    if (!this._overlayElement) {\n      return;\n    }\n\n    this._overlayElement.requestContentUpdate();\n\n    if (this._menuElement && this._menuElement.items) {\n      this._updateSelectedItem(this.value, this._menuElement.items);\n    }\n  }\n\n  /**\n   * @param {SelectRenderer | undefined | null} renderer\n   * @param {SelectOverlay | undefined} overlay\n   * @private\n   */\n  _rendererChanged(renderer, overlay) {\n    if (!overlay) {\n      return;\n    }\n\n    overlay.setProperties({ owner: this, renderer: renderer || this.__defaultRenderer });\n\n    this.requestContentUpdate();\n  }\n\n  /**\n   * @param {SelectItem[] | undefined | null} newItems\n   * @param {SelectItem[] | undefined | null} oldItems\n   * @private\n   */\n  __itemsChanged(newItems, oldItems) {\n    if (newItems || oldItems) {\n      this.requestContentUpdate();\n    }\n  }\n\n  /**\n   * @param {HTMLElement} menuElement\n   * @protected\n   */\n  _assignMenuElement(menuElement) {\n    if (menuElement && menuElement !== this.__lastMenuElement) {\n      this._menuElement = menuElement;\n\n      // Ensure items are initialized\n      this.__initMenuItems(menuElement);\n\n      menuElement.addEventListener('items-changed', () => {\n        this.__initMenuItems(menuElement);\n      });\n\n      menuElement.addEventListener('selected-changed', () => this.__updateValueButton());\n      // Use capture phase to make it possible for `<vaadin-grid-pro-edit-select>`\n      // to override and handle the keydown event before the value change happens.\n      menuElement.addEventListener('keydown', (e) => this._onKeyDownInside(e), true);\n      menuElement.addEventListener(\n        'click',\n        () => {\n          this.__userInteraction = true;\n          this.opened = false;\n        },\n        true,\n      );\n\n      menuElement.setAttribute('role', 'listbox');\n\n      // Store the menu element reference\n      this.__lastMenuElement = menuElement;\n    }\n  }\n\n  /** @private */\n  __initMenuItems(menuElement) {\n    if (menuElement.items) {\n      this._items = menuElement.items;\n      this._items.forEach((item) => item.setAttribute('role', 'option'));\n    }\n  }\n\n  /** @private */\n  _valueChanged(value, oldValue) {\n    this.toggleAttribute('has-value', Boolean(value));\n\n    // Skip validation for the initial empty string value\n    if (value === '' && oldValue === undefined) {\n      return;\n    }\n    this.validate();\n  }\n\n  /**\n   * Opens the overlay if the field is not read-only.\n   *\n   * @private\n   */\n  _onClick(event) {\n    // Prevent parent components such as `vaadin-grid`\n    // from handling the click event after it bubbles.\n    event.preventDefault();\n\n    this.opened = !this.readonly;\n  }\n\n  /**\n   * @param {!KeyboardEvent} e\n   * @protected\n   */\n  _onKeyDown(e) {\n    if (!this.readonly && !this.opened) {\n      if (/^(Enter|SpaceBar|\\s|ArrowDown|Down|ArrowUp|Up)$/.test(e.key)) {\n        e.preventDefault();\n        this.opened = true;\n      } else if (/[\\p{L}\\p{Nd}]/u.test(e.key) && e.key.length === 1) {\n        const selected = this._menuElement.selected;\n        const currentIdx = selected !== undefined ? selected : -1;\n        const newIdx = this._menuElement._searchKey(currentIdx, e.key);\n        if (newIdx >= 0) {\n          this.__userInteraction = true;\n\n          // Announce the value selected with the first letter shortcut\n          this._updateAriaLive(true);\n          this._menuElement.selected = newIdx;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {!KeyboardEvent} e\n   * @protected\n   */\n  _onKeyDownInside(e) {\n    if (/^(Tab)$/.test(e.key)) {\n      this.opened = false;\n    }\n  }\n\n  /** @private */\n  _openedChanged(opened, wasOpened) {\n    if (opened) {\n      // Avoid multiple announcements when a value gets selected from the dropdown\n      this._updateAriaLive(false);\n\n      if (!this._overlayElement || !this._menuElement || !this.focusElement || this.disabled || this.readonly) {\n        this.opened = false;\n        return;\n      }\n\n      this._overlayElement.style.setProperty(\n        '--vaadin-select-text-field-width',\n        this._inputContainer.offsetWidth + 'px',\n      );\n\n      // Preserve focus-ring to restore it later\n      const hasFocusRing = this.hasAttribute('focus-ring');\n      this._openedWithFocusRing = hasFocusRing;\n\n      // Opened select should not keep focus-ring\n      if (hasFocusRing) {\n        this.removeAttribute('focus-ring');\n      }\n\n      this._menuElement.focus();\n    } else if (wasOpened) {\n      this.focus();\n      if (this._openedWithFocusRing) {\n        this.setAttribute('focus-ring', '');\n      }\n      this.validate();\n    }\n  }\n\n  /** @private */\n  _updateAriaExpanded(opened) {\n    if (this._valueButton) {\n      this._valueButton.setAttribute('aria-expanded', opened ? 'true' : 'false');\n    }\n  }\n\n  /** @private */\n  _updateAriaRequired(required) {\n    if (this._valueButton) {\n      this._valueButton.setAttribute('aria-required', required ? 'true' : 'false');\n    }\n  }\n\n  /** @private */\n  _updateAriaLive(ariaLive) {\n    if (this._valueButton) {\n      if (ariaLive) {\n        this._valueButton.setAttribute('aria-live', 'polite');\n      } else {\n        this._valueButton.removeAttribute('aria-live');\n      }\n    }\n  }\n\n  /** @private */\n  __attachSelectedItem(selected) {\n    let labelItem;\n\n    const label = selected.getAttribute('label');\n    if (label) {\n      labelItem = this.__createItemElement({ label });\n    } else {\n      labelItem = selected.cloneNode(true);\n    }\n\n    // store reference to the original item\n    labelItem._sourceItem = selected;\n\n    this.__appendValueItemElement(labelItem);\n\n    // ensure the item gets proper styles\n    labelItem.selected = true;\n  }\n\n  /**\n   * @param {!SelectItem} item\n   * @private\n   */\n  __createItemElement(item) {\n    const itemElement = document.createElement(item.component || 'vaadin-select-item');\n    if (item.label) {\n      itemElement.textContent = item.label;\n    }\n    if (item.value) {\n      itemElement.value = item.value;\n    }\n    if (item.disabled) {\n      itemElement.disabled = item.disabled;\n    }\n    return itemElement;\n  }\n\n  /**\n   * @param {!HTMLElement} itemElement\n   * @private\n   */\n  __appendValueItemElement(itemElement) {\n    itemElement.removeAttribute('tabindex');\n    itemElement.removeAttribute('role');\n    itemElement.setAttribute('id', this._fieldId);\n\n    this._valueButton.appendChild(itemElement);\n  }\n\n  /** @private */\n  __updateValueButton() {\n    if (!this._valueButton) {\n      return;\n    }\n\n    this._valueButton.innerHTML = '';\n\n    const selected = this._items[this._menuElement.selected];\n\n    this._valueButton.removeAttribute('placeholder');\n\n    if (!selected) {\n      if (this.placeholder) {\n        const item = this.__createItemElement({ label: this.placeholder });\n        this.__appendValueItemElement(item);\n        this._valueButton.setAttribute('placeholder', '');\n      }\n    } else {\n      this.__attachSelectedItem(selected);\n\n      if (!this._valueChanging) {\n        this._selectedChanging = true;\n        this.value = selected.value || '';\n        if (this.__userInteraction) {\n          this.opened = false;\n          this.dispatchEvent(new CustomEvent('change', { bubbles: true }));\n          this.__userInteraction = false;\n        }\n        delete this._selectedChanging;\n      }\n    }\n  }\n\n  /** @private */\n  _updateSelectedItem(value, items) {\n    if (items) {\n      this._menuElement.selected = items.reduce((prev, item, idx) => {\n        return prev === undefined && item.value === value ? idx : prev;\n      }, undefined);\n      if (!this._selectedChanging) {\n        this._valueChanging = true;\n        this.__updateValueButton();\n        delete this._valueChanging;\n      }\n    }\n  }\n\n  /**\n   * Override method inherited from `FocusMixin` to not remove focused\n   * state when select is opened and focus moves to list-box.\n   * @return {boolean}\n   * @protected\n   * @override\n   */\n  _shouldRemoveFocus() {\n    return !this.opened;\n  }\n\n  /**\n   * Override method inherited from `FocusMixin` to validate on blur.\n   * @param {boolean} focused\n   * @protected\n   * @override\n   */\n  _setFocused(focused) {\n    super._setFocused(focused);\n\n    if (!focused) {\n      this.validate();\n    }\n  }\n\n  /**\n   * Returns true if `value` is valid, and sets the `invalid` flag appropriately.\n   *\n   * @return {boolean} True if the value is valid and sets the `invalid` flag appropriately\n   */\n  validate() {\n    return !(this.invalid = !(this.disabled || !this.required || this.value));\n  }\n\n  /**\n   * Renders items when they are provided by the `items` property and clears the content otherwise.\n   * @param {!HTMLElement} root\n   * @param {!Select} _select\n   * @private\n   */\n  __defaultRenderer(root, _select) {\n    if (!this.items || this.items.length === 0) {\n      root.textContent = '';\n      return;\n    }\n\n    let listBox = root.firstElementChild;\n    if (!listBox) {\n      listBox = document.createElement('vaadin-select-list-box');\n      root.appendChild(listBox);\n    }\n\n    listBox.textContent = '';\n    this.items.forEach((item) => {\n      listBox.appendChild(this.__createItemElement(item));\n    });\n  }\n\n  /**\n   * Fired when the user commits a value change.\n   *\n   * @event change\n   */\n}\n\ncustomElements.define(Select.is, Select);\n\nexport { Select };\n","/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { Item } from '@vaadin/item/src/vaadin-item.js';\n\n/**\n * An element used internally by `<vaadin-select>`. Not intended to be used separately.\n *\n * @extends Item\n * @protected\n */\nclass SelectItem extends Item {\n  static get is() {\n    return 'vaadin-select-item';\n  }\n}\n\ncustomElements.define(SelectItem.is, SelectItem);\n","/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { ListBox } from '@vaadin/list-box/src/vaadin-list-box.js';\n\n/**\n * An element used internally by `<vaadin-select>`. Not intended to be used separately.\n *\n * @extends ListBox\n * @protected\n */\nclass SelectListBox extends ListBox {\n  static get is() {\n    return 'vaadin-select-list-box';\n  }\n}\n\ncustomElements.define(SelectListBox.is, SelectListBox);\n","/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { OverlayElement } from '@vaadin/vaadin-overlay/src/vaadin-overlay.js';\nimport { PositionMixin } from '@vaadin/vaadin-overlay/src/vaadin-overlay-position-mixin.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles(\n  'vaadin-select-overlay',\n  css`\n    :host {\n      align-items: flex-start;\n      justify-content: flex-start;\n    }\n  `,\n  { moduleId: 'vaadin-select-overlay-styles' },\n);\n\n/**\n * An element used internally by `<vaadin-select>`. Not intended to be used separately.\n *\n * @extends OverlayElement\n * @protected\n */\nclass SelectOverlay extends PositionMixin(OverlayElement) {\n  static get is() {\n    return 'vaadin-select-overlay';\n  }\n\n  requestContentUpdate() {\n    super.requestContentUpdate();\n\n    if (this.owner) {\n      // Ensure menuElement reference is correct.\n      const menuElement = this._getMenuElement();\n      this.owner._assignMenuElement(menuElement);\n    }\n  }\n\n  /** @protected */\n  _getMenuElement() {\n    return Array.from(this.children).find((el) => el.localName !== 'style');\n  }\n}\n\ncustomElements.define(SelectOverlay.is, SelectOverlay);\n","/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { getAncestorRootNodes } from '@vaadin/component-base/src/dom-utils.js';\n\nconst PROP_NAMES_VERTICAL = {\n  start: 'top',\n  end: 'bottom',\n};\n\nconst PROP_NAMES_HORIZONTAL = {\n  start: 'left',\n  end: 'right',\n};\n\n/**\n * @polymerMixin\n */\nexport const PositionMixin = (superClass) =>\n  class PositionMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * The element next to which this overlay should be aligned.\n         * The position of the overlay relative to the positionTarget can be adjusted\n         * with properties `horizontalAlign`, `verticalAlign`, `noHorizontalOverlap`\n         * and `noVerticalOverlap`.\n         */\n        positionTarget: {\n          type: Object,\n          value: null,\n        },\n\n        /**\n         * When `positionTarget` is set, this property defines whether to align the overlay's\n         * left or right side to the target element by default.\n         * Possible values are `start` and `end`.\n         * RTL is taken into account when interpreting the value.\n         * The overlay is automatically flipped to the opposite side when it doesn't fit into\n         * the default side defined by this property.\n         */\n        horizontalAlign: {\n          type: String,\n          value: 'start',\n        },\n\n        /**\n         * When `positionTarget` is set, this property defines whether to align the overlay's\n         * top or bottom side to the target element by default.\n         * Possible values are `top` and `bottom`.\n         * The overlay is automatically flipped to the opposite side when it doesn't fit into\n         * the default side defined by this property.\n         */\n        verticalAlign: {\n          type: String,\n          value: 'top',\n        },\n\n        /**\n         * When `positionTarget` is set, this property defines whether the overlay should overlap\n         * the target element in the x-axis, or be positioned right next to it.\n         */\n        noHorizontalOverlap: {\n          type: Boolean,\n          value: false,\n        },\n\n        /**\n         * When `positionTarget` is set, this property defines whether the overlay should overlap\n         * the target element in the y-axis, or be positioned right above/below it.\n         */\n        noVerticalOverlap: {\n          type: Boolean,\n          value: false,\n        },\n      };\n    }\n\n    static get observers() {\n      return [\n        '__positionSettingsChanged(horizontalAlign, verticalAlign, noHorizontalOverlap, noVerticalOverlap)',\n        '__overlayOpenedChanged(opened, positionTarget)',\n      ];\n    }\n\n    constructor() {\n      super();\n\n      this._updatePosition = this._updatePosition.bind(this);\n    }\n\n    /** @protected */\n    connectedCallback() {\n      super.connectedCallback();\n\n      if (this.opened) {\n        this.__addUpdatePositionEventListeners();\n      }\n    }\n\n    /** @protected */\n    disconnectedCallback() {\n      super.disconnectedCallback();\n      this.__removeUpdatePositionEventListeners();\n    }\n\n    /** @private */\n    __addUpdatePositionEventListeners() {\n      window.addEventListener('resize', this._updatePosition);\n\n      this.__positionTargetAncestorRootNodes = getAncestorRootNodes(this.positionTarget);\n      this.__positionTargetAncestorRootNodes.forEach((node) => {\n        node.addEventListener('scroll', this._updatePosition, true);\n      });\n    }\n\n    /** @private */\n    __removeUpdatePositionEventListeners() {\n      window.removeEventListener('resize', this._updatePosition);\n\n      if (this.__positionTargetAncestorRootNodes) {\n        this.__positionTargetAncestorRootNodes.forEach((node) => {\n          node.removeEventListener('scroll', this._updatePosition, true);\n        });\n        this.__positionTargetAncestorRootNodes = null;\n      }\n    }\n\n    /** @private */\n    __overlayOpenedChanged(opened, positionTarget) {\n      this.__removeUpdatePositionEventListeners();\n\n      if (opened && positionTarget) {\n        this.__addUpdatePositionEventListeners();\n      }\n\n      if (opened) {\n        const computedStyle = getComputedStyle(this);\n        if (!this.__margins) {\n          this.__margins = {};\n          ['top', 'bottom', 'left', 'right'].forEach((propName) => {\n            this.__margins[propName] = parseInt(computedStyle[propName], 10);\n          });\n        }\n        this.setAttribute('dir', computedStyle.direction);\n\n        this._updatePosition();\n        // Schedule another position update (to cover virtual keyboard opening for example)\n        requestAnimationFrame(() => this._updatePosition());\n      }\n    }\n\n    get __isRTL() {\n      return this.getAttribute('dir') === 'rtl';\n    }\n\n    __positionSettingsChanged() {\n      this._updatePosition();\n    }\n\n    _updatePosition() {\n      if (!this.positionTarget || !this.opened) {\n        return;\n      }\n\n      const targetRect = this.positionTarget.getBoundingClientRect();\n\n      // Detect the desired alignment and update the layout accordingly\n      const shouldAlignStartVertically = this.__shouldAlignStartVertically(targetRect);\n      this.style.justifyContent = shouldAlignStartVertically ? 'flex-start' : 'flex-end';\n\n      const shouldAlignStartHorizontally = this.__shouldAlignStartHorizontally(targetRect, this.__isRTL);\n      const flexStart =\n        (!this.__isRTL && shouldAlignStartHorizontally) || (this.__isRTL && !shouldAlignStartHorizontally);\n      this.style.alignItems = flexStart ? 'flex-start' : 'flex-end';\n\n      // Get the overlay rect after possible overlay alignment changes\n      const overlayRect = this.getBoundingClientRect();\n\n      // Obtain vertical positioning properties\n      const verticalProps = this.__calculatePositionInOneDimension(\n        targetRect,\n        overlayRect,\n        this.noVerticalOverlap,\n        PROP_NAMES_VERTICAL,\n        this,\n        shouldAlignStartVertically,\n      );\n\n      // Obtain horizontal positioning properties\n      const horizontalProps = this.__calculatePositionInOneDimension(\n        targetRect,\n        overlayRect,\n        this.noHorizontalOverlap,\n        PROP_NAMES_HORIZONTAL,\n        this,\n        shouldAlignStartHorizontally,\n      );\n\n      // Apply the positioning properties to the overlay\n      Object.assign(this.style, verticalProps, horizontalProps);\n\n      this.toggleAttribute('bottom-aligned', !shouldAlignStartVertically);\n      this.toggleAttribute('top-aligned', shouldAlignStartVertically);\n\n      this.toggleAttribute('end-aligned', !flexStart);\n      this.toggleAttribute('start-aligned', flexStart);\n    }\n\n    __shouldAlignStartHorizontally(targetRect, rtl) {\n      // Using previous size to fix a case where window resize may cause the overlay to be squeezed\n      // smaller than its current space before the fit-calculations.\n      const contentWidth = Math.max(this.__oldContentWidth || 0, this.$.overlay.offsetWidth);\n      this.__oldContentWidth = this.$.overlay.offsetWidth;\n\n      const viewportWidth = Math.min(window.innerWidth, document.documentElement.clientWidth);\n      const defaultAlignLeft = (!rtl && this.horizontalAlign === 'start') || (rtl && this.horizontalAlign === 'end');\n\n      return this.__shouldAlignStart(\n        targetRect,\n        contentWidth,\n        viewportWidth,\n        this.__margins,\n        defaultAlignLeft,\n        this.noHorizontalOverlap,\n        PROP_NAMES_HORIZONTAL,\n      );\n    }\n\n    __shouldAlignStartVertically(targetRect) {\n      // Using previous size to fix a case where window resize may cause the overlay to be squeezed\n      // smaller than its current space before the fit-calculations.\n      const contentHeight = Math.max(this.__oldContentHeight || 0, this.$.overlay.offsetHeight);\n      this.__oldContentHeight = this.$.overlay.offsetHeight;\n\n      const viewportHeight = Math.min(window.innerHeight, document.documentElement.clientHeight);\n      const defaultAlignTop = this.verticalAlign === 'top';\n\n      return this.__shouldAlignStart(\n        targetRect,\n        contentHeight,\n        viewportHeight,\n        this.__margins,\n        defaultAlignTop,\n        this.noVerticalOverlap,\n        PROP_NAMES_VERTICAL,\n      );\n    }\n\n    // eslint-disable-next-line max-params\n    __shouldAlignStart(targetRect, contentSize, viewportSize, margins, defaultAlignStart, noOverlap, propNames) {\n      const spaceForStartAlignment =\n        viewportSize - targetRect[noOverlap ? propNames.end : propNames.start] - margins[propNames.end];\n      const spaceForEndAlignment = targetRect[noOverlap ? propNames.start : propNames.end] - margins[propNames.start];\n\n      const spaceForDefaultAlignment = defaultAlignStart ? spaceForStartAlignment : spaceForEndAlignment;\n      const spaceForOtherAlignment = defaultAlignStart ? spaceForEndAlignment : spaceForStartAlignment;\n\n      const shouldGoToDefaultSide =\n        spaceForDefaultAlignment > spaceForOtherAlignment || spaceForDefaultAlignment > contentSize;\n\n      return defaultAlignStart === shouldGoToDefaultSide;\n    }\n\n    /**\n     * Returns an object with CSS position properties to set,\n     * e.g. { top: \"100px\", bottom: \"\" }\n     */\n    // eslint-disable-next-line max-params\n    __calculatePositionInOneDimension(targetRect, overlayRect, noOverlap, propNames, overlay, shouldAlignStart) {\n      const cssPropNameToSet = shouldAlignStart ? propNames.start : propNames.end;\n      const cssPropNameToClear = shouldAlignStart ? propNames.end : propNames.start;\n\n      const currentValue = parseFloat(overlay.style[cssPropNameToSet] || getComputedStyle(overlay)[cssPropNameToSet]);\n\n      const diff =\n        overlayRect[shouldAlignStart ? propNames.start : propNames.end] -\n        targetRect[noOverlap === shouldAlignStart ? propNames.end : propNames.start];\n\n      return {\n        [cssPropNameToSet]: currentValue + diff * (shouldAlignStart ? -1 : 1) + 'px',\n        [cssPropNameToClear]: '',\n      };\n    }\n  };\n","/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * Returns an array of ancestor root nodes for the given node.\n *\n * A root node is either a document node or a document fragment node (Shadow Root).\n * The array is collected by a bottom-up DOM traversing that starts with the given node\n * and involves both the light DOM and ancestor shadow DOM trees.\n *\n * @param {Node} node\n * @return {Node[]}\n */\nexport function getAncestorRootNodes(node) {\n  const result = [];\n\n  while (node) {\n    if (node.nodeType === Node.DOCUMENT_NODE) {\n      result.push(node);\n      break;\n    }\n\n    if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n      result.push(node);\n      node = node.host;\n      continue;\n    }\n\n    if (node.assignedSlot) {\n      node = node.assignedSlot;\n      continue;\n    }\n\n    node = node.parentNode;\n  }\n\n  return result;\n}\n","/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { Button } from '@vaadin/button/src/vaadin-button.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles(\n  'vaadin-select-value-button',\n  css`\n    :host {\n      margin: 0;\n      min-width: 0;\n      width: 0;\n      height: auto;\n    }\n\n    ::slotted(:not([slot])) {\n      padding-left: 0;\n      padding-right: 0;\n      flex: auto;\n    }\n\n    /* placeholder styles */\n    ::slotted(:not([slot]):not([selected])) {\n      line-height: 1;\n    }\n\n    /* TODO: unsupported selector */\n    .vaadin-button-container {\n      text-align: inherit;\n    }\n\n    [part='label'] {\n      width: 100%;\n      padding: 0;\n      line-height: inherit;\n    }\n  `,\n  { moduleId: 'vaadin-select-value-button-styles' },\n);\n\n/**\n * An element used internally by `<vaadin-select>`. Not intended to be used separately.\n *\n * @extends Button\n * @protected\n */\nclass SelectValueButton extends Button {\n  static get is() {\n    return 'vaadin-select-value-button';\n  }\n}\n\ncustomElements.define(SelectValueButton.is, SelectValueButton);\n","/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * A controller for listening on media query changes.\n */\nexport class MediaQueryController {\n  constructor(query, callback) {\n    /**\n     * The CSS media query to evaluate.\n     *\n     * @type {string}\n     * @protected\n     */\n    this.query = query;\n\n    /**\n     * Function to call when media query changes.\n     *\n     * @type {Function}\n     * @protected\n     */\n    this.callback = callback;\n\n    this._boundQueryHandler = this._queryHandler.bind(this);\n  }\n\n  hostConnected() {\n    this._removeListener();\n\n    this._mediaQuery = window.matchMedia(this.query);\n\n    this._addListener();\n\n    this._queryHandler(this._mediaQuery);\n  }\n\n  hostDisconnected() {\n    this._removeListener();\n  }\n\n  /** @private */\n  _addListener() {\n    if (this._mediaQuery) {\n      this._mediaQuery.addListener(this._boundQueryHandler);\n    }\n  }\n\n  /** @private */\n  _removeListener() {\n    if (this._mediaQuery) {\n      this._mediaQuery.removeListener(this._boundQueryHandler);\n    }\n\n    this._mediaQuery = null;\n  }\n\n  /** @private */\n  _queryHandler(mediaQuery) {\n    if (typeof this.callback === 'function') {\n      this.callback(mediaQuery.matches);\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\n\n/**\n * A mixin to provide content for named slots defined by component.\n *\n * @polymerMixin\n */\nexport const SlotMixin = dedupingMixin(\n  (superclass) =>\n    class SlotMixinClass extends superclass {\n      /**\n       * List of named slots to initialize.\n       * @protected\n       */\n      get slots() {\n        return {};\n      }\n\n      /** @protected */\n      ready() {\n        super.ready();\n        this._connectSlotMixin();\n      }\n\n      /** @private */\n      _connectSlotMixin() {\n        Object.keys(this.slots).forEach((slotName) => {\n          // Ignore labels of nested components, if any\n          const hasContent = this._getDirectSlotChild(slotName) !== undefined;\n\n          if (!hasContent) {\n            const slotFactory = this.slots[slotName];\n            const slotContent = slotFactory();\n            if (slotContent instanceof Element) {\n              if (slotName !== '') {\n                slotContent.setAttribute('slot', slotName);\n              }\n              this.appendChild(slotContent);\n            }\n          }\n        });\n      }\n\n      /** @protected */\n      _getDirectSlotChild(slotName) {\n        return Array.from(this.childNodes).find((node) => {\n          // Either an element (any slot) or a text node (only un-named slot).\n          return (\n            (node.nodeType === Node.ELEMENT_NODE && node.slot === slotName) ||\n            (node.nodeType === Node.TEXT_NODE && node.textContent.trim() && slotName === '')\n          );\n        });\n      }\n    },\n);\n","import { LitElement, html, render } from \"lit\";\r\nimport { guard } from \"lit/directives/guard.js\";\r\n\r\nimport \"@vaadin/dialog\";\r\n\r\nclass MyDialog extends LitElement {\r\n  static properties = {\r\n    dialogOpened: { type: Boolean, state: true },\r\n    body: { type: Object },\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.dialogOpened = false;\r\n    this.body = html``;\r\n  }\r\n\r\n  open() {\r\n    this.dialogOpened = true;\r\n  }\r\n\r\n  close() {\r\n    this.dialogOpened = false;\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <vaadin-dialog\r\n        .opened=\"${this.dialogOpened}\"\r\n        @opened-changed=\"${(e) => (this.dialogOpened = e.detail.value)}\"\r\n        .renderer=\"${guard([], () => (root) => {\r\n          render(this.body, root);\r\n        })}\"\r\n      ></vaadin-dialog>\r\n    `;\r\n  }\r\n}\r\n\r\ncustomElements.define(\"my-dialog\", MyDialog);\r\n","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {noChange, Part} from '../lit-html.js';\nimport {directive, Directive, DirectiveParameters} from '../directive.js';\n\n// A sentinal that indicates guard() hasn't rendered anything yet\nconst initialValue = {};\n\nclass GuardDirective extends Directive {\n  private _previousValue: unknown = initialValue;\n\n  render(_value: unknown, f: () => unknown) {\n    return f();\n  }\n\n  override update(_part: Part, [value, f]: DirectiveParameters<this>) {\n    if (Array.isArray(value)) {\n      // Dirty-check arrays by item\n      if (\n        Array.isArray(this._previousValue) &&\n        this._previousValue.length === value.length &&\n        value.every((v, i) => v === (this._previousValue as Array<unknown>)[i])\n      ) {\n        return noChange;\n      }\n    } else if (this._previousValue === value) {\n      // Dirty-check non-arrays by identity\n      return noChange;\n    }\n\n    // Copy the value if it's an array so that if it's mutated we don't forget\n    // what the previous values were.\n    this._previousValue = Array.isArray(value) ? Array.from(value) : value;\n    const r = this.render(value, f);\n    return r;\n  }\n}\n\n/**\n * Prevents re-render of a template function until a single value or an array of\n * values changes.\n *\n * Values are checked against previous values with strict equality (`===`), and\n * so the check won't detect nested property changes inside objects or arrays.\n * Arrays values have each item checked against the previous value at the same\n * index with strict equality. Nested arrays are also checked only by strict\n * equality.\n *\n * Example:\n *\n * ```js\n * html`\n *   <div>\n *     ${guard([user.id, company.id], () => html`...`)}\n *   </div>\n * `\n * ```\n *\n * In this case, the template only rerenders if either `user.id` or `company.id`\n * changes.\n *\n * guard() is useful with immutable data patterns, by preventing expensive work\n * until data updates.\n *\n * Example:\n *\n * ```js\n * html`\n *   <div>\n *     ${guard([immutableItems], () => immutableItems.map(i => html`${i}`))}\n *   </div>\n * `\n * ```\n *\n * In this case, items are mapped over only when the array reference changes.\n *\n * @param value the value to check before re-rendering\n * @param f the template function\n */\nexport const guard = directive(GuardDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {GuardDirective};\n","import './theme/lumo/vaadin-dialog.js';\nexport * from './src/vaadin-dialog.js';\n","import '@vaadin/vaadin-overlay/theme/lumo/vaadin-overlay.js';\nimport './vaadin-dialog-styles.js';\nimport '../../src/vaadin-dialog.js';\n","import '@vaadin/vaadin-lumo-styles/spacing.js';\nimport { overlay } from '@vaadin/vaadin-lumo-styles/mixins/overlay.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst dialogOverlay = css`\n  /* Optical centering */\n  :host::before,\n  :host::after {\n    content: '';\n    flex-basis: 0;\n    flex-grow: 1;\n  }\n\n  :host::after {\n    flex-grow: 1.1;\n  }\n\n  [part='overlay'] {\n    border-radius: var(--lumo-border-radius-l);\n    box-shadow: 0 0 0 1px var(--lumo-shade-5pct), var(--lumo-box-shadow-xl);\n    background-image: none;\n    outline: none;\n    -webkit-tap-highlight-color: transparent;\n  }\n\n  [part='content'] {\n    padding: var(--lumo-space-l);\n  }\n\n  /* No padding */\n  :host([theme~='no-padding']) [part='content'] {\n    padding: 0;\n  }\n\n  /* Animations */\n\n  :host([opening]),\n  :host([closing]) {\n    animation: 0.25s lumo-overlay-dummy-animation;\n  }\n\n  :host([opening]) [part='overlay'] {\n    animation: 0.12s 0.05s vaadin-dialog-enter cubic-bezier(0.215, 0.61, 0.355, 1) both;\n  }\n\n  @keyframes vaadin-dialog-enter {\n    0% {\n      opacity: 0;\n      transform: scale(0.95);\n    }\n  }\n\n  :host([closing]) [part='overlay'] {\n    animation: 0.1s 0.03s vaadin-dialog-exit cubic-bezier(0.55, 0.055, 0.675, 0.19) both;\n  }\n\n  :host([closing]) [part='backdrop'] {\n    animation-delay: 0.05s;\n  }\n\n  @keyframes vaadin-dialog-exit {\n    100% {\n      opacity: 0;\n      transform: scale(1.02);\n    }\n  }\n`;\n\nregisterStyles('vaadin-dialog-overlay', [overlay, dialogOverlay], { moduleId: 'lumo-dialog' });\n","/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { processTemplates } from '@vaadin/component-base/src/templates.js';\nimport { OverlayElement } from '@vaadin/vaadin-overlay/src/vaadin-overlay.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ThemePropertyMixin } from '@vaadin/vaadin-themable-mixin/vaadin-theme-property-mixin.js';\nimport { DialogDraggableMixin } from './vaadin-dialog-draggable-mixin.js';\nimport { DialogResizableMixin } from './vaadin-dialog-resizable-mixin.js';\n\nregisterStyles(\n  'vaadin-dialog-overlay',\n  css`\n    /*\n      NOTE(platosha): Make some min-width to prevent collapsing of the content\n      taking the parent width, e. g., <vaadin-grid> and such.\n    */\n    [part='content'] {\n      min-width: 12em; /* matches the default <vaadin-text-field> width */\n    }\n\n    :host([has-bounds-set]) [part='overlay'] {\n      max-width: none;\n    }\n  `,\n  { moduleId: 'vaadin-dialog-overlay-styles' },\n);\n\nlet memoizedTemplate;\n\n/**\n * An element used internally by `<vaadin-dialog>`. Not intended to be used separately.\n *\n * @extends OverlayElement\n * @private\n */\nexport class DialogOverlay extends OverlayElement {\n  static get is() {\n    return 'vaadin-dialog-overlay';\n  }\n\n  static get template() {\n    if (!memoizedTemplate) {\n      memoizedTemplate = super.template.cloneNode(true);\n      const contentPart = memoizedTemplate.content.querySelector('[part=\"content\"]');\n      const overlayPart = memoizedTemplate.content.querySelector('[part=\"overlay\"]');\n      const resizerContainer = document.createElement('div');\n      resizerContainer.id = 'resizerContainer';\n      resizerContainer.classList.add('resizer-container');\n      resizerContainer.appendChild(contentPart);\n      overlayPart.appendChild(resizerContainer);\n    }\n    return memoizedTemplate;\n  }\n\n  static get properties() {\n    return {\n      modeless: Boolean,\n\n      withBackdrop: Boolean,\n    };\n  }\n\n  /**\n   * Updates the coordinates of the overlay.\n   * @param {!DialogOverlayBoundsParam} bounds\n   */\n  setBounds(bounds) {\n    const overlay = this.$.overlay;\n    const parsedBounds = { ...bounds };\n\n    if (overlay.style.position !== 'absolute') {\n      overlay.style.position = 'absolute';\n      this.setAttribute('has-bounds-set', '');\n      this.__forceSafariReflow();\n    }\n\n    for (const arg in parsedBounds) {\n      if (typeof parsedBounds[arg] === 'number') {\n        parsedBounds[arg] = `${parsedBounds[arg]}px`;\n      }\n    }\n\n    Object.assign(overlay.style, parsedBounds);\n  }\n\n  /**\n   * Retrieves the coordinates of the overlay.\n   * @return {!DialogOverlayBounds}\n   */\n  getBounds() {\n    const overlayBounds = this.$.overlay.getBoundingClientRect();\n    const containerBounds = this.getBoundingClientRect();\n    const top = overlayBounds.top - containerBounds.top;\n    const left = overlayBounds.left - containerBounds.left;\n    const width = overlayBounds.width;\n    const height = overlayBounds.height;\n    return { top, left, width, height };\n  }\n\n  /**\n   * Safari 13 renders overflowing elements incorrectly.\n   * This forces it to recalculate height.\n   * @private\n   */\n  __forceSafariReflow() {\n    const scrollPosition = this.$.resizerContainer.scrollTop;\n    const overlay = this.$.overlay;\n    overlay.style.display = 'block';\n\n    requestAnimationFrame(() => {\n      overlay.style.display = '';\n      this.$.resizerContainer.scrollTop = scrollPosition;\n    });\n  }\n}\n\ncustomElements.define(DialogOverlay.is, DialogOverlay);\n\n/**\n * `<vaadin-dialog>` is a Web Component for creating customized modal dialogs.\n *\n * ### Rendering\n *\n * The content of the dialog can be populated by using the renderer callback function.\n *\n * The renderer function provides `root`, `dialog` arguments.\n * Generate DOM content, append it to the `root` element and control the state\n * of the host element by accessing `dialog`. Before generating new content,\n * users are able to check if there is already content in `root` for reusing it.\n *\n * ```html\n * <vaadin-dialog id=\"dialog\"></vaadin-dialog>\n * ```\n * ```js\n * const dialog = document.querySelector('#dialog');\n * dialog.renderer = function(root, dialog) {\n *   root.textContent = \"Sample dialog\";\n * };\n * ```\n *\n * Renderer is called on the opening of the dialog.\n * DOM generated during the renderer call can be reused\n * in the next renderer call and will be provided with the `root` argument.\n * On first call it will be empty.\n *\n * ### Styling\n *\n * `<vaadin-dialog>` uses `<vaadin-dialog-overlay>` internal\n * themable component as the actual visible dialog overlay.\n *\n * See [`<vaadin-overlay>`](#/elements/vaadin-overlay) documentation.\n * for `<vaadin-dialog-overlay>` parts.\n *\n * Note: the `theme` attribute value set on `<vaadin-dialog>` is\n * propagated to the internal `<vaadin-dialog-overlay>` component.\n *\n * See [Styling Components](https://vaadin.com/docs/latest/ds/customization/styling-components) documentation.\n *\n * @fires {CustomEvent} resize - Fired when the dialog resize is finished.\n * @fires {CustomEvent} opened-changed - Fired when the `opened` property changes.\n *\n * @extends HTMLElement\n * @mixes ThemePropertyMixin\n * @mixes ElementMixin\n * @mixes DialogDraggableMixin\n * @mixes DialogResizableMixin\n */\nclass Dialog extends ThemePropertyMixin(ElementMixin(DialogDraggableMixin(DialogResizableMixin(PolymerElement)))) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: none;\n        }\n      </style>\n\n      <vaadin-dialog-overlay\n        id=\"overlay\"\n        on-opened-changed=\"_onOverlayOpened\"\n        on-mousedown=\"_bringOverlayToFront\"\n        on-touchstart=\"_bringOverlayToFront\"\n        theme$=\"[[theme]]\"\n        modeless=\"[[modeless]]\"\n        with-backdrop=\"[[!modeless]]\"\n        resizable$=\"[[resizable]]\"\n        focus-trap\n      ></vaadin-dialog-overlay>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-dialog';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * True if the overlay is currently displayed.\n       * @type {boolean}\n       */\n      opened: {\n        type: Boolean,\n        value: false,\n        notify: true,\n      },\n\n      /**\n       * Set to true to disable closing dialog on outside click\n       * @attr {boolean} no-close-on-outside-click\n       * @type {boolean}\n       */\n      noCloseOnOutsideClick: {\n        type: Boolean,\n        value: false,\n      },\n\n      /**\n       * Set to true to disable closing dialog on Escape press\n       * @attr {boolean} no-close-on-esc\n       * @type {boolean}\n       */\n      noCloseOnEsc: {\n        type: Boolean,\n        value: false,\n      },\n\n      /**\n       * Set the `aria-label` attribute for assistive technologies like\n       * screen readers. An empty string value for this property (the\n       * default) means that the `aria-label` attribute is not present.\n       */\n      ariaLabel: {\n        type: String,\n        value: '',\n      },\n\n      /**\n       * Custom function for rendering the content of the dialog.\n       * Receives two arguments:\n       *\n       * - `root` The root container DOM element. Append your content to it.\n       * - `dialog` The reference to the `<vaadin-dialog>` element.\n       * @type {DialogRenderer | undefined}\n       */\n      renderer: Function,\n\n      /**\n       * Set to true to remove backdrop and allow click events on background elements.\n       * @type {boolean}\n       */\n      modeless: {\n        type: Boolean,\n        value: false,\n      },\n    };\n  }\n\n  static get observers() {\n    return ['_openedChanged(opened)', '_ariaLabelChanged(ariaLabel)', '_rendererChanged(renderer)'];\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this.$.overlay.setAttribute('role', 'dialog');\n    this.$.overlay.addEventListener('vaadin-overlay-outside-click', this._handleOutsideClick.bind(this));\n    this.$.overlay.addEventListener('vaadin-overlay-escape-press', this._handleEscPress.bind(this));\n\n    processTemplates(this);\n  }\n\n  /**\n   * Requests an update for the content of the dialog.\n   * While performing the update, it invokes the renderer passed in the `renderer` property.\n   *\n   * It is not guaranteed that the update happens immediately (synchronously) after it is requested.\n   */\n  requestContentUpdate() {\n    this.$.overlay.requestContentUpdate();\n  }\n\n  /** @private */\n  _rendererChanged(renderer) {\n    this.$.overlay.setProperties({ owner: this, renderer });\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n    // Restore opened state if overlay was opened when disconnecting\n    if (this.__restoreOpened) {\n      this.opened = true;\n    }\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    // Close overlay and memorize opened state\n    this.__restoreOpened = this.opened;\n    this.opened = false;\n  }\n\n  /** @private */\n  _openedChanged(opened) {\n    this.$.overlay.opened = opened;\n  }\n\n  /** @private */\n  _ariaLabelChanged(ariaLabel) {\n    if (ariaLabel) {\n      this.$.overlay.setAttribute('aria-label', ariaLabel);\n    } else {\n      this.$.overlay.removeAttribute('aria-label');\n    }\n  }\n\n  /** @private */\n  _onOverlayOpened(e) {\n    if (e.detail.value === false) {\n      this.opened = false;\n    }\n  }\n\n  /**\n   * Close the dialog if `noCloseOnOutsideClick` isn't set to true\n   * @private\n   */\n  _handleOutsideClick(e) {\n    if (this.noCloseOnOutsideClick) {\n      e.preventDefault();\n    }\n  }\n\n  /**\n   * Close the dialog if `noCloseOnEsc` isn't set to true\n   * @private\n   */\n  _handleEscPress(e) {\n    if (this.noCloseOnEsc) {\n      e.preventDefault();\n    }\n  }\n\n  /** @private */\n  _bringOverlayToFront() {\n    if (this.modeless) {\n      this.$.overlay.bringToFront();\n    }\n  }\n}\n\ncustomElements.define(Dialog.is, Dialog);\n\nexport { Dialog };\n","/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { isTouch } from '@vaadin/component-base/src/browser-utils.js';\nimport { eventInWindow, getMouseOrFirstTouchEvent } from './vaadin-dialog-utils.js';\n\n/**\n * @polymerMixin\n */\nexport const DialogDraggableMixin = (superClass) =>\n  class VaadinDialogDraggableMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * Set to true to enable repositioning the dialog by clicking and dragging.\n         *\n         * By default, only the overlay area can be used to drag the element. But,\n         * a child element can be marked as a draggable area by adding a\n         * \"`draggable`\" class to it, this will by default make all of its children draggable also.\n         * If you want a child element to be draggable\n         * but still have its children non-draggable (by default), mark it with\n         * \"`draggable-leaf-only`\" class name.\n         *\n         * @type {boolean}\n         */\n        draggable: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n        },\n\n        /** @private */\n        _touchDevice: {\n          type: Boolean,\n          value: isTouch,\n        },\n\n        /* TODO: Expose as a public property (check naming) */\n        __dragHandleClassName: {\n          type: String,\n        },\n      };\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n      this._originalBounds = {};\n      this._originalMouseCoords = {};\n      this._startDrag = this._startDrag.bind(this);\n      this._drag = this._drag.bind(this);\n      this._stopDrag = this._stopDrag.bind(this);\n      this.$.overlay.$.overlay.addEventListener('mousedown', this._startDrag);\n      this.$.overlay.$.overlay.addEventListener('touchstart', this._startDrag);\n    }\n\n    /** @private */\n    _startDrag(e) {\n      // Don't initiate when there's more than 1 touch (pinch zoom)\n      if (e.type === 'touchstart' && e.touches.length > 1) {\n        return;\n      }\n\n      if (this.draggable && (e.button === 0 || e.touches)) {\n        const resizerContainer = this.$.overlay.$.resizerContainer;\n        const isResizerContainer = e.target === resizerContainer;\n        const isResizerContainerScrollbar =\n          e.offsetX > resizerContainer.clientWidth || e.offsetY > resizerContainer.clientHeight;\n        const isContentPart = e.target === this.$.overlay.$.content;\n\n        const isDraggable = e.composedPath().some((node, index) => {\n          if (!node.classList) {\n            return false;\n          }\n\n          const isDraggableNode = node.classList.contains(this.__dragHandleClassName || 'draggable');\n          const isDraggableLeafOnly = node.classList.contains('draggable-leaf-only');\n          const isLeafNode = index === 0;\n          return (isDraggableLeafOnly && isLeafNode) || (isDraggableNode && (!isDraggableLeafOnly || isLeafNode));\n        });\n\n        if ((isResizerContainer && !isResizerContainerScrollbar) || isContentPart || isDraggable) {\n          !isDraggable && e.preventDefault();\n          this._originalBounds = this.$.overlay.getBounds();\n          const event = getMouseOrFirstTouchEvent(e);\n          this._originalMouseCoords = { top: event.pageY, left: event.pageX };\n          window.addEventListener('mouseup', this._stopDrag);\n          window.addEventListener('touchend', this._stopDrag);\n          window.addEventListener('mousemove', this._drag);\n          window.addEventListener('touchmove', this._drag);\n          if (this.$.overlay.$.overlay.style.position !== 'absolute') {\n            this.$.overlay.setBounds(this._originalBounds);\n          }\n        }\n      }\n    }\n\n    /** @private */\n    _drag(e) {\n      const event = getMouseOrFirstTouchEvent(e);\n      if (eventInWindow(event)) {\n        const top = this._originalBounds.top + (event.pageY - this._originalMouseCoords.top);\n        const left = this._originalBounds.left + (event.pageX - this._originalMouseCoords.left);\n        this.$.overlay.setBounds({ top, left });\n      }\n    }\n\n    /** @private */\n    _stopDrag() {\n      window.removeEventListener('mouseup', this._stopDrag);\n      window.removeEventListener('touchend', this._stopDrag);\n      window.removeEventListener('mousemove', this._drag);\n      window.removeEventListener('touchmove', this._drag);\n    }\n  };\n","/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * Checks if the argument is a touch event and if so, returns a first touch.\n * Otherwise, if the mouse event was passed, returns it as is.\n * @param {!MouseEvent | !TouchEvent} e\n * @return {!MouseEvent | !Touch}\n * @protected\n */\nexport function getMouseOrFirstTouchEvent(e) {\n  return e.touches ? e.touches[0] : e;\n}\n\n/**\n * Checks whether a mouse or touch event is in window.\n * @param {!MouseEvent | !TouchEvent} e\n * @return {boolean}\n * @protected\n */\nexport function eventInWindow(e) {\n  return e.clientX >= 0 && e.clientX <= window.innerWidth && e.clientY >= 0 && e.clientY <= window.innerHeight;\n}\n","/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { eventInWindow, getMouseOrFirstTouchEvent } from './vaadin-dialog-utils.js';\n\nregisterStyles(\n  'vaadin-dialog-overlay',\n  css`\n    [part='overlay'] {\n      position: relative;\n      overflow: visible;\n      max-height: 100%;\n      display: flex;\n    }\n\n    [part='content'] {\n      box-sizing: border-box;\n      height: 100%;\n    }\n\n    .resizer-container {\n      overflow: auto;\n      flex-grow: 1;\n      border-radius: inherit; /* prevent child elements being drawn outside part=overlay */\n    }\n\n    [part='overlay'][style] .resizer-container {\n      min-height: 100%;\n      width: 100%;\n    }\n\n    :host(:not([resizable])) .resizer {\n      display: none;\n    }\n\n    .resizer {\n      position: absolute;\n      height: 16px;\n      width: 16px;\n    }\n\n    .resizer.edge {\n      height: 8px;\n      width: 8px;\n      top: -4px;\n      right: -4px;\n      bottom: -4px;\n      left: -4px;\n    }\n\n    .resizer.edge.n {\n      width: auto;\n      bottom: auto;\n      cursor: ns-resize;\n    }\n\n    .resizer.ne {\n      top: -4px;\n      right: -4px;\n      cursor: nesw-resize;\n    }\n\n    .resizer.edge.e {\n      height: auto;\n      left: auto;\n      cursor: ew-resize;\n    }\n\n    .resizer.se {\n      bottom: -4px;\n      right: -4px;\n      cursor: nwse-resize;\n    }\n\n    .resizer.edge.s {\n      width: auto;\n      top: auto;\n      cursor: ns-resize;\n    }\n\n    .resizer.sw {\n      bottom: -4px;\n      left: -4px;\n      cursor: nesw-resize;\n    }\n\n    .resizer.edge.w {\n      height: auto;\n      right: auto;\n      cursor: ew-resize;\n    }\n\n    .resizer.nw {\n      top: -4px;\n      left: -4px;\n      cursor: nwse-resize;\n    }\n  `,\n  { moduleId: 'vaadin-dialog-resizable-overlay-styles' },\n);\n\n/**\n * @polymerMixin\n */\nexport const DialogResizableMixin = (superClass) =>\n  class VaadinDialogResizableMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * Set to true to enable resizing the dialog by dragging the corners and edges.\n         * @type {boolean}\n         */\n        resizable: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n        },\n      };\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n      this._originalBounds = {};\n      this._originalMouseCoords = {};\n      this._resizeListeners = { start: {}, resize: {}, stop: {} };\n      this._addResizeListeners();\n    }\n\n    /** @private */\n    _addResizeListeners() {\n      // Note: edge controls added before corners\n      ['n', 'e', 's', 'w', 'nw', 'ne', 'se', 'sw'].forEach((direction) => {\n        const resizer = document.createElement('div');\n        this._resizeListeners.start[direction] = (e) => this._startResize(e, direction);\n        this._resizeListeners.resize[direction] = (e) => this._resize(e, direction);\n        this._resizeListeners.stop[direction] = () => this._stopResize(direction);\n        if (direction.length === 1) {\n          resizer.classList.add('edge');\n        }\n        resizer.classList.add('resizer');\n        resizer.classList.add(direction);\n        resizer.addEventListener('mousedown', this._resizeListeners.start[direction]);\n        resizer.addEventListener('touchstart', this._resizeListeners.start[direction]);\n        this.$.overlay.$.resizerContainer.appendChild(resizer);\n      });\n    }\n\n    /**\n     * @param {!MouseEvent | !TouchEvent} e\n     * @param {!DialogResizableDirection} direction\n     * @protected\n     */\n    _startResize(e, direction) {\n      // Don't initiate when there's more than 1 touch (pinch zoom)\n      if (e.type === 'touchstart' && e.touches.length > 1) {\n        return;\n      }\n\n      if (e.button === 0 || e.touches) {\n        e.preventDefault();\n\n        this._originalBounds = this.$.overlay.getBounds();\n        const event = getMouseOrFirstTouchEvent(e);\n        this._originalMouseCoords = { top: event.pageY, left: event.pageX };\n        window.addEventListener('mousemove', this._resizeListeners.resize[direction]);\n        window.addEventListener('touchmove', this._resizeListeners.resize[direction]);\n        window.addEventListener('mouseup', this._resizeListeners.stop[direction]);\n        window.addEventListener('touchend', this._resizeListeners.stop[direction]);\n        if (this.$.overlay.$.overlay.style.position !== 'absolute') {\n          this.$.overlay.setBounds(this._originalBounds);\n        }\n      }\n    }\n\n    /**\n     * @param {!MouseEvent | !TouchEvent} e\n     * @param {!DialogResizableDirection} resizer\n     * @protected\n     */\n    _resize(e, resizer) {\n      const event = getMouseOrFirstTouchEvent(e);\n      if (eventInWindow(event)) {\n        const minimumSize = 40;\n        resizer.split('').forEach((direction) => {\n          switch (direction) {\n            case 'n': {\n              const height = this._originalBounds.height - (event.pageY - this._originalMouseCoords.top);\n              const top = this._originalBounds.top + (event.pageY - this._originalMouseCoords.top);\n              if (height > minimumSize) {\n                this.$.overlay.setBounds({ top, height });\n              }\n              break;\n            }\n            case 'e': {\n              const width = this._originalBounds.width + (event.pageX - this._originalMouseCoords.left);\n              if (width > minimumSize) {\n                this.$.overlay.setBounds({ width });\n              }\n              break;\n            }\n            case 's': {\n              const height = this._originalBounds.height + (event.pageY - this._originalMouseCoords.top);\n              if (height > minimumSize) {\n                this.$.overlay.setBounds({ height });\n              }\n              break;\n            }\n            case 'w': {\n              const width = this._originalBounds.width - (event.pageX - this._originalMouseCoords.left);\n              const left = this._originalBounds.left + (event.pageX - this._originalMouseCoords.left);\n              if (width > minimumSize) {\n                this.$.overlay.setBounds({ left, width });\n              }\n              break;\n            }\n            default:\n              break;\n          }\n        });\n      }\n    }\n\n    /**\n     * @param {!DialogResizableDirection} direction\n     * @protected\n     */\n    _stopResize(direction) {\n      window.removeEventListener('mousemove', this._resizeListeners.resize[direction]);\n      window.removeEventListener('touchmove', this._resizeListeners.resize[direction]);\n      window.removeEventListener('mouseup', this._resizeListeners.stop[direction]);\n      window.removeEventListener('touchend', this._resizeListeners.stop[direction]);\n      this.dispatchEvent(new CustomEvent('resize', { detail: this._getResizeDimensions() }));\n    }\n\n    /**\n     * @return {!DialogResizeDimensions}\n     * @protected\n     */\n    _getResizeDimensions() {\n      const scrollPosition = this.$.overlay.$.resizerContainer.scrollTop;\n      const { width, height } = getComputedStyle(this.$.overlay.$.overlay);\n      const content = this.$.overlay.$.content;\n      content.setAttribute(\n        'style',\n        'position: absolute; top: 0; right: 0; bottom: 0; left: 0; box-sizing: content-box; height: auto;',\n      );\n      const { width: contentWidth, height: contentHeight } = getComputedStyle(content);\n      content.removeAttribute('style');\n      this.$.overlay.$.resizerContainer.scrollTop = scrollPosition;\n      return { width, height, contentWidth, contentHeight };\n    }\n  };\n"],"names":["$800sp","parcelRequire","$9d96e7b7425f1f11$var$ServerWatcher","LitElement","static","_dialog","type","Object","state","_newserverName","String","_newserverIP","items","Array","_selectedPingInterval","pingIntervals","constructor","super","serverWatcherList","localStorage","getItem","this","JSON","parse","undefined","label","value","firstUpdated","shadowRoot","querySelector","$7OSqw","default","$gn1Jb","badge","css","html","open","event","target","setItem","length","$beb0226d6b5091f0$export$4aebd143f31d0c0d","$kYpoE","registerStyles","moduleId","$hK9eV","$dfc7d88c5718f594$export$48513f6b9f8ce62d","$h3iXB","LabelMixin","$1j43v","CheckedMixin","$dzmMj","DelegateFocusMixin","$Ndodb","ActiveMixin","$1f7PC","ElementMixin","ThemableMixin","$lPkpD","ControllerMixin","PolymerElement","is","template","properties","indeterminate","Boolean","notify","reflectToAttribute","name","delegateProps","delegateAttrs","_setType","connectedCallback","_inputController","$fiVje","InputController","input","_setInputElement","_setFocusElement","stateTarget","ariaTarget","addController","$6kbwg","LabelledInputController","inputElement","_labelController","$cTI5Q","SlotTargetController","$","noop","node","__warnDeprecated","console","warn","_shouldSetActive","localName","_toggleChecked","checked","customElements","define","$cLHZm","$0f3ab62247f1e8d7$export$c5048e37f6715d08","dedupingMixin","superclass","$dvOav","DelegateStateMixin","$27fI9","DisabledMixin","$hLM5h","InputMixin","_onChange","$9d651605d0b524c9$export$c9c46f77e8a4f05b","observer","ready","_createDelegateAttrsObserver","_createDelegatePropsObserver","_stateTargetChanged","_ensureAttrsDelegated","_ensurePropsDelegated","_createMethodObserver","join","forEach","_delegateAttribute","_delegateProperty","_delegateAttrsChanged","values","index","_delegatePropsChanged","toggleAttribute","setAttribute","removeAttribute","$cefc1ff48d332316$export$6fe6306576253df9","readOnly","_boundOnInput","_onInput","bind","_boundOnChange","clear","_addInputListeners","addEventListener","_removeInputListeners","removeEventListener","_forwardInputValue","_inputElementChanged","oldInput","__userInput","isTrusted","_event","_toggleHasValue","hasValue","_valueChanged","newVal","oldVal","$9e103680efbad3f3$export$bfd52848c59c7c40","$d0ihx","FocusMixin","$5nC6f","TabindexMixin","autofocus","focusElement","_lastTabIndex","_boundOnBlur","_onBlur","_boundOnFocus","_onFocus","disabled","requestAnimationFrame","focus","_setFocused","blur","click","_focusElementChanged","element","oldElement","_addFocusListeners","__forwardTabIndex","tabindex","_removeFocusListeners","stopPropagation","dispatchEvent","Event","_shouldSetFocus","_disabledChanged","oldDisabled","_tabindexChanged","tabIndex","$fuZiW","$b244fddfcba85933$export$279fd706a2034fec","SlotController","host1","callback","document","createElement","host","uniqueId","_uniqueInputId","_inputId","id","$e651G","$b4893627c5a49042$export$d99e5f9960a2fc4f","EventTarget","slotName","slotFactory","slotInitializer","defaultId","generateId","prefix","field","dashToCamelCase","hostConnected","initialized","getSlotChild","initCustomNode","attachDefaultNode","initNode","observe","defaultNode","Element","appendChild","from","childNodes","find","nodeType","Node","ELEMENT_NODE","slot","TEXT_NODE","textContent","trim","_node","teardownNode","selector","__slotObserver","$tO1CV","FlattenedNodesObserver","info","current","newNode","addedNodes","removedNodes","isConnected","removeChild","$c6a16c9b9c0d4e63$export$cbcd29e611f64d3f","_labelId","labelId","_labelNode","$eN6VA","LabelController","_labelChanged","setLabel","$ac4b03ff61599eab$export$6263e1ddeb9de3f","_host","__updateLabelId","__updateDefaultLabel","__observeLabel","labelNode","hasLabel","__hasLabel","__toggleHasLabel","__labelObserver","disconnect","children","__isNotEmpty","MutationObserver","mutations","mutation","isLabelMutation","parentElement","attributes","attributeFilter","childList","subtree","characterData","CustomEvent","detail","$49ad8bd210824cb2$export$c0f474a50b9c72b8","labelController","__preventDuplicateLabelClick","__initLabel","inputClickHandler","e","stopImmediatePropagation","$963cd3122d932a2d$export$2f8705fc71168c07","sourceSlot","targetFactory","copyCallback","__copying","__checkAndCopyNodesToSlotTarget","__sourceSlotObserver","slotTarget","__slotTargetClones","nodes","assignedNodes","flatten","filter","innerHTML","__copyNodesToSlotTarget","clone","cloneNode","push","$ec90ddea841c5393$export$ef2184bd89960b14","$6iqDT","DataProviderMixin","$1MQDt","ArrayDataProviderMixin","$8a0G0","DynamicColumnsMixin","$eQl91","ActiveItemMixin","$jfqVX","ScrollMixin","$2YFoA","SelectionMixin","$a9kuo","SortMixin","$4QlFN","RowDetailsMixin","$ddXQW","KeyboardNavigationMixin","$lF8vJ","A11yMixin","$k9WF4","FilterMixin","$al71S","ColumnReorderingMixin","$6qq5G","ColumnResizingMixin","$bDjgR","EventContextMixin","$epydS","DragAndDropMixin","$iQ1fb","StylingMixin","observers","_safari","$e5Qg9","isSafari","_ios","isIOS","_firefox","isFirefox","_android","isAndroid","_touchDevice","isTouch","allRowsVisible","_recalculateColumnWidthOnceLoadingFinished","isAttached","__gridElement","_onAnimationEnd","recalculateColumnWidths","disconnectedCallback","__getFirstVisibleItem","_getVisibleRows","row","_isInViewport","_firstVisibleIndex","firstVisibleItem","__getLastVisibleItem","reverse","_lastVisibleIndex","lastVisibleItem","item","scrollTargetRect","table","getBoundingClientRect","itemRect","headerHeight","header","height","footerHeight","footer","bottom","top","hidden","sort","a","b","__virtualizer","$cpxvJ","Virtualizer","createElements","_createScrollerRows","updateElement","_updateScrollerItem","scrollContainer","scrollTarget","reorderElements","ResizeObserver","setTimeout","__updateFooterPositioning","$gh5QA","processTemplates","attributeChangedCallback","oldValue","newValue","__isRTL","__getBodyCellCoordinates","cell","contains","_item","column","_column","__focusBodyCell","row1","cell1","_effectiveSizeChanged","effectiveSize","virtualizer","hasData","columnTree","activeElement","cellCoordinates","size","update","flush","_resetKeyboardNavigation","__hasRowsWithClientHeight","clientHeight","__itemsReceived","_cache","isLoading","__getIntrinsicWidth","col","initialWidth","width","initialFlexGrow","flexGrow","width1","_allCells","reduce","Math","max","offsetWidth","__getDistributedWidth","col1","innerColumn","columnWidth","columnGroupWidth","sumOfWidthOfAllChildColumns","_visibleChildColumns","map","sum","curr","extraNecessarySpaceForGridColumnGroup","shareOfInnerColumnFromNecessaryExtraSpace","_recalculateColumnWidths","cols","_columnTree","_getColumns","autoWidth","count","rows","i","_updateRow","c","notifyPath","_cells","$f0RTt","beforeNextRender","_updateFirstAndLastColumn","_afterScroll","_createCell","tagName","_contentIndex","cellContent","replace","_content","isChrome","mouseUpListener","contentContainsFocusedElement","getRootNode","mouseUpWithinCell","composedPath","includes","columns","section","isColumnRow","noNotify","contentsFragment","createDocumentFragment","_vacant","cell2","rowDetailsRenderer","_detailsCells","detailsCell","indexOf","_configureDetailsCell","_a11ySetRowDetailsCell","_emptyCells","__updateHeaderFooterRowVisibility","_frozenCellsChanged","_updateFirstAndLastColumnForRow","visibleRowCells","headerRenderer","path","footerRenderer","_preventScrollerRotatingCellFocus","_effectiveSize","_a11yUpdateRowRowindex","_getItem","_columnTreeChanged","_renderColumnTree","headerRow","footerRow","firstElementChild","sizer","_resizeHandler","_a11yUpdateHeaderRows","_a11yUpdateFooterRows","generateCellClassNames","parseFloat","navigator","userAgent","match","style","paddingBottom","offsetHeight","_updateItem","model","__getRowModel","_toggleDetailsCell","detailsOpened","_a11yUpdateRowLevel","level","_a11yUpdateRowSelected","selected","expanded","_generateCellClassNames","_filterDragAndDrop","_renderer","owner","call","_updateDetailsCellHeight","_a11yUpdateRowExpanded","_updateDetailsCellHeights","animationName","__scrollToPendingIndex","_getIndexLevel","_isExpanded","_isSelected","_isDetailsOpened","requestContentUpdate","_renderHeaderAndFooter","__updateVisibleRows","start","end","notifyResize","$e50e4ae59d94a7b2$export$2552ae23c435b419","superClass","resizable","parent","parentNode","frozen","textAlign","_lastFrozen","_order","Number","_reorderStatus","_headerCell","_footerCell","_grid","__initialized","Function","_headerRenderer","computed","_footerRenderer","__gridColumnElement","_gridValue","_findHostGrid","el","test","assignedSlot","concat","_renderHeaderCellContent","_renderFooterCellContent","_flexGrowChanged","_columnPropChanged","_orderChanged","order","_widthChanged","_frozenChanged","_lastFrozenChanged","lastFrozen","_generateHeader","substr","lastIndexOf","toLowerCase","toUpperCase","_reorderStatusChanged","reorderStatus","_resizableChanged","headerCell","existingHandle","handle","_textAlignChanged","textAlignFallback","getComputedStyle","direction","_hiddenChanged","_previousHidden","_debouncerHiddenChanged","$7ruxp","Debouncer","debounce","$4iYL3","animationFrame","_updateLastFrozen","_runRenderer","renderer","args","apply","__renderCellsContent","cells","_clearCellContent","_$litPart$","_onHeaderRendererOrBindingChanged","_bindings","_renderBodyCellsContent","_onRendererOrBindingChanged","footerCell","_onFooterRendererOrBindingChanged","__setTextContent","__textHeaderRenderer","_defaultHeaderRenderer","_defaultRenderer","root","_owner","get","_defaultFooterRenderer","_computeHeaderRenderer","_computeRenderer","_computeFooterRenderer","$e50e4ae59d94a7b2$export$cc81acb7d2e85c4e","$2WAPk","DirMixin","$bd92c50457f58897$export$7b70192285428d22","component","window","Vaadin","templateRendererCallback","$8yeeQ","$9091d064379eb8b5$export$89be5a243e59c4b2","config","__adapter","IronListAdapter","scrollToIndex","startIndex","endIndex","firstVisibleIndex","adjustedFirstVisibleIndex","lastVisibleIndex","adjustedLastVisibleIndex","$639c8b24ba7abd68$var$OFFSET_ADJUST_MIN_THRESHOLD","$639c8b24ba7abd68$export$678740519b8b5f3","elementsContainer","_vidxOffset","_maxPages","timeouts","SCROLL_REORDER","IGNORE_WHEEL","__resizeObserver","overflow","position","_scrollHandler","_scrollLineHeight","_getScrollLineHeight","__onWheel","__mouseDown","__pendingReorder","__reorderElements","_manageFocus","_removeFocusedItem","scrollOffset","isNaN","_clamp","visibleElementCount","__getVisibleElements","targetVirtualIndex","floor","_virtualCount","__skipNextVirtualIndexAdjust","_scrollTop","_maxScrollTop","grid","__getIndexScrollOffset","__scrollReorderDebouncer","__debouncerWheelAnimationFrame","__virtualIndex","__updateElement","forceSameIndexUpdates","minHeight","__preventElementUpdates","__lastUpdatedIndex","__size","fvi","fviOffsetBefore","_itemsChanged","min","fviOffsetAfter","scrollTop","updateViewportBoundaries","styles","_scrollerPaddingTop","parseInt","_isRTL","_viewportWidth","_viewportHeight","_scrollPageHeight","_updateGridMetrics","_createPool","physicalItems","fragment","_assignModels","itemSet","_iterateItems","pidx","vidx","_physicalItems","_isClientFull","__clientFull","translate3d","_x","y","_z","transform","toggleScrollListener","_adjustVirtualIndexOffset","__previousScrollTop","_physicalCount","reusables","_getReusables","_physicalTop","physicalTop","_virtualStart","indexes","_physicalStart","timeOut","after","ctrlKey","_hasScrolledAncestor","deltaX","deltaY","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","_deltaYAcc","_wheelAnimationFrame","preventDefault","momentum","abs","_canScroll","scrollLeft","_hasResidualMomentum","_ignoreNewWheel","_debouncerIgnoreNewWheel","_previousMomentum","scrollHeight","scrollWidth","fontSize","display","body","adjustedVirtualStart","visibleElements","targetElement","targetPhysicalIndex","delta","i1","insertBefore","scale","offset","round","oldOffset","threshold","maxShift","maxOffset","setPrototypeOf","prototype","$8tSVg","ironList","$62cba2a22d915106$var$IOS","$62cba2a22d915106$var$IOS_TOUCH_SCROLLING","$62cba2a22d915106$export$ec0e32fd950ee2df","_ratio","_scrollPosition","_physicalSize","_physicalAverage","_physicalAverageCount","_estScrollHeight","_scrollHeight","_physicalSizes","_firstVisibleIndexVal","_lastVisibleIndexVal","_itemsPerRow","_itemWidth","_rowHeight","_templateCost","_parentModel","_physicalBottom","_scrollBottom","_virtualEnd","_hiddenContentSize","_physicalRows","_scrollOffset","_maxVirtualStart","virtualCount","_convertIndexToCompleteRow","_virtualStartVal","val","_physicalStartVal","_physicalEnd","_physicalCountVal","_optPhysicalSize","Infinity","_isVisible","idx","physicalOffset","_getPhysicalSizeIncrement","idx1","_estRowsInView","physicalOffset1","_defaultScrollTarget","_virtualRowCount","ceil","isScrollingDown","idxAdjustment","_update","_debounce","_increasePoolIfNeeded","microTask","fromTop","ith","offsetContent","physicalItemHeight","idxs","protectedOffsetContent","virtualStart","virtualEnd","physicalCount","scrollBottom","movingUp","_updateMetrics","pop","_positionItems","_updateScrollerSize","nextPhysicalCount","correction","nextIncrease","ts","performance","now","_isIndexRendered","_focusedVirtualIndex","_getPhysicalIndex","idlePeriod","_render","_gridChanged","newGrid","oldGrid","change","_physicalIndexForKey","_resetScrollPosition","_adjustVirtualIndex","indexSplices","some","splice","addedCount","removed","_getActiveElement","affectedIndexRendered","_forwardItemPath","fn","rtn","arguments","_computeVidx","newPhysicalSize","oldPhysicalSize","prevAvgCount","prevPhysicalAvg","_adjustScrollPosition","totalItemWidth","rowOffset","modulus","x","_shouldRenderNextRow","itemId","deltaHeight","pos","forceUpdate","currentTopItem","currentVirtualItem","targetOffsetTop","hiddenContentSize","_resetAverage","updateSizeForItem","updateSizeForIndex","_isIndexVisible","v","cb","asyncModule","_debouncers","enqueueDebouncer","$fc54076445a61750$export$9d59ada4c9e6f512","_a11yGetHeaderRowCount","_a11yGetFooterRowCount","_a11yUpdateGridSize","bodyColumns","__isRowExpandable","__isRowCollapsible","_a11yUpdateCellColspan","colspan","_a11yUpdateSorters","querySelectorAll","sorter","asc","desc","$ace652de2284d298$export$27a98d7313d07798","activeItem","scroller","_onClick","_activateItem","clickedItem","_itemsEqual","defaultPrevented","getAttribute","_isFocusable","$ace652de2284d298$export$4c063cf1350e6fed","isFocusableElement","$9HAAa","$14d31a82dadf538b$export$3cd4163c76fc3263","__setArrayDataProvider","arrayDataProvider","createArrayDataProvider","__items","setProperties","_arrayDataProvider","dataProvider","__dataProviderOrItemsChanged","clearCache","$710481af48ca67dc$var$get","object","split","obj","property","$710481af48ca67dc$var$checkPaths","arrayToCheck","action","result","$710481af48ca67dc$var$normalizeEmptyValue","toString","$710481af48ca67dc$var$compare","$710481af48ca67dc$export$1083be4cf14a5227","allItems","params","filters","every","filter1","filterValueLowercase","$710481af48ca67dc$var$filter","isArray","sortOrders","sortOrder","p","n","$710481af48ca67dc$var$multiSort","pageSize","page","slice","$4L69O","$7871516810ca4d1b$export$ead5922a6d91d639","columnReorderingAllowed","_orderBaseScope","addListener","_onTrackEvent","_reorderGhost","_onTouchStart","_onTouchMove","_onTouchEnd","_onContextMenu","hasAttribute","_startTouchReorderTimeout","_onTrackStart","touches","clientX","clientY","_draggedColumn","clearTimeout","_onTrackEnd","_onTrack","_cellFromPoint","childElementCount","_setSiblingsReorderStatus","_updateGhost","visibility","_updateGhostPosition","_autoScroller","targetCell","targetColumn","_getTargetColumn","_isSwapAllowed","_isSwappableByPosition","_swapColumnOrders","_lastDragClientX","_getColumnsInOrder","elementFromPoint","eventClientX","eventClientY","ghostRect","targetLeft","targetTop","_left","_top","left","ghost","innerText","propertyName","_updateOrders","splices","$2DS6y","updateColumnOrders","status","child","sibling","rightDiff","right","leftDiff","column1","column2","differentColumns","sameParent","sameFrozen","sourceCellRect","targetRect","draggedColumn","candidate","$1ec9315a97520713$export$7eb7dedc37481b57","scope","baseOrder","$4ad968d4f7475649$export$91a9baada9a7adf3","_onHeaderTrack","_childColumns","columnRowCells","minWidth","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","marginLeft","marginRight","maxWidth","array","resizedColumn","$49591729091bc998$export$4f31ca4eb92b48aa","ItemCache1","parentCache","parentItem","itemCaches","pendingRequests","keys","getItemForIndex","cache","scaledIndex","getCacheAndIndex","updateSize","prev","subCache","ensureSubCacheForScaledIndex","_loadPage","thisLevelIndex","expandedIndex","$49591729091bc998$export$79425da92da3e003","loading","_hasData","itemHasChildrenPath","itemIdPath","expandedItems","__expandedKeys","_sizeChanged","_getPageForIndex","getItemId","has","_expandedItemsChanged","__computeExpandedKeys","base","expandedKeys","Set","add","expandItem","collapseItem","_setLoading","_mapSorters","_mapFilters","currentItems","itemsIndex","itemIndex","_debouncerApplyCachedData","_pageSizeChanged","oldPageSize","_checkSize","_dataProviderChanged","oldDataProvider","_ensureFirstPageLoaded","_debouncerCheckSize","item1","item2","_getItemIndexInArray","__pendingScrollToIndex","$a7ddf2735d673a14$var$DropMode","$a7ddf2735d673a14$var$DropLocation","$a7ddf2735d673a14$export$45ce8f0c1cd6767c","dropMode","rowsDraggable","dragFilter","dropFilter","__dndAutoScrollThreshold","_onDragStart","_onDragEnd","_onDragOver","_onDragLeave","_onDrop","exec","rowRect","dataTransfer","setDragImage","__getViewportRows","setData","__formatDefaultTransferData","setProperty","updateStyles","draggedItems","setDragData","data","setDraggedItemsCount","originalEvent","_clearDragStyles","_dropLocation","_dragOverItem","__dndAutoScroll","row3","dropAbove","__dndAutoScrolling","headerBottom","footerTop","topDiff","bottomDiff","scrollTopDelta","dragData","types","getData","bubbles","cancelable","dropTargetItem","dropLocation","content","_dragDropAccessChanged","filterDragAndDrop","dragDisabled","dropDisabled","$5f0fc83c878eb371$export$7df7176f40c4d270","_addNodeObserver","_hasColumnGroups","_getChildColumns","getFlattenedNodes","_isColumnElement","_flattenColumnGroups","_getColumnTree","rootColumns","_updateColumnTree","_arrayEquals","_observer","hasColumnElements","nodeCollection","allRemovedCells","flatMap","filterNotConnected","__removeSorters","_sorters","__removeFilters","_filters","_debouncerCheckImports","_checkImports","arr1","arr2","l","elementName","cellIndex","$8782490b0f16c062$export$84bb4cc24bc6f49d","getEventContext","context","assign","$ead226dbae07887d$export$59d951188ba66257","_filterChanged","__addFilter","__applyFilters","filtersToRemove","$9a0aeac782e30f30$export$854dddb85da20dfd","_headerFocusable","_itemsFocusable","_footerFocusable","_navigatingIsHidden","_focusedItemIndex","_focusedColumnOrder","interacting","_onKeyDown","_onKeyUp","_onFocusIn","_onFocusOut","_onContentFocusIn","_isMousedown","__rowFocusMode","__isRow","focusable","__isCell","_focusableChanged","oldFocusable","_updateGridSectionFocusTarget","_interactingChanged","__updateItemsFocusable","wasFocused","key","keyGroup","_detectInteracting","_ensureScrolledToIndex","__scrollIntoViewport","__isDetailsCell","matches","HTMLTableCellElement","HTMLTableRowElement","__getIndexOfChildElement","_onNavigationKeyDown","visibleItemsCount","dx","dy","activeRow","activeCell","forwardsKey","backwardsKey","_onCellNavigation","_onRowNavigation","dstRow","__navigateRows","__getIndexInGroup","bodyFallbackIndex","currentRowIndex","activeRowGroup","maxRowIndex","dstRowIndex","dstIsRowDetails","isRowDetails","dstItem","columnIndex","isCurrentCellRowDetails","dstColumns","dstSortedColumnOrders","maxOrderedColumnIndex","orderedColumnIndex","dstOrderedColumnIndex","dstColumnIndex","acc","dstCell","_scrollHorizontallyToCell","_onInteractionKeyDown","localTarget","localTargetIsTextInput","wantInteracting","_getGridEventLocation","focusTarget","_setInteracting","_predictFocusStepTarget","srcElement","step","tabOrder","focusexit","rowElement","_onTabKeyDown","shiftKey","itemsFocusTarget","targetRow","focusedItemRow","_onSpaceKeyDown","isRow","wasNavigating","rootTarget","_activeRowGroup","composed","_detectFocusedItemIndex","isInteracting","_getGridSectionFromFocusTarget","isInteractingWithinActiveSection","rowGroup","rowIndex","columnTreeLevel","__isValidFocusable","firstVisibleRow","firstVisibleCell","dstCellRect","dstCellIndex","tableRect","leftBoundary","rightBoundary","tableIndex","$386cd495346e3242$export$c6e017636dcce98b","detailsOpenedItems","_detailsCellResizeObserver","entries","_rowDetailsRendererChanged","isDetailsOpened","_detailsOpenedItemsChanged","changeRecord","removeProperty","openItemDetails","closeItemDetails","$e0344f8ac92fd16c$var$timeouts","$e0344f8ac92fd16c$export$31cec6757f2ecc0b","_frozenCells","_rowWithFocusedElement","_scrollLeft","outerscroller","dstRect","_scheduleScrolling","_scrollingFrame","_debounceScrolling","cancelAnimationFrame","__updateHorizontalScrollPosition","_updateOverflow","clientWidth","_debounceOverflow","_debouncerCacheElements","columnsRow","__getNormalizedScrollLeft","$22b14bad40250b1d$export$748254dc0d2dca9","selectedItems","__selectedKeys","selectItem","deselectItem","_toggleItem","__selectedItemsChanged","__computeSelectedKeys","selectedKeys","$763aa35b4bf5ad82$export$f9ad7c3ceda8eccd","multiSort","_previousSorters","_onSorterChanged","__updateSorter","__applySorters","sortersToRemove","__updateSortOrders","sorter1","_removeArrayItem","unshift","otherSorters","s","stringify","$db6e0c50dfc48ba8$export$32dc917b66055881","cellClassNameGenerator","__cellClassNameGeneratorChanged","__generatedClasses","className","classList","remove","$8ef5470cf941f3ac$var$$_documentContainer","head","$8ef5470cf941f3ac$export$86dd2208586a7ba3","_isConnected","_pathOrDirectionChanged","__dispatchSorterChangedEvenIfPossible","__isConnectedChanged","_getDisplayOrder","$76ebbe16d58e6b45$export$bc728acc1fe282b8","$jFg2R","GridColumn","__boundOnDirectionChanged","__onDirectionChanged","__rendererDirection","__getHeader","$c6755b2cde8a2b6d$var$verticalLayout","$b07380f4e8fc6140$export$e4d3124dc23dc9c9","$6e5c2bf6c63edfec$export$b821cb5d358838ed","readonly","invalid","$6e5c2bf6c63edfec$var$placeholderStyleWorkaround","$6e5c2bf6c63edfec$var$$tpl","$gSqdV","inputFieldShared","$c49607f6eb31cdbf$export$6f2f4d5c38fc8e55","$c49607f6eb31cdbf$export$bb4a547bb907939b","$eCLpr","requiredField","$fgOi8","fieldButton","$4xQpt","helper","$b1df5c81e1511053$export$a2f81f0e973500f1","$34f2e6037baf5f9d$export$4bbbbc0a0e57a7f","$aa5963d1f05b4e7a$export$caa603400c5f2880","$791KH","$652c1f3c20fcfbe4$export$2c73285ae9390cec","$8zhRS","PatternMixin","$899Qs","InputFieldMixin","maxlength","minlength","constraints","clearElement","clearButton","$9WJ8L","$5ee6cd0a66dd9072$export$baddb941d1128aa1","InputControlMixin","autocomplete","autocorrect","autocapitalize","_enabledCharPattern","_boundOnPaste","_onPaste","_boundOnDrop","_boundOnBeforeInput","_onBeforeInput","__data","__dataValue","validate","__shouldAcceptKey","metaKey","__enabledCharRegExp","pastedText","clipboardData","__enabledTextRegExp","draggedText","_enabledCharPatternChanged","charPattern","RegExp","$komE9","$73dc8bc0592c2381$export$48943dce8e72dc2b","$3QHYX","InputConstraintsMixin","$2p2VA","FieldMixin","KeyboardMixin","autoselect","clearButtonVisible","placeholder","title","_onClearButtonClick","__clear","select","sourceEvent","$1c002ffdf152d689$export$a1c6019e2d4681a","$V2vdJ","ValidateMixin","errorMessage","helperText","_helperId","_errorId","_errorController","errorId","_errorNode","_helperController","helperId","_helperNode","_fieldAriaController","$6aH5L","FieldAriaController","$ckrVM","HelperController","$5lz3X","ErrorController","__labelChanged","hasHelper","__helperChanged","helperNode","setHelperId","setLabelId","_errorMessageChanged","setErrorMessage","_helperTextChanged","setHelperText","_ariaTargetChanged","setTarget","_requiredChanged","required","setRequired","_invalidChanged","setInvalid","setErrorId","$3e4a1caf4274be2a$export$2f5b22783539ff2","__updateErrorId","__updateHasError","errorNode","error","hasError","$5Zekp","$47e51a704d3f86bb$export$3470bc9033706270","__required","__target","__setAriaRequiredAttribute","__setLabelIdToAriaAttribute","__labelId","__setErrorIdToAriaAttribute","__errorId","__setHelperIdToAriaAttribute","__helperId","__isGroupField","oldLabelId","__setAriaAttributeId","oldErrorId","oldHelperId","attr","newId","oldId","removeValueFromAttribute","addValueToAttribute","$45bdc3847d3eb7f6$var$deserializeAttributeValue","$45bdc3847d3eb7f6$var$serializeAttributeValue","$45bdc3847d3eb7f6$export$dd5fdeca6c2771d2","$45bdc3847d3eb7f6$export$944bbb5e8d729ef5","delete","$8f9d04cdf09adebb$export$591b08e240d4ee6f","__updateHelperId","__observeHelper","__hasHelper","__toggleHasHelper","__helperIdObserver","__applyDefaultHelper","hasHelperText","__helperObserver","isHelperMutation","$0ab743f0f58fca15$export$e9e8a342b9615b67","checkValidity","$2cd8585c78503c93$export$836a8961c2ba9a1a","_createConstraintsObserver","_hasValidConstraints","__isValidConstraint","_constraintsChanged","constraint","$63cf73d2d018b746$export$41b2f8a85576e05b","pattern","preventInvalidInput","_checkInputValue","_inputDebouncer","$7vBJ8","$533abb9d6d8607e9$export$bb4a547bb907939b","$68eQq","fieldShared","$cffKN","inputFieldContainer","$5778b17125b3364d$export$52aab205873de00","$476f013ce9075ee6$export$560439d24e47afce","$8ea31b1e54bf7562$export$e9969d8fd3e66300","$8ad787910e1da936$export$7061c75fc5af8b7e","$6d46607e9f09d972$export$6d08773d2e66f8f2","$dnAB3","ItemMixin","$37c45223a2dc4867$export$41f133550aa26f48","$cgc74","MultiSelectListMixin","orientation","focused","_checkImport","_scrollerElement","$9QnV0","$8ed0601093c5db00$export$2ffc1ce9650d9045","ListMixin","multiple","selectedValues","_onMultipleClick","_enhanceMultipleItems","selectedId","_scrollToLastSelectedItem","lastSelectedItem","_scrollToItem","_filterItems","_multipleChanged","$9C828","overlay","$6ffde4ef6e6f0715$export$29dd17c7f3c81c36","$d595cbcfb37c26f8$export$3cec20c954eb474","opened","withBackdrop","modeless","focusTrap","restoreFocusOnClose","restoreFocusNode","HTMLElement","_mouseDownInside","_mouseUpInside","_instance","_originalContentPart","_contentNodes","_oldOwner","_oldModel","_oldTemplate","_oldRenderer","_oldOpened","_boundMouseDownListener","_mouseDownListener","_boundMouseUpListener","_mouseUpListener","_boundOutsideClickListener","_outsideClickListener","_boundKeydownListener","_keydownListener","_setTemplateFromNodes","_boundIronOverlayCanceledListener","_ironOverlayCanceled","_boundIosResizeListener","_detectIosNavbar","__focusTrapController","$64XaJ","FocusTrapController","backdrop","innerHeight","landscape","innerWidth","documentElement","close","evt","_last","_ensureTemplatized","_openedChanged","wasOpened","__restoreFocusNode","_animatedOpening","afterNextRender","trapFocus","_addGlobalListeners","releaseFocus","_animatedClosing","_removeGlobalListeners","_flushAnimation","_shouldAnimate","getPropertyValue","_enqueueAnimation","handler","listener","_attachOverlay","_enterModalState","_finishOpening","_placeholder","createComment","bringToFront","_finishClosing","_detachOverlay","_exitModalState","_deepContains","__attachedInstances","__zIndex","_modelessChanged","pointerEvents","_previousDocumentPointerEvents","instances","_removeOldContent","replaceChild","connect","_stampOverlayTemplate","_Templatizer","$hNPW3","templatize","forwardHostProp","prop","templateRoot","_templateRoot","attachShadow","mode","scopeCssText","_removeNewRendererOrTemplate","oldTemplate","oldRenderer","_templateOrRendererChanged","Error","ownerOrModelChanged","templateChanged","rendererChanged","openedChanged","active","doc","ownerDocument","zIndex","frontmost","o","$cf5f4c88e9475d23$var$newInstance","$cf5f4c88e9475d23$var$HTMLTemplateElementExtension","create","HTMLTemplateElement","writable","$cf5f4c88e9475d23$var$DataTemplate","$wDi8K","PropertyEffects","$cf5f4c88e9475d23$var$MutableDataTemplate","$j2TR5","MutableData","$cf5f4c88e9475d23$var$templateInstanceBase","$cf5f4c88e9475d23$export$d325f89c810f68ec","props","_configureProperties","_stampTemplate","__dataHost","firstChild","nextSibling","__templatizeInstance","__templatizeOwner","__hideTemplateChildren__","_showHideChildren","options","__templatizeOptions","instanceProps","_enableProperties","hprop","__hostProps","_setPendingProperty","iprop","_setPendingPropertyOrPath","_enqueueClient","_addEventListenerToNode","eventName","_methodHost","parentModel","templateHost","hide","__polymerTextContent__","__polymerReplaced__","$bstnK","wrap","__polymerDisplay__","$cf5f4c88e9475d23$export$2f680825468947ff","_setUnmanagedPropertyToNode","__parentModel","$cf5f4c88e9475d23$var$MutableTemplateInstanceBase","$cf5f4c88e9475d23$var$findMethodHost","$cf5f4c88e9475d23$var$createTemplatizerClass","templateInfo","templatizerBase","mutableData","$cf5f4c88e9475d23$export$528486d340f30adf","mixin","klass","_bindTemplate","hostProps","userNotifyInstanceProp","notifyInstanceProp","_addPropertyEffect","PROPERTY_EFFECT_TYPES","NOTIFY","$cf5f4c88e9475d23$var$createNotifyInstancePropEffect","hasHostProps","inst","$cf5f4c88e9475d23$var$addNotifyEffects","$cf5f4c88e9475d23$var$addPropagateEffects","methodHost","userForwardHostProp","isTemplate","templatizeTemplateClass","templatizedBase","TemplatizedTemplate","TemplatizedTemplateExtension","PROPAGATE","$cf5f4c88e9475d23$var$createForwardHostPropEffect","_createNotifyingProperty","$eDYjA","legacyWarnings","declaredProps","_properties","propertyEffects","effects","part","signature","$cf5f4c88e9475d23$var$warnOnUndeclaredProperties","__dataProto","__dataTemp","__dataPending","__dataOld","hostProp","substring","instProp","strictTemplatePolicy","_parseTemplate","baseClass","templatizeInstanceClass","$ddd987ed34d93216$var$mutablePropertyChange","old","isObject","shouldChange","$ddd987ed34d93216$export$7a02473fcc50534a","_shouldPropertyChange","_mutablePropertyChange","$4415dcae2241ebfa$var$select","$4415dcae2241ebfa$var$selectOverlay","$iptoH","menuOverlay","$d6715d86b050071e$export$8f84a32fcf1a67e9","$d6715d86b050071e$var$menuOverlayExt","$d6715d86b050071e$export$97ec961ec34517c5","$0ed7775ff670d3d6$export$ef9b1a59e592288f","$2nyhI","SlotMixin","_phone","_phoneMediaQuery","_overlayElement","_inputContainer","_items","slots","button","_valueButton","_getDirectSlotChild","_uniqueSelectId","_fieldId","_boundOnKeyDown","_updateAriaRequired","_updateAriaExpanded","$8UmGu","MediaQueryController","_menuElement","_updateSelectedItem","_rendererChanged","__defaultRenderer","__itemsChanged","newItems","oldItems","_assignMenuElement","menuElement","__lastMenuElement","__initMenuItems","__updateValueButton","_onKeyDownInside","__userInteraction","currentIdx","newIdx","_searchKey","_updateAriaLive","hasFocusRing","_openedWithFocusRing","ariaLive","__attachSelectedItem","labelItem","__createItemElement","_sourceItem","__appendValueItemElement","itemElement","_valueChanging","_selectedChanging","_shouldRemoveFocus","_select","listBox","$9nFoW","$aac9fb8122caf8c3$var$SelectItem","Item","$4MQrc","$ac4b7f411f11e2b8$var$SelectListBox","ListBox","$ikUl1","$d6a96634e64ef869$var$SelectOverlay","$edHGS","PositionMixin","OverlayElement","_getMenuElement","$3vjkR","$a5a42b9ca3934741$var$PROP_NAMES_VERTICAL","$a5a42b9ca3934741$var$PROP_NAMES_HORIZONTAL","$a5a42b9ca3934741$export$71e21fd4f1429244","positionTarget","horizontalAlign","verticalAlign","noHorizontalOverlap","noVerticalOverlap","_updatePosition","__addUpdatePositionEventListeners","__removeUpdatePositionEventListeners","__positionTargetAncestorRootNodes","getAncestorRootNodes","__overlayOpenedChanged","computedStyle","__margins","propName","__positionSettingsChanged","shouldAlignStartVertically","__shouldAlignStartVertically","justifyContent","shouldAlignStartHorizontally","__shouldAlignStartHorizontally","flexStart","alignItems","overlayRect","verticalProps","__calculatePositionInOneDimension","horizontalProps","rtl","contentWidth","__oldContentWidth","viewportWidth","defaultAlignLeft","__shouldAlignStart","contentHeight","__oldContentHeight","viewportHeight","defaultAlignTop","contentSize","viewportSize","margins","defaultAlignStart","noOverlap","propNames","spaceForStartAlignment","spaceForEndAlignment","spaceForDefaultAlignment","shouldAlignStart","cssPropNameToSet","cssPropNameToClear","$28d343fd555b42c9$export$f468768a14585a00","DOCUMENT_NODE","DOCUMENT_FRAGMENT_NODE","$5ced0","$e03b981249dacc04$var$SelectValueButton","Button","$67c526574602d31f$export$aaf473010ee82b60","query","_boundQueryHandler","_queryHandler","_removeListener","_mediaQuery","matchMedia","_addListener","hostDisconnected","removeListener","mediaQuery","$1bb852ff1d2eb7af$export$8c574e90b19a21bf","_connectSlotMixin","slotContent","$d270015dc46d47b2$var$MyDialog","dialogOpened","render","$43nog","guard","initialValue","directive","Directive","_previousValue","_value","f","_part","noChange","$637864efbe3db8c1$var$dialogOverlay","$3577faf22fb825f5$var$memoizedTemplate","$3577faf22fb825f5$export$bd1d06c79be19e17","contentPart","overlayPart","resizerContainer","setBounds","bounds","parsedBounds","__forceSafariReflow","arg","getBounds","overlayBounds","containerBounds","scrollPosition","$3577faf22fb825f5$export$3ddf2d174ce01153","$1qFPd","ThemePropertyMixin","$guOSU","DialogDraggableMixin","$4GkVb","DialogResizableMixin","noCloseOnOutsideClick","noCloseOnEsc","ariaLabel","_handleOutsideClick","_handleEscPress","__restoreOpened","_ariaLabelChanged","_onOverlayOpened","_bringOverlayToFront","$c026eb5423cdc0cb$export$d76e9b524a14a97f","draggable","__dragHandleClassName","_originalBounds","_originalMouseCoords","_startDrag","_drag","_stopDrag","isResizerContainer","isResizerContainerScrollbar","offsetX","offsetY","isContentPart","isDraggable","isDraggableNode","isDraggableLeafOnly","isLeafNode","$a0gJa","getMouseOrFirstTouchEvent","pageY","pageX","eventInWindow","$7486e12e1ac1f1d4$export$665d57a81356a120","$7486e12e1ac1f1d4$export$130742042ff523af","$368b503787748f80$export$ddea1b90f0a10fb8","_resizeListeners","resize","stop","_addResizeListeners","resizer","_startResize","_resize","_stopResize","minimumSize","_getResizeDimensions"],"version":3,"file":"server-watcher.bfaf2686.js.map"}